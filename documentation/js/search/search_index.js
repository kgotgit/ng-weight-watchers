var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractBaseUtil.html",[0,0.203,1,1.005]],["body/classes/AbstractBaseUtil.html",[0,0.18,1,1.264,2,0.944,3,0.157,4,0.18,5,0.157,6,2.795,7,2.647,8,0.361,9,0.943,10,1.649,11,1.419,12,2.024,13,1.001,14,1.419,15,1.419,16,1.419,17,1.419,18,1.234,19,1.344,20,4.407,21,1.339,22,1.669,23,0.023,24,1.264,25,1.649,26,3.107,27,1.419,28,3.107,29,1.339,30,1.874,31,1.968,32,1.23,33,1.427,34,1.419,35,1.968,36,1.342,37,1.192,38,0.809,39,1.192,40,1.419,41,3.107,42,1.968,43,1.968,44,1.811,45,1.339,46,1.419,47,1.968,48,1.386,49,1.001,50,3.107,51,1.694,52,1.419,53,3.107,54,0.433,55,2.188,56,0.18,57,1.543,58,2.343,59,1.195,60,1.27,61,3.107,62,3.107,63,1.27,64,2.647,65,2.647,66,2.647,67,3.107,68,3.107,69,1.935,70,3.107,71,3.107,72,2.343,73,1.935,74,1.001,75,3.107,76,2.343,77,2.647,78,3.107,79,0.517,80,2.343,81,3.107,82,2.767,83,5.573,84,4.407,85,3.107,86,2.531,87,1.986,88,2.543,89,2.969,90,3.107,91,2.647,92,3.107,93,3.107,94,2.116,95,3.107,96,0.01,97,0.014,98,0.01]],["title/components/AppComponent.html",[79,0.583,99,1.196]],["body/components/AppComponent.html",[0,0.24,1,1.702,2,1.257,3,0.144,4,0.165,5,0.144,8,0.33,9,0.885,10,1.332,11,1.332,12,1.831,13,0.939,14,1.332,15,1.332,16,1.332,17,1.332,18,0.685,19,1.459,21,1.481,22,1.452,23,0.023,24,1.186,25,1.332,27,0.916,29,0.865,30,1.186,31,1.57,32,1.307,33,1.215,34,0.916,35,1.57,36,1.37,37,1.368,38,0.911,39,1.216,40,0.916,42,1.57,43,1.57,44,1.515,45,0.865,46,0.916,47,0.916,48,1.449,49,0.916,51,1.257,52,0.916,54,0.479,56,0.165,59,1.094,60,1.163,63,1.992,74,0.916,79,0.811,96,0.009,97,0.013,98,0.009,99,1.827,100,1.691,101,1.238,102,1.238,103,1.238,104,1.238,105,2.423,106,1.412,107,2.412,108,1.094,109,2.604,110,2.72,111,2.204,112,1.8,113,4.875,114,1.8,115,4.137,116,3.32,117,1.8,118,1.8,119,5.352,120,2.502,121,2.121,122,2.145,123,3.074,124,4.137,125,2.845,126,1.631,127,2.845,128,2.247,129,1.32,130,1.32,131,1.874,132,1.094,133,1.163,134,1.238,135,1.238,136,1.8,137,1.238,138,1.238,139,1.238,140,1.163,141,1.238,142,1.238,143,1.238,144,1.163,145,1.238,146,1.32,147,0.971,148,0.971,149,0.971,150,0.971,151,2.817,152,1.57,153,3.119,154,1.32,155,1.03,156,1.32,157,0.971,158,0.971,159,0.33,160,0.971,161,2.845,162,1.32,163,1.163,164,1.772,165,0.971,166,2.423,167,2.423,168,3.119,169,2.145,170,1.938,171,2.845,172,0.816,173,1.8,174,1.591,175,0.916,176,2.329,177,1.238,178,1.238,179,0.916,180,1.238,181,0.971,182,1.238,183,1.238,184,0.916,185,1.238,186,0.971,187,1.238,188,0.971,189,1.238,190,0.916,191,1.238,192,1.238,193,0.916,194,1.163,195,1.238,196,0.971,197,1.163,198,1.238,199,0.971,200,1.238,201,1.238,202,1.03,203,0.916,204,1.238,205,0.916,206,1.163,207,1.238]],["title/modules/AppModule.html",[208,0.949,209,2.387]],["body/modules/AppModule.html",[0,0.227,2,1.193,3,0.198,4,0.227,5,0.198,23,0.023,54,0.687,56,0.227,69,2.446,96,0.012,97,0.016,98,0.012,99,2.401,110,1.605,159,0.456,172,1.126,208,1.063,209,4.894,210,1.422,211,1.823,212,3.082,213,3.082,214,2.685,215,1.823,216,3.344,217,3.344,218,3.344,219,3.344,220,3.344,221,4.086,222,3.045,223,3.496,224,3.768,225,3.98,226,2.756,227,2.092,228,2.092,229,3.927,230,2.756,231,5.173,232,3.901,233,2.446,234,2.251,235,3.344,236,5.173,237,3.927,238,3.927,239,2.961,240,3.344,241,3.927,242,2.255,243,3.927,244,2.446,245,2.961,246,3.927,247,3.901,248,2.092,249,3.927,250,3.927,251,2.961,252,3.927,253,3.927,254,2.961,255,3.927,256,3.927,257,2.961,258,3.927,259,2.961,260,3.927]],["title/classes/AppPage.html",[0,0.203,261,2.642]],["body/classes/AppPage.html",[0,0.292,2,1.531,3,0.254,4,0.292,5,0.254,8,0.585,13,1.374,19,1.294,23,0.023,32,1.218,54,0.495,56,0.292,87,1.839,96,0.016,97,0.019,98,0.016,111,2.684,174,1.937,233,3.138,261,4.564,262,4.291,263,6.73,264,6.73,265,5.038,266,6.991,267,5.038,268,5.038,269,5.038,270,5.038,271,5.038,272,5.038]],["title/modules/AppRoutingModule.html",[208,0.949,221,2.183]],["body/modules/AppRoutingModule.html",[0,0.276,3,0.241,4,0.276,5,0.241,23,0.023,54,0.65,56,0.276,79,0.794,96,0.015,97,0.018,98,0.015,159,0.555,160,1.63,184,1.886,190,1.537,210,1.729,215,2.216,221,3.648,230,2.544,234,2.549,273,4.774,274,3.6,275,3.64,276,3.121,277,4.774,278,4.774,279,3.252,280,4.066,281,3.252,282,4.619,283,5.858,284,4.774,285,4.774,286,4.774,287,4.774,288,2.974,289,4.774,290,4.774,291,4.774,292,3.6,293,4.774,294,4.774]],["title/guards/AuthGuardService.html",[295,2.642,296,2.183]],["body/guards/AuthGuardService.html",[0,0.271,3,0.236,4,0.271,5,0.236,8,0.544,13,1.314,18,1.128,19,1.238,23,0.023,32,0.942,36,1.128,37,1.001,38,0.68,39,1.001,48,1.567,54,0.618,56,0.271,87,1.759,88,2.325,89,2.495,96,0.015,97,0.018,98,0.015,111,2.495,123,3.873,155,2.275,159,0.544,160,1.599,163,1.914,164,2.916,296,3.605,297,4.682,298,4.279,299,4.279,300,3.988,301,5.18,302,3.988,303,4.682,304,3.988,305,4.682,306,2.366,307,3.531,308,2.916,309,3.189,310,2.916,311,2.495,312,4.682,313,4.682,314,3.988,315,4.682,316,4.682]],["title/classes/BaseComponent.html",[0,0.203,107,1.347]],["body/classes/BaseComponent.html",[0,0.3,1,1.882,2,1.801,3,0.16,4,0.183,5,0.16,6,2.75,8,0.368,9,0.955,10,1.438,11,1.438,12,2.035,13,1.014,14,1.438,15,1.438,16,1.438,17,1.438,18,1.246,19,1.452,21,1.357,22,1.435,23,0.023,24,1.281,25,1.666,27,1.019,29,0.962,30,1.281,31,1.666,32,1.299,33,1.175,34,1.019,35,1.666,36,1.354,37,1.202,38,0.893,39,1.202,40,1.019,42,1.666,43,1.666,44,1.571,45,0.962,46,1.019,47,1.019,48,1.521,49,1.019,51,1.357,52,1.019,54,0.583,56,0.183,57,1.572,59,1.717,60,1.825,63,2.297,74,1.438,96,0.01,97,0.014,98,0.01,106,1.525,107,1.717,117,1.943,118,1.943,120,2.297,121,2.445,126,1.7,128,2.099,131,2.364,132,1.717,133,1.825,134,1.943,135,1.943,136,2.445,137,1.943,138,1.943,139,1.943,140,1.825,141,1.943,142,1.943,143,1.943,144,1.825,145,1.943,147,1.081,148,1.081,149,1.081,150,1.081,155,1.617,157,1.081,158,1.081,159,0.368,165,1.081,242,1.818,244,1.972,245,2.387,308,1.972,309,2.156,311,2.379,317,2.696,318,2.251,319,5.174,320,4.466,321,3.166,322,3.166,323,3.166,324,3.166,325,2.696,326,2.696,327,2.156,328,1.972,329,1.687,330,1.294,331,3.166,332,3.166,333,3.166,334,3.166,335,3.166,336,2.696,337,3.166,338,3.166,339,2.387,340,3.166,341,3.166,342,3.166]],["title/classes/BaseService.html",[0,0.203,343,2.183]],["body/classes/BaseService.html",[0,0.185,1,1.667,2,1.656,3,0.102,4,0.118,5,0.102,6,2.724,8,0.236,9,0.685,10,2.042,11,1.031,12,1.277,13,0.727,14,1.031,15,1.031,16,1.031,17,1.031,18,0.955,19,1.407,21,1.489,22,1.392,23,0.023,24,0.918,25,0.654,27,0.654,29,0.617,30,1.137,31,1.277,32,1.242,33,1.182,34,0.654,35,1.45,36,1.434,37,1.273,38,0.931,39,1.273,40,0.654,42,1.277,43,1.277,44,1.55,45,0.617,46,0.654,47,0.654,48,1.326,49,0.654,51,1.656,52,0.654,54,0.607,55,1.008,56,0.118,57,1.008,59,1.231,69,3.518,74,1.578,82,3.013,87,1.948,88,1.008,96,0.006,97,0.01,98,0.006,106,1.093,126,0.582,128,1.777,131,2.235,132,1.731,144,1.84,147,0.693,148,0.693,149,0.693,150,0.693,157,0.693,158,0.693,159,0.236,165,0.693,242,1.839,244,1.264,245,1.531,248,1.081,257,2.414,325,1.729,327,1.382,330,0.83,343,1.994,344,1.729,345,2.727,346,2.727,347,2.727,348,2.727,349,3.834,350,2.727,351,2.727,352,2.727,353,2.727,354,2.727,355,2.727,356,3.202,357,2.414,358,2.03,359,1.729,360,2.727,361,2.727,362,1.839,363,2.03,364,1.729,365,2.03,366,2.03,367,1.729,368,2.99,369,2.03,370,2.414,371,3.329,372,5.17,373,3.337,374,1.729,375,3.844,376,2.99,377,2.586,378,2.03,379,2.727,380,3.959,381,2.414,382,3.546,383,3.546,384,2.727,385,1.729,386,2.03,387,4.811,388,2.701,389,4.811,390,1.729,391,2.03,392,1.729,393,2.03,394,2.727,395,1.729,396,2.03,397,2.727,398,2.03,399,1.994,400,2.03,401,1.531,402,1.729,403,2.03,404,1.839,405,2.03,406,2.03,407,1.531,408,1.729,409,1.729,410,1.729,411,2.03,412,2.03,413,2.03,414,2.03,415,2.03,416,2.03,417,2.03,418,1.264,419,1.729,420,2.03,421,2.03,422,1.729,423,2.03,424,2.03,425,2.03,426,2.03,427,2.03,428,3.244,429,4.502,430,2.804,431,4.502,432,4.502,433,4.502,434,4.502,435,4.502,436,4.502,437,4.502,438,4.502,439,2.03,440,2.03,441,3.965,442,3.965,443,2.03,444,2.03,445,2.03,446,2.03,447,2.181,448,2.03,449,2.03,450,2.03,451,2.03,452,2.03,453,2.03,454,2.03,455,2.03,456,2.03,457,2.03,458,2.03,459,1.531,460,2.03,461,2.03,462,2.03,463,2.03]],["title/injectables/CoreInjectorService.html",[242,2.013,306,1.432]],["body/injectables/CoreInjectorService.html",[0,0.278,3,0.243,4,0.278,5,0.243,8,0.558,9,1.258,19,1.359,23,0.022,32,0.967,36,1.158,37,1.028,38,0.698,39,1.028,54,0.472,56,0.278,87,1.46,96,0.015,97,0.018,98,0.015,111,2.56,126,1.378,159,0.558,235,5.787,242,3.378,244,4.125,306,2.404,310,2.993,327,4.511,430,2.993,464,2.993,465,4.093,466,3.959,467,5.123,468,5.882,469,4.006,470,4.806,471,4.806,472,4.806,473,4.806,474,4.806,475,4.806,476,4.806,477,4.806,478,4.806,479,4.806]],["title/modules/CoreModule.html",[208,0.949,222,1.627]],["body/modules/CoreModule.html",[0,0.234,3,0.204,4,0.234,5,0.204,23,0.023,54,0.685,56,0.234,96,0.013,97,0.016,98,0.013,159,0.469,160,1.378,172,1.157,184,2.26,186,2.257,190,2.129,199,2.396,208,1.425,210,1.907,211,1.873,212,3.123,213,2.15,214,1.873,215,2.444,222,3.345,226,2.806,227,2.15,228,2.15,230,2.806,234,2.291,247,3.971,248,2.15,276,2.15,279,2.748,280,3.437,480,3.437,481,3.437,482,3.437,483,3.437,484,4.371,485,4.035,486,3.28,487,2.15,488,4.035,489,3.043,490,4.035,491,4.035,492,4.035,493,4.035,494,4.035,495,4.485,496,4.035,497,2.15,498,4.035,499,4.035,500,4.035]],["title/modules/FeaturesModule.html",[208,0.949,223,1.867]],["body/modules/FeaturesModule.html",[0,0.233,3,0.203,4,0.233,5,0.203,23,0.023,54,0.685,56,0.233,96,0.013,97,0.016,98,0.013,152,1.694,159,0.468,160,1.375,172,1.155,181,2.395,188,2.395,196,2.395,208,1.09,210,1.459,211,1.869,212,3.121,213,2.146,214,1.869,215,2.441,222,3.067,223,3.838,224,3.795,226,2.802,227,2.146,228,2.146,230,2.802,234,2.289,239,3.037,240,3.43,247,3.966,248,2.146,276,2.146,486,3.276,487,2.146,495,4.48,497,2.146,501,3.43,502,3.43,503,4.028,504,3.43,505,4.028,506,3.43,507,4.028,508,3.037,509,4.028,510,4.028,511,3.037,512,4.028,513,4.028,514,3.037,515,4.028,516,4.028,517,4.028]],["title/components/HomeComponent.html",[79,0.583,179,1.129]],["body/components/HomeComponent.html",[0,0.192,1,1.523,2,1.01,3,0.107,4,0.123,5,0.107,6,0.926,8,0.386,9,0.711,10,1.07,11,1.07,12,1.614,13,0.755,14,1.07,15,1.07,16,1.07,17,1.07,18,0.513,19,1.464,21,1.243,22,1.28,23,0.023,24,0.953,25,1.07,27,0.685,29,0.647,30,0.953,31,1.317,32,1.325,33,0.928,34,0.685,35,1.488,36,1.453,37,1.37,38,0.94,39,1.29,40,0.685,42,1.317,43,1.317,44,1.357,45,0.647,46,0.685,47,0.685,48,1.438,49,0.685,51,1.243,52,0.685,54,0.564,55,1.057,56,0.123,59,1.278,60,0.87,63,1.671,73,1.326,74,1.317,79,0.68,82,1.65,87,1.404,96,0.007,97,0.01,98,0.007,99,0.727,100,1.358,101,0.926,102,0.926,103,0.926,104,0.926,106,1.135,107,2.207,108,0.818,109,2.463,110,2.553,112,1.446,114,1.446,117,1.446,118,1.446,120,2.268,121,1.779,122,1.605,123,2.654,126,1.763,128,2.099,129,0.988,130,0.988,131,1.572,132,0.818,133,0.87,134,0.926,135,0.926,136,1.446,137,0.926,138,0.926,139,0.926,140,0.87,141,0.926,142,0.926,143,0.926,144,0.87,145,0.926,146,0.988,147,0.727,148,0.727,149,0.727,150,0.727,152,0.685,154,0.988,155,0.771,156,0.988,157,0.727,158,0.727,159,0.247,160,0.727,162,0.988,163,0.87,165,0.727,168,3.484,169,1.605,172,0.61,173,1.446,174,1.278,175,0.685,176,2.01,177,0.926,178,0.926,179,1.488,180,0.926,181,0.727,182,0.926,183,0.926,184,0.685,185,0.926,186,0.727,187,0.926,188,0.727,189,0.926,190,0.685,191,0.926,192,0.926,193,0.685,194,0.87,195,0.926,196,0.727,197,0.87,198,0.926,199,0.727,200,0.926,201,0.926,202,0.771,203,0.685,204,0.926,205,0.685,206,0.87,207,0.926,318,0.926,328,1.326,329,1.134,330,0.87,336,2.831,339,1.605,388,2.264,402,1.813,518,1.813,519,4.089,520,3.324,521,3.324,522,3.324,523,2.831,524,5.012,525,2.831,526,2.506,527,2.831,528,4.089,529,4.621,530,2.831,531,3.324,532,3.121,533,3.324,534,2.129,535,2.129,536,2.414,537,2.129,538,3.413,539,3.779,540,2.178,541,2.129,542,2.755,543,2.129,544,3.324,545,2.129,546,2.129,547,3.482,548,2.129,549,2.129,550,2.129,551,2.129,552,2.129,553,2.129,554,2.831,555,2.129,556,2.129,557,2.129,558,1.326,559,1.326,560,1.45,561,1.813,562,1.65,563,1.45,564,1.326,565,2.129,566,2.129,567,2.129,568,2.129,569,1.813,570,3.324,571,2.129,572,2.506,573,2.129,574,2.129,575,2.129,576,2.129,577,2.129,578,2.129,579,2.129,580,2.129,581,1.605,582,2.129,583,2.129,584,2.129,585,2.129,586,2.129,587,2.129,588,2.129,589,2.129,590,2.129,591,2.129,592,3.324,593,2.129,594,2.129,595,2.129,596,2.129,597,1.45,598,2.129,599,2.129,600,2.129,601,3.324,602,1.45,603,2.129,604,1.45,605,1.813,606,1.813,607,1.813,608,1.813,609,1.813,610,1.813,611,2.129,612,1.45,613,2.129]],["title/modules/HomeModule.html",[208,0.949,614,2.387]],["body/modules/HomeModule.html",[0,0.261,3,0.227,4,0.261,5,0.227,23,0.023,54,0.679,56,0.261,96,0.014,97,0.018,98,0.014,159,0.523,160,1.536,168,3.393,172,1.29,179,2.191,208,1.218,210,1.629,211,2.088,212,3.288,213,2.397,214,2.088,215,2.088,222,3.157,223,3.624,226,3.008,227,2.397,228,2.397,230,3.008,234,2.457,251,3.393,276,3.008,486,3.517,487,2.397,614,4.883,615,3.832,616,3.832,617,3.832,618,4.237,619,4.5,620,3.832,621,3.832,622,3.832]],["title/modules/HomeRoutingModule.html",[208,0.949,618,2.183]],["body/modules/HomeRoutingModule.html",[0,0.294,3,0.257,4,0.294,5,0.257,23,0.023,54,0.664,56,0.294,79,0.846,96,0.016,97,0.019,98,0.016,159,0.591,160,1.736,179,1.96,210,1.841,234,2.648,274,3.834,275,3.495,276,2.709,281,3.463,282,3.463,296,3.79,298,3.463,299,3.463,301,3.834,618,3.79,620,4.331,623,5.085,624,4.331,625,4.331,626,4.331,627,4.331]],["title/interceptors/HttpMockInterceptor.html",[225,2.183,628,2.985]],["body/interceptors/HttpMockInterceptor.html",[0,0.254,3,0.221,4,0.254,5,0.221,8,0.509,13,1.261,18,1.056,19,1.188,23,0.023,24,1.257,32,0.882,36,1.338,37,1.188,38,0.806,39,1.188,54,0.664,55,2.176,56,0.254,74,1.963,87,1.688,91,3.733,96,0.014,97,0.017,98,0.014,155,2.208,159,0.509,163,1.791,225,3.459,248,2.335,302,3.733,304,3.733,306,2.27,307,3.305,308,2.729,309,2.985,311,2.335,328,2.729,330,1.791,377,2.517,401,3.305,597,2.985,629,4.382,630,5.192,631,3.733,632,5.553,633,4.382,634,5.553,635,6.41,636,6.096,637,6.41,638,4.382,639,4.382,640,5.553,641,4.382,642,4.382,643,4.382,644,4.382,645,4.382,646,4.382,647,4.382,648,4.382,649,4.382,650,4.382,651,4.382,652,4.382,653,4.382,654,3.733]],["title/interfaces/IMessage.html",[404,2.013,655,1.269]],["body/interfaces/IMessage.html",[3,0.328,4,0.293,5,0.255,8,0.588,9,1.298,23,0.022,33,1.53,38,1.016,39,1.39,56,0.293,96,0.016,97,0.019,98,0.016,404,3.486,428,3.486,655,1.833,656,2.697,657,4.311,658,6.501,659,4.591,660,4.134,661,5.061,662,5.061,663,5.061,664,3.816,665,4.311]],["title/interfaces/IPersonDetails.html",[542,1.74,655,1.269]],["body/interfaces/IPersonDetails.html",[3,0.23,4,0.264,5,0.23,8,0.53,9,1.218,23,0.023,33,1.589,37,1.328,38,1.017,44,1.166,54,0.449,56,0.264,94,3.881,96,0.014,97,0.018,98,0.014,152,2.156,536,2.971,540,3.466,542,2.829,558,2.843,562,3.084,564,2.843,604,3.109,655,1.653,656,2.432,666,3.888,667,5.291,668,5.291,669,5.291,670,4.231,671,3.568,672,4.565,673,4.853,674,4.565,675,4.565,676,3.888,677,3.442,678,3.888,679,3.442,680,4.565,681,3.888,682,3.888,683,4.565,684,4.565]],["title/interfaces/IUser.html",[655,1.269,685,2.387]],["body/interfaces/IUser.html",[3,0.274,4,0.315,5,0.274,8,0.632,9,1.354,23,0.021,33,1.438,38,0.79,56,0.315,96,0.017,97,0.02,98,0.017,655,1.969,656,2.897,671,3.848,679,4.101,685,4.313,686,4.632]],["title/interfaces/IWeightHistory.html",[562,1.74,655,1.269]],["body/interfaces/IWeightHistory.html",[3,0.257,4,0.294,5,0.257,8,0.591,9,1.301,23,0.022,33,1.382,38,0.946,39,1.301,44,1.299,56,0.294,94,4.145,96,0.016,97,0.019,98,0.016,152,2.098,536,2.937,540,3.597,562,3.021,563,3.463,655,1.841,656,2.709,670,4.436,676,4.331,677,3.834,681,4.331,682,4.331,687,4.331,688,5.085,689,5.085]],["title/components/LineChartComponent.html",[79,0.583,181,1.196]],["body/components/LineChartComponent.html",[0,0.2,1,1.361,2,0.825,3,0.083,4,0.096,5,0.083,6,0.72,8,0.192,9,0.581,10,0.874,11,0.874,12,1.422,13,0.617,14,0.874,15,0.874,16,0.874,17,0.874,18,0.398,19,1.457,21,1.215,22,1.212,23,0.023,24,0.779,25,0.874,27,0.533,29,0.503,30,0.779,31,1.112,32,1.26,33,1.003,34,0.533,35,1.422,36,1.143,37,1.193,38,0.918,39,1.015,40,0.533,42,1.112,43,1.112,44,1.337,45,0.503,46,0.533,47,0.533,48,1.082,49,0.533,51,1.591,52,0.533,54,0.515,56,0.096,59,0.636,60,0.676,63,2.049,74,0.533,79,0.575,86,0.95,94,2.353,96,0.005,97,0.008,98,0.005,99,0.565,100,1.11,101,0.72,102,0.72,103,0.72,104,0.72,106,0.927,107,2.013,108,0.636,109,2.32,110,2.385,112,1.182,114,1.182,116,3.007,117,1.182,118,1.182,120,2.049,121,1.503,126,1.674,128,1.952,129,0.768,130,0.768,131,1.328,132,0.636,133,0.676,134,0.72,135,0.72,136,1.182,137,0.72,138,0.72,139,0.72,140,0.676,141,0.72,142,0.72,143,0.72,144,0.676,145,0.72,146,0.768,147,0.565,148,0.565,149,0.565,150,0.565,152,1.112,154,0.768,155,0.599,156,0.768,157,0.565,158,0.565,159,0.192,162,0.768,163,0.676,165,0.565,170,2.353,172,0.474,173,1.182,174,1.044,175,0.533,176,1.74,177,0.72,178,0.72,179,0.533,180,0.72,181,1.365,182,2.836,183,0.72,184,0.533,185,0.72,186,0.565,187,0.72,188,0.565,189,0.72,190,0.533,191,0.72,192,0.72,193,0.533,194,0.676,195,0.72,196,0.565,197,0.676,198,0.72,199,0.565,200,1.503,201,0.72,202,0.599,203,0.533,204,0.72,205,0.533,206,0.676,207,0.72,282,2.353,318,0.72,376,2.048,418,1.03,430,1.691,447,1.127,466,3.635,469,1.849,514,4.914,536,1.74,562,1.985,564,1.03,670,1.127,690,5.551,691,1.409,692,2.715,693,2.715,694,5.717,695,3.454,696,2.715,697,2.715,698,3.454,699,3.454,700,4.042,701,3.329,702,3.454,703,3.454,704,3.998,705,3.998,706,3.998,707,3.998,708,3.998,709,3.998,710,1.849,711,5.013,712,1.654,713,2.942,714,2.715,715,1.654,716,2.715,717,1.654,718,5.421,719,2.715,720,1.654,721,5.58,722,5.717,723,6.376,724,1.654,725,3.998,726,1.654,727,4.415,728,1.654,729,1.654,730,1.654,731,1.654,732,2.313,733,2.048,734,1.654,735,1.654,736,3.454,737,1.654,738,3.405,739,2.313,740,2.715,741,2.715,742,2.715,743,2.313,744,1.654,745,1.654,746,1.654,747,1.654,748,1.654,749,1.654,750,1.654,751,1.849,752,1.654,753,4.042,754,1.654,755,1.654,756,1.654,757,1.654,758,2.715,759,1.654,760,1.654,761,1.409,762,1.654,763,1.654,764,2.715,765,1.654,766,2.715,767,1.654,768,2.715,769,1.654,770,2.715,771,1.654,772,1.654,773,1.654,774,1.127,775,1.127,776,1.654,777,1.654,778,1.654,779,1.654,780,1.409,781,1.654,782,1.654,783,1.654,784,1.654,785,1.654,786,1.654,787,1.654,788,1.654,789,1.654,790,1.654,791,1.654,792,1.654,793,1.654,794,1.654,795,3.454,796,1.654,797,1.654,798,1.654,799,1.654,800,1.654,801,1.654,802,2.715,803,1.654,804,1.654,805,1.654,806,2.715,807,3.998,808,1.654,809,1.654,810,1.654,811,1.654,812,1.654,813,1.654,814,1.654,815,1.654,816,1.654,817,1.654,818,1.654,819,1.654,820,1.654,821,1.654,822,1.409,823,1.654,824,1.654,825,1.654,826,1.654,827,2.715,828,2.715,829,1.654,830,1.654,831,1.654,832,1.654,833,1.409,834,1.654,835,1.654,836,1.654,837,1.654,838,1.654,839,1.654,840,1.654,841,1.409,842,1.654,843,1.654,844,1.654,845,1.654,846,2.942,847,3.454,848,4.415,849,1.654,850,1.409,851,1.654,852,1.654,853,1.654,854,1.654,855,1.654]],["title/components/LoginComponent.html",[79,0.583,184,1.129]],["body/components/LoginComponent.html",[0,0.192,1,1.523,2,1.01,3,0.107,4,0.123,5,0.107,8,0.247,9,0.711,10,1.07,11,1.07,12,1.614,13,0.755,14,1.07,15,1.07,16,1.07,17,1.07,18,0.513,19,1.437,21,1.243,22,1.28,23,0.023,24,1.173,25,1.07,27,0.685,29,0.647,30,0.953,31,1.317,32,1.257,33,0.928,34,0.685,35,1.317,36,1.207,37,1.315,38,0.876,39,1.072,40,0.685,42,1.317,43,1.317,44,1.466,45,0.647,46,0.685,47,0.685,48,1.357,49,0.685,51,1.523,52,0.685,54,0.58,56,0.123,57,1.057,58,2.506,59,0.818,60,0.87,63,1.671,73,1.326,74,0.685,76,1.605,77,1.813,79,0.834,80,1.605,87,1.01,89,1.134,96,0.007,97,0.01,98,0.007,99,0.727,100,1.358,101,0.926,102,0.926,103,0.926,104,0.926,106,1.135,107,2.207,108,0.818,109,2.463,110,2.553,112,1.446,114,1.446,116,1.45,117,1.446,118,1.446,120,2.268,121,1.779,123,2.878,126,1.647,128,2.099,129,0.988,130,0.988,131,1.572,132,0.818,133,1.358,134,0.926,135,0.926,136,1.446,137,0.926,138,0.926,139,0.926,140,0.87,141,0.926,142,0.926,143,0.926,144,0.87,145,0.926,146,0.988,147,0.727,148,0.727,149,0.727,150,0.727,151,2.264,152,1.317,153,2.506,154,0.988,155,0.771,156,0.988,157,0.727,158,0.727,159,0.247,160,0.727,162,0.988,163,0.87,164,1.326,165,0.727,172,0.61,173,1.446,174,1.278,175,0.685,176,2.01,177,0.926,178,0.926,179,0.685,180,0.926,181,0.727,182,0.926,183,0.926,184,1.488,185,0.926,186,0.727,187,0.926,188,0.727,189,0.926,190,0.685,191,0.926,192,0.926,193,0.685,194,0.87,195,0.926,196,0.727,197,0.87,198,0.926,199,0.727,200,0.926,201,0.926,202,0.771,203,0.685,204,0.926,205,0.685,206,0.87,207,0.926,254,2.506,292,1.605,318,0.926,329,1.134,330,0.87,371,1.057,418,1.326,466,2.07,469,2.264,497,1.134,523,2.831,538,3.618,542,2.03,558,1.326,559,1.326,572,1.605,581,3.484,602,3.413,612,1.45,671,2.654,685,2.264,701,1.605,850,1.813,856,1.813,857,6.246,858,4.089,859,3.324,860,3.324,861,3.324,862,3.935,863,4.621,864,3.147,865,1.813,866,3.482,867,3.413,868,3.324,869,1.813,870,2.129,871,3.324,872,4.524,873,3.935,874,2.129,875,3.083,876,2.831,877,3.324,878,2.129,879,2.129,880,2.831,881,2.129,882,2.129,883,1.813,884,2.129,885,2.264,886,1.813,887,2.129,888,1.605,889,2.129,890,1.813,891,2.129,892,2.129,893,2.129,894,2.129,895,2.129,896,2.129,897,4.089,898,2.129,899,2.129,900,1.813,901,2.129,902,1.813,903,2.129,904,2.129,905,2.129,906,3.324,907,5.549,908,2.129,909,2.129,910,2.129,911,2.129,912,2.129,913,2.129,914,2.129,915,2.129,916,2.129,917,2.129,918,2.129,919,2.129,920,2.129,921,2.129,922,2.129,923,2.129,924,2.129,925,2.129,926,2.129,927,2.129,928,2.129,929,3.324,930,2.506,931,3.484,932,3.324,933,3.324,934,3.324,935,2.506,936,2.831,937,1.813,938,1.813,939,4.089,940,3.324,941,2.129,942,2.129,943,1.813,944,2.129,945,1.813]],["title/modules/MaterialModule.html",[208,0.949,484,2.183]],["body/modules/MaterialModule.html",[0,0.22,3,0.191,4,0.22,5,0.191,23,0.02,54,0.728,56,0.22,96,0.012,97,0.016,98,0.012,140,1.549,159,0.44,208,1.026,210,1.373,215,1.759,234,2.199,484,3.147,610,3.228,946,3.791,947,5.053,948,3.791,949,5.053,950,3.791,951,3.791,952,5.053,953,3.791,954,5.053,955,3.791,956,5.053,957,3.791,958,5.053,959,3.791,960,5.053,961,3.791,962,5.053,963,3.791,964,5.053,965,3.791,966,5.053,967,3.791,968,3.791,969,5.053,970,5.053,971,5.053,972,4.304,973,5.053,974,3.791,975,5.053,976,3.791,977,5.053,978,3.791,979,5.053,980,3.791,981,5.053,982,3.791,983,5.053,984,3.791,985,5.053,986,3.791,987,5.053,988,3.791,989,5.053,990,3.791,991,3.791,992,5.053,993,3.791,994,5.053,995,3.791,996,5.053,997,3.791,998,5.053,999,3.791,1000,5.053,1001,5.053,1002,3.791,1003,5.053,1004,3.791,1005,5.053,1006,5.053,1007,5.053,1008,5.053,1009,3.791,1010,5.053,1011,3.791,1012,5.053,1013,3.791,1014,5.053,1015,3.791,1016,5.053,1017,3.791,1018,5.053,1019,3.791,1020,5.053,1021,3.791,1022,5.053,1023,3.791,1024,5.053,1025,3.791,1026,5.053,1027,3.791,1028,5.053,1029,3.791,1030,5.053,1031,3.791,1032,5.053,1033,3.791,1034,3.791]],["title/components/MessagesComponent.html",[79,0.583,186,1.196]],["body/components/MessagesComponent.html",[0,0.205,1,1.574,2,1.075,3,0.179,4,0.134,5,0.116,8,0.5,9,0.757,10,1.139,11,1.139,12,1.675,13,0.803,14,1.139,15,1.139,16,1.139,17,1.139,18,0.556,19,1.429,21,1.308,22,1.402,23,0.023,24,1.015,25,1.139,27,0.743,29,1.075,30,1.015,31,1.386,32,1.263,33,0.977,34,0.743,35,1.675,36,1.322,37,1.319,38,0.896,39,1.174,40,0.743,42,1.386,43,1.386,44,1.402,45,1.075,46,0.743,47,0.743,48,1.408,49,0.743,51,1.075,52,0.743,54,0.511,56,0.134,57,1.146,59,1.36,60,0.943,63,1.972,64,1.966,65,1.966,66,1.966,72,2.668,74,1.139,76,2.668,79,0.913,80,1.74,82,1.757,87,0.701,88,1.146,89,1.885,96,0.007,97,0.011,98,0.007,99,0.788,100,1.446,101,1.004,102,1.004,103,1.872,104,1.004,106,1.208,107,2.267,108,0.887,109,2.505,110,2.602,112,1.54,114,1.54,117,1.54,118,1.54,120,2.335,121,1.872,126,1.574,128,2.142,129,1.071,130,1.071,131,1.654,132,1.855,133,1.759,134,1.004,135,1.004,136,1.54,137,1.004,138,1.004,139,1.004,140,1.446,141,1.004,142,1.004,143,1.004,144,0.943,145,1.004,146,1.071,147,0.788,148,0.788,149,0.788,150,0.788,152,0.743,154,1.071,155,0.836,156,1.071,157,0.788,158,0.788,159,0.268,162,1.071,163,0.943,165,0.788,172,0.662,173,1.54,174,1.36,175,0.743,176,2.099,177,1.004,178,1.004,179,0.743,180,1.004,181,0.788,182,1.004,183,1.004,184,0.743,185,1.004,186,1.647,187,1.004,188,0.788,189,1.004,190,0.743,191,1.004,192,1.004,193,0.743,194,0.943,195,1.004,196,0.788,197,0.943,198,1.004,199,0.788,200,1.004,201,1.004,202,0.836,203,0.743,204,1.004,205,0.743,206,0.943,207,1.004,259,1.74,318,1.004,328,2.204,329,1.23,330,0.943,339,1.74,362,2.471,380,3.739,381,1.74,383,2.931,404,2.771,418,1.437,419,1.966,428,2.032,430,2.204,447,2.41,459,1.74,536,1.54,554,3.665,659,3.286,664,2.668,677,2.668,710,2.41,733,2.668,751,2.41,841,1.966,1035,1.966,1036,4.303,1037,3.538,1038,3.538,1039,4.824,1040,3.538,1041,3.538,1042,2.308,1043,3.538,1044,2.308,1045,2.308,1046,2.308,1047,3.538,1048,3.538,1049,2.308,1050,2.308,1051,2.308,1052,4.824,1053,3.538,1054,3.245,1055,3.538,1056,3.538,1057,3.538,1058,3.538,1059,3.538,1060,3.538,1061,3.538,1062,1.966,1063,2.308,1064,2.308,1065,2.308,1066,2.308,1067,2.308,1068,2.308,1069,2.308,1070,2.308,1071,2.308,1072,2.308,1073,2.308,1074,2.308,1075,2.308,1076,2.308,1077,2.308,1078,2.308,1079,2.668,1080,2.308,1081,2.308,1082,2.308,1083,3.538,1084,4.824,1085,2.308,1086,2.308,1087,2.308,1088,4.303,1089,4.303,1090,3.245,1091,2.308,1092,2.308]],["title/injectables/MessagesService.html",[306,1.432,362,2.013]],["body/injectables/MessagesService.html",[0,0.148,1,1.785,3,0.231,4,0.148,5,0.129,8,0.298,9,0.819,10,1.233,11,1.233,12,1.477,13,0.869,14,1.233,15,1.233,16,1.233,17,1.233,18,1.104,19,1.444,21,1.393,22,1.391,23,0.023,24,1.315,25,1.638,27,0.825,29,1.164,30,1.098,31,1.477,32,1.325,33,1.567,34,0.825,35,2.098,36,1.526,37,1.355,38,0.965,39,1.355,40,0.825,42,1.477,43,1.477,44,1.512,45,0.779,46,0.825,47,0.825,48,1.241,49,0.825,51,1.164,52,0.825,54,0.535,55,1.272,56,0.148,57,1.272,74,1.233,79,0.637,82,2.94,87,1.546,96,0.008,97,0.012,98,0.008,106,1.307,111,1.365,126,1.639,128,1.951,133,1.565,147,0.875,148,0.875,149,0.875,150,0.875,157,0.875,158,0.875,159,0.298,165,0.875,306,1.565,310,1.596,362,2.199,370,2.887,380,4.756,404,3.695,407,3.458,409,2.182,428,3.497,459,1.932,464,1.596,659,2.608,660,2.608,931,2.887,1062,2.182,1093,2.182,1094,3.829,1095,3.829,1096,5.088,1097,3.829,1098,5.088,1099,3.829,1100,3.829,1101,2.562,1102,4.866,1103,2.562,1104,2.562,1105,2.562,1106,2.562,1107,3.829,1108,3.829,1109,3.829,1110,2.562,1111,2.562,1112,4.866,1113,4.591,1114,2.562,1115,2.562,1116,2.562,1117,2.562,1118,2.562,1119,2.562,1120,2.562,1121,2.562,1122,2.182,1123,2.562,1124,2.562,1125,2.562,1126,2.562,1127,2.562,1128,4.585,1129,2.562,1130,2.562,1131,2.562,1132,2.562,1133,2.562,1134,2.562,1135,2.562,1136,3.829,1137,2.562,1138,2.562,1139,2.562,1140,2.562,1141,2.562,1142,2.562]],["title/injectables/MockDataService.html",[306,1.432,867,2.387]],["body/injectables/MockDataService.html",[0,0.211,1,1.94,3,0.184,4,0.211,5,0.281,8,0.423,9,1.052,10,1.584,11,1.584,12,1.793,13,1.116,14,1.584,15,1.584,16,1.584,17,1.584,18,0.877,19,1.447,21,1.692,22,1.591,23,0.023,24,1.41,25,1.172,27,1.172,29,1.106,30,1.41,31,1.793,32,1.292,33,1.354,34,1.172,35,1.793,36,1.501,37,1.332,38,0.932,39,1.332,40,1.172,42,1.793,43,1.793,44,1.676,45,1.106,46,1.172,47,1.172,48,1.507,49,1.172,51,1.494,52,1.172,54,0.586,56,0.211,57,1.807,69,2.267,73,2.267,87,1.106,96,0.011,97,0.015,98,0.011,106,1.679,111,1.939,128,2.192,147,1.242,148,1.242,149,1.242,150,1.242,157,1.242,158,1.242,159,0.423,163,1.487,165,1.242,248,1.939,306,2.01,310,2.267,329,1.939,330,1.487,343,2.267,357,4.199,371,1.807,464,2.267,867,3.349,875,2.744,876,3.1,888,4.497,1122,3.1,1143,5.08,1144,3.1,1145,4.917,1146,5.964,1147,3.639,1148,4.917,1149,3.639,1150,3.639,1151,3.639,1152,3.639,1153,3.639,1154,3.639,1155,3.639,1156,3.639,1157,3.639]],["title/components/NameWeightCardComponent.html",[79,0.583,188,1.196]],["body/components/NameWeightCardComponent.html",[0,0.208,1,1.586,2,1.09,3,0.119,4,0.136,5,0.119,6,1.023,8,0.273,9,0.767,10,1.155,11,1.155,12,1.689,13,0.815,14,1.155,15,1.155,16,1.155,17,1.155,18,1.048,19,1.465,21,1.322,22,1.339,23,0.023,24,1.029,25,1.155,27,0.757,29,0.714,30,1.029,31,1.401,32,1.268,33,1.191,34,0.757,35,1.401,36,1.173,37,1.451,38,0.928,39,1.041,40,0.757,42,1.401,43,1.401,44,1.412,45,0.714,46,0.757,47,0.757,48,1.318,49,0.757,51,1.09,52,0.757,54,0.353,56,0.136,59,0.904,60,0.96,63,1.778,74,0.757,79,0.724,86,1.35,96,0.007,97,0.011,98,0.007,99,0.802,100,1.466,101,1.023,102,1.023,103,1.023,104,1.023,106,1.225,107,2.28,108,0.904,109,2.514,110,2.613,112,1.561,114,1.561,117,1.561,118,1.561,120,2.35,121,1.893,126,1.649,128,2.152,129,1.091,130,1.091,131,1.673,132,0.904,133,0.96,134,1.023,135,1.023,136,1.561,137,1.023,138,1.023,139,1.023,140,0.96,141,1.023,142,1.023,143,1.023,144,0.96,145,1.023,146,1.091,147,0.802,148,0.802,149,0.802,150,0.802,152,2.291,154,1.091,155,0.851,156,1.091,157,0.802,158,0.802,159,0.273,162,1.091,165,0.802,169,1.772,170,1.601,172,0.674,173,1.561,174,1.379,175,0.757,176,2.119,177,1.023,178,1.023,179,0.757,180,1.023,181,0.802,182,1.023,183,1.023,184,0.757,185,1.023,186,0.802,187,1.023,188,1.663,189,1.023,190,0.757,191,1.023,192,1.023,193,0.757,194,0.96,195,1.023,196,0.802,197,0.96,198,1.023,199,0.802,200,1.023,201,1.023,202,0.851,203,0.757,204,1.023,205,0.757,206,0.96,207,1.023,318,1.023,388,2.964,422,4.148,511,4.753,525,3.056,527,3.056,536,1.561,538,2.964,539,2.705,540,2.945,547,3.706,602,1.601,605,2.002,606,2.002,607,2.002,608,2.002,609,2.002,612,1.601,671,2.06,678,2.002,679,1.772,710,2.443,751,3.572,935,1.772,936,2.002,937,2.002,938,2.002,943,2.002,1113,3.672,1158,5.369,1159,2.002,1160,4.351,1161,3.588,1162,4.87,1163,4.87,1164,3.056,1165,3.588,1166,2.35,1167,2.35,1168,2.35,1169,2.35,1170,4.467,1171,2.35,1172,2.35,1173,2.35,1174,2.35,1175,3.281,1176,2.35,1177,2.35,1178,2.35,1179,2.35,1180,2.35,1181,2.35,1182,3.588,1183,3.588,1184,2.35,1185,2.35,1186,2.35,1187,2.35,1188,2.35]],["title/directives/NumbersonlyDirective.html",[175,1.129,203,1.129]],["body/directives/NumbersonlyDirective.html",[0,0.232,3,0.202,4,0.232,5,0.202,8,0.464,13,1.189,18,1.406,19,1.324,22,1.491,23,0.023,30,1.674,32,1.174,36,1.406,37,1.248,38,0.848,39,1.374,54,0.515,56,0.232,82,1.985,86,2.296,87,1.882,96,0.012,97,0.016,98,0.012,108,1.537,109,2.013,126,1.776,159,0.464,175,1.686,202,1.448,203,1.88,214,2.43,311,2.789,467,4.401,497,2.13,536,2.278,713,3.405,774,2.723,775,2.723,864,4.377,885,3.975,1189,3.405,1190,4.971,1191,3.405,1192,4.458,1193,3.405,1194,5.235,1195,4.458,1196,4.458,1197,5.235,1198,3.998,1199,3.405,1200,3.998,1201,3.405,1202,3.405,1203,4.458,1204,3.998,1205,4.971,1206,3.998,1207,3.998,1208,5.235,1209,5.235,1210,3.998,1211,3.998,1212,3.405,1213,3.998,1214,3.405,1215,3.998,1216,3.405,1217,3.405,1218,3.405,1219,3.405,1220,3.405,1221,3.405,1222,3.998,1223,3.015,1224,3.405,1225,3.998,1226,3.405,1227,3.405,1228,3.405]],["title/components/PageNotFoundComponent.html",[79,0.583,190,1.129]],["body/components/PageNotFoundComponent.html",[0,0.234,3,0.204,4,0.234,5,0.204,8,0.47,13,1.197,18,1.413,19,1.128,23,0.022,32,0.813,37,1.33,54,0.397,56,0.234,79,0.976,96,0.013,97,0.016,98,0.013,99,1.38,100,2.155,101,1.759,102,1.759,103,1.759,104,1.759,108,1.554,109,2.742,110,2.887,112,2.294,114,2.294,120,2.541,126,1.512,152,1.302,159,0.47,172,1.159,173,2.294,174,2.027,175,1.302,176,2.706,177,1.759,178,1.759,179,1.302,180,1.759,181,1.38,182,1.759,183,1.759,184,1.302,185,1.759,186,1.38,187,1.759,188,1.38,189,1.759,190,2.003,191,3.032,192,1.759,193,1.302,194,1.652,195,1.759,196,1.38,197,1.652,198,1.759,199,1.38,200,1.759,201,1.759,202,1.464,203,1.302,204,1.759,205,1.302,206,1.652,207,1.759,279,3.996,311,2.809,318,2.553,1079,4.689,1229,4.998,1230,3.443,1231,5.868,1232,5.273,1233,4.043,1234,4.043,1235,5.273]],["title/injectables/PersonDetailsService.html",[306,1.432,532,2.183]],["body/injectables/PersonDetailsService.html",[0,0.118,1,1.496,2,1.209,3,0.103,4,0.118,5,0.103,6,0.887,8,0.237,9,0.687,10,1.99,11,1.453,12,1.68,13,0.73,14,1.453,15,1.453,16,1.453,17,1.453,18,0.958,19,1.477,21,1.659,22,1.578,23,0.023,24,1.294,25,1.035,27,1.035,29,0.977,30,1.67,31,1.68,32,1.35,33,1.322,34,1.035,35,1.68,36,1.574,37,1.397,38,0.98,39,1.397,40,1.035,42,1.68,43,1.68,44,1.655,45,0.977,46,1.035,47,1.035,48,1.531,49,1.035,51,1.659,52,1.035,54,0.556,55,1.012,56,0.118,69,2.811,74,1.758,82,1.974,87,1.878,88,1.012,96,0.006,97,0.01,98,0.006,106,1.097,111,1.086,126,0.585,128,2.314,131,1.735,147,0.696,148,0.696,149,0.696,150,0.696,157,0.696,158,0.696,159,0.237,165,0.696,248,1.086,257,1.538,306,1.313,310,1.27,329,1.086,330,0.833,343,4.156,345,2.737,346,2.737,347,2.737,348,2.737,349,3.387,350,2.737,351,2.737,352,2.737,353,2.737,354,2.737,355,2.737,357,2.423,359,1.737,360,1.737,361,1.737,362,1.171,364,1.737,367,1.737,368,2.423,370,1.538,371,2.59,372,4.65,373,1.389,374,1.737,375,3.712,376,2.423,377,2.284,379,1.737,380,2.189,381,1.538,382,1.389,383,1.389,384,1.737,385,1.737,387,4.443,388,1.389,389,3.844,390,1.737,392,1.737,394,1.737,395,1.737,397,1.737,399,1.27,401,1.538,464,1.27,532,2.002,536,1.964,540,2.779,542,2.89,559,1.27,560,3.553,581,2.423,774,1.389,930,2.423,1054,1.538,1236,1.737,1237,3.214,1238,3.977,1239,3.214,1240,3.214,1241,2.039,1242,2.039,1243,2.039,1244,2.039,1245,2.039,1246,2.039,1247,3.214,1248,2.039,1249,2.039,1250,2.737,1251,2.039,1252,2.039,1253,2.039,1254,2.039,1255,2.039,1256,2.039,1257,2.039,1258,2.039,1259,2.039,1260,2.039,1261,2.039,1262,2.039,1263,2.039,1264,2.039,1265,2.039,1266,2.039,1267,2.039,1268,1.737,1269,1.737,1270,1.737,1271,2.039,1272,2.039,1273,2.039,1274,2.039,1275,3.214,1276,4.513,1277,4.513,1278,4.513,1279,2.039,1280,2.039,1281,2.039,1282,2.039,1283,2.039,1284,2.039,1285,3.214,1286,2.039,1287,2.039,1288,2.039]],["title/components/PersonalDashboardComponent.html",[79,0.583,193,1.129]],["body/components/PersonalDashboardComponent.html",[0,0.21,1,1.593,2,1.1,3,0.12,4,0.138,5,0.12,6,1.035,8,0.276,9,0.774,10,1.166,11,1.166,12,1.698,13,0.822,14,1.166,15,1.166,16,1.166,17,1.166,18,0.573,19,1.453,21,1.1,22,1.251,23,0.023,24,1.257,25,1.166,27,0.766,29,0.723,30,1.038,31,1.412,32,1.29,33,0.995,34,0.766,35,1.412,36,1.338,37,1.33,38,0.918,39,1.188,40,0.766,42,1.412,43,1.412,44,1.52,45,0.723,46,0.766,47,0.766,48,1.326,49,0.766,51,1.1,52,0.766,54,0.585,55,1.181,56,0.138,59,0.914,60,0.972,63,1.791,73,1.481,74,1.412,79,0.729,87,1.1,96,0.007,97,0.011,98,0.007,99,0.812,100,1.48,101,1.035,102,1.035,103,1.035,104,1.035,106,1.236,107,2.288,108,0.914,109,2.52,110,2.62,112,1.575,114,1.575,117,1.575,118,1.575,120,2.36,121,1.907,123,3.028,126,1.656,128,2.158,129,1.104,130,1.104,131,1.685,132,0.914,133,0.972,134,1.035,135,1.035,136,1.575,137,1.035,138,1.035,139,1.035,140,0.972,141,1.035,142,1.035,143,1.035,144,0.972,145,1.035,146,1.104,147,0.812,148,0.812,149,0.812,150,0.812,152,0.766,154,1.104,155,0.861,156,1.104,157,0.812,158,0.812,159,0.276,160,0.812,162,1.104,163,0.972,164,1.481,165,0.812,167,2.026,172,0.682,173,1.575,174,1.392,175,0.766,176,2.132,177,1.035,178,1.035,179,0.766,180,1.035,181,0.812,182,1.035,183,1.035,184,0.766,185,1.035,186,0.812,187,1.035,188,0.812,189,1.035,190,0.766,191,1.035,192,1.035,193,1.578,194,2.432,195,1.035,196,0.812,197,0.972,198,1.035,199,0.812,200,1.035,201,1.035,202,0.861,203,0.766,204,1.035,205,0.766,206,0.972,207,1.035,288,3.797,318,1.035,330,0.972,466,2.255,526,2.73,532,3.284,536,1.035,540,1.929,542,2.618,558,1.481,559,1.481,560,1.62,561,2.026,562,1.797,563,1.62,564,1.481,569,2.026,572,1.793,604,2.466,654,2.026,875,2.73,1289,4.153,1290,5.193,1291,2.026,1292,2.73,1293,4.383,1294,3.62,1295,3.62,1296,3.62,1297,3.083,1298,4.383,1299,4.9,1300,2.378,1301,4.9,1302,2.378,1303,2.378,1304,2.378,1305,2.378,1306,2.378,1307,3.62,1308,3.62,1309,3.62,1310,2.378,1311,2.378,1312,2.378,1313,2.378,1314,2.378,1315,2.378,1316,2.378,1317,2.026,1318,2.378,1319,2.378,1320,2.378,1321,2.378,1322,2.378,1323,2.378,1324,2.378,1325,2.378,1326,3.62,1327,2.378,1328,2.378,1329,2.378,1330,2.378,1331,2.378,1332,2.378,1333,2.378,1334,2.378,1335,2.378,1336,2.378]],["title/modules/PersonalDashboardModule.html",[208,0.949,1337,2.387]],["body/modules/PersonalDashboardModule.html",[0,0.258,3,0.225,4,0.258,5,0.225,23,0.023,54,0.677,56,0.258,96,0.014,97,0.017,98,0.014,159,0.517,160,1.521,172,1.277,193,2.185,194,1.82,208,1.206,210,1.613,211,2.067,212,3.272,213,2.373,214,2.067,215,2.067,222,3.149,223,3.615,226,2.989,227,2.373,228,2.373,230,2.989,234,2.441,251,3.358,276,2.989,288,3.494,486,3.494,487,2.373,621,3.793,622,3.793,1289,3.033,1292,3.358,1337,4.876,1338,3.793,1339,3.793,1340,3.793,1341,4.226,1342,4.454,1343,3.793,1344,3.793]],["title/modules/PersonalDashboardRoutingModule.html",[208,0.949,1341,2.183]],["body/modules/PersonalDashboardRoutingModule.html",[0,0.292,3,0.254,4,0.292,5,0.254,23,0.023,54,0.662,56,0.292,79,0.838,96,0.016,97,0.019,98,0.016,159,0.585,160,1.72,193,1.949,210,1.824,234,2.633,274,3.799,275,3.476,276,2.684,281,3.431,282,3.431,288,3.77,296,3.77,298,3.431,299,3.431,301,3.799,540,2.684,624,4.291,625,4.291,626,4.291,627,4.291,1289,3.431,1292,3.799,1341,3.77,1343,4.291,1344,4.291]],["title/components/ProfileFormComponent.html",[79,0.583,196,1.196]],["body/components/ProfileFormComponent.html",[0,0.147,1,1.306,2,0.77,3,0.077,4,0.088,5,0.164,6,0.662,8,0.177,9,0.542,10,0.816,11,0.816,12,1.358,13,0.575,14,0.816,15,0.816,16,0.816,17,0.816,18,0.366,19,1.441,21,1.154,22,1.234,23,0.023,24,0.934,25,0.816,27,0.49,29,0.462,30,1.089,31,1.048,32,1.282,33,0.958,34,0.49,35,1.223,36,1.219,37,1.298,38,0.87,39,1.082,40,0.49,42,1.048,43,1.223,44,1.453,45,0.989,46,0.49,47,0.49,48,1.307,49,0.49,51,1.537,52,0.49,54,0.533,56,0.088,58,1.91,59,1.252,60,0.622,63,1.331,72,1.91,74,0.49,79,0.542,82,0.755,87,0.77,88,1.258,89,1.35,96,0.005,97,0.008,98,0.005,99,0.519,100,1.035,101,0.662,102,0.662,103,0.662,104,0.662,106,0.865,107,1.945,108,0.585,109,2.268,110,2.325,112,1.102,114,1.102,117,1.102,118,1.102,120,1.974,121,1.417,126,1.692,128,1.899,129,0.706,130,0.706,131,1.252,132,0.585,133,0.622,134,0.662,135,0.662,136,1.102,137,0.662,138,0.662,139,0.662,140,0.622,141,0.662,142,0.662,143,1.102,144,0.622,145,0.662,146,0.706,147,0.519,148,0.519,149,0.519,150,0.519,152,1.555,154,0.706,155,0.551,156,0.706,157,0.519,158,0.519,159,0.177,162,0.706,163,0.622,165,0.519,170,1.036,172,0.436,173,1.102,174,0.974,175,0.49,176,1.652,177,0.662,178,0.662,179,0.49,180,0.662,181,0.519,182,0.662,183,0.662,184,0.49,185,0.662,186,0.519,187,0.662,188,0.519,189,0.662,190,0.49,191,0.662,192,0.662,193,0.49,194,0.622,195,0.662,196,1.296,197,2.325,198,0.662,199,0.519,200,0.662,201,0.662,202,0.551,203,0.816,204,0.662,205,0.816,206,0.622,207,0.662,232,1.147,233,0.947,254,1.91,281,1.036,292,1.147,311,1.35,318,0.662,330,0.622,371,1.258,373,2.217,382,2.586,383,1.725,430,0.947,466,1.578,469,1.725,487,0.81,497,0.81,506,3.593,508,4.838,526,1.91,530,2.158,538,1.036,539,1.91,542,1.258,559,0.947,562,1.616,564,0.947,602,1.725,604,1.036,665,3.593,667,3.234,668,2.158,669,1.295,670,1.725,671,2.616,673,1.295,701,1.147,710,1.725,733,1.91,739,1.295,751,2.217,761,1.295,780,2.158,833,2.158,862,2.773,864,2.586,865,1.295,866,2.773,869,1.295,872,4.846,873,2.158,880,3.593,883,1.295,885,1.036,886,1.295,900,1.295,902,1.295,931,3.815,935,1.147,972,2.158,1054,1.91,1090,1.147,1113,1.147,1164,2.158,1170,3.593,1175,2.455,1226,3.234,1227,3.234,1250,3.234,1268,1.295,1297,2.158,1317,1.295,1345,5.465,1346,1.295,1347,3.256,1348,2.533,1349,2.533,1350,2.533,1351,2.533,1352,3.797,1353,3.797,1354,2.533,1355,3.797,1356,3.797,1357,2.533,1358,3.797,1359,3.797,1360,5.253,1361,4.218,1362,2.533,1363,3.256,1364,2.533,1365,5.801,1366,5.253,1367,1.521,1368,2.533,1369,1.521,1370,1.521,1371,1.521,1372,2.158,1373,4.555,1374,4.309,1375,1.521,1376,3.256,1377,2.533,1378,2.533,1379,1.521,1380,2.533,1381,2.533,1382,3.256,1383,1.521,1384,1.521,1385,2.533,1386,1.521,1387,1.521,1388,4.218,1389,1.521,1390,2.533,1391,1.521,1392,2.533,1393,3.256,1394,2.533,1395,1.521,1396,1.521,1397,1.521,1398,1.521,1399,1.521,1400,1.521,1401,1.521,1402,2.533,1403,1.521,1404,3.256,1405,1.147,1406,1.036,1407,1.295,1408,1.521,1409,1.521,1410,1.521,1411,1.521,1412,1.521,1413,1.521,1414,1.521,1415,1.521,1416,1.521,1417,1.521,1418,1.521,1419,1.521,1420,1.521,1421,1.521,1422,1.521,1423,1.521,1424,1.521,1425,1.521,1426,1.521,1427,1.521,1428,1.521,1429,1.521,1430,1.521,1431,1.521,1432,1.521,1433,4.218,1434,1.521,1435,1.521,1436,1.521,1437,1.521,1438,1.521,1439,1.521,1440,1.521,1441,1.521,1442,1.521,1443,2.533,1444,1.521,1445,1.521,1446,1.521,1447,1.521,1448,1.521,1449,1.521,1450,1.521,1451,1.521,1452,1.521,1453,1.521,1454,2.533,1455,1.521,1456,1.521,1457,1.521,1458,1.521,1459,1.521,1460,1.521,1461,1.521,1462,1.521,1463,1.521,1464,1.521,1465,1.521,1466,1.521,1467,2.533,1468,1.521,1469,1.521,1470,1.521,1471,1.521,1472,1.521,1473,1.521,1474,1.521,1475,1.521,1476,1.521,1477,1.521,1478,1.521,1479,1.521,1480,1.521,1481,1.521,1482,1.521,1483,1.521,1484,1.521,1485,1.521,1486,1.521,1487,1.521,1488,1.521,1489,1.521,1490,3.256,1491,2.533,1492,2.533,1493,1.521,1494,1.521,1495,1.521,1496,1.521,1497,1.521,1498,1.521,1499,1.521,1500,1.521,1501,2.533,1502,2.158,1503,2.158,1504,1.521,1505,1.521,1506,1.521,1507,1.521,1508,1.521,1509,1.521]],["title/interfaces/ServiceRequest.html",[375,2.183,655,1.269]],["body/interfaces/ServiceRequest.html",[0,0.294,3,0.257,4,0.294,5,0.257,8,0.591,9,1.301,23,0.022,33,1.382,38,0.946,44,1.724,48,1.647,56,0.294,96,0.016,97,0.019,98,0.016,259,3.834,368,4.911,371,2.524,373,4.598,375,3.79,399,3.167,655,1.841,656,2.709,659,3.463,1372,4.331,1510,4.331,1511,5.184,1512,5.085,1513,5.085,1514,5.085,1515,5.085,1516,4.331,1517,5.085,1518,5.085]],["title/interfaces/ServiceResponse.html",[377,2.013,655,1.269]],["body/interfaces/ServiceResponse.html",[3,0.316,4,0.269,5,0.234,8,0.539,9,1.231,23,0.023,32,1.159,33,1.634,38,0.977,44,1.598,48,1.559,56,0.269,88,2.305,89,2.474,96,0.014,97,0.018,98,0.014,371,3.107,377,3.307,399,2.892,428,3.307,655,1.681,656,2.474,660,4.457,775,3.922,1102,3.954,1511,4.904,1516,3.954,1519,3.954,1520,6.259,1521,6.259,1522,6.259,1523,4.643,1524,4.643,1525,4.643,1526,4.643,1527,4.643,1528,6.259,1529,4.643,1530,4.643,1531,4.643,1532,4.643]],["title/modules/SharedModule.html",[208,0.949,224,2.013]],["body/modules/SharedModule.html",[0,0.264,3,0.23,4,0.264,5,0.23,23,0.023,54,0.658,56,0.264,96,0.014,97,0.018,98,0.014,159,0.529,172,1.307,203,2.313,205,2.197,208,1.233,210,1.65,211,2.115,212,3.306,213,2.427,214,2.115,215,2.88,222,3.167,224,4.105,226,3.032,227,2.427,228,2.427,230,3.032,234,2.476,239,3.435,486,3.544,487,2.427,1406,3.103,1407,3.88,1533,3.88,1534,3.88,1535,4.556,1536,3.88,1537,4.556,1538,4.556,1539,4.556]],["title/components/TopToolbarComponent.html",[79,0.583,199,1.196]],["body/components/TopToolbarComponent.html",[0,0.232,1,1.674,2,1.216,3,0.137,4,0.157,5,0.137,8,0.316,9,0.856,10,1.288,11,1.288,12,1.798,13,0.908,14,1.288,15,1.288,16,1.288,17,1.288,18,0.655,19,1.437,21,1.216,22,1.337,23,0.023,24,1.147,25,1.288,27,0.875,29,0.826,30,1.147,31,1.529,32,1.294,33,1.078,34,0.875,35,1.529,36,1.344,37,1.352,38,0.877,39,1.194,40,0.875,42,1.529,43,1.529,44,1.491,45,0.826,46,0.875,47,0.875,48,1.417,49,0.875,51,1.216,52,0.875,54,0.549,56,0.157,57,1.349,59,1.045,60,1.111,63,1.94,74,0.875,79,0.79,86,1.561,96,0.008,97,0.012,98,0.008,99,0.928,100,1.635,101,1.182,102,1.182,103,1.182,104,1.182,106,1.366,107,2.381,108,1.045,109,2.584,110,2.695,112,1.741,114,1.741,116,1.851,117,1.741,118,1.741,120,2.467,121,2.066,122,2.049,123,3.008,126,1.674,128,2.225,129,1.261,130,1.261,131,1.825,132,1.045,133,1.111,134,1.182,135,1.182,136,1.741,137,1.182,138,1.182,139,1.182,140,1.111,141,1.182,142,1.182,143,1.182,144,1.111,145,1.182,146,1.261,147,0.928,148,0.928,149,0.928,150,0.928,151,2.725,152,1.529,153,3.017,154,1.261,155,1.449,156,1.261,157,0.928,158,0.928,159,0.316,160,0.928,162,1.261,163,1.111,164,1.693,165,0.928,166,2.315,172,0.779,173,1.741,174,1.538,175,0.875,176,2.279,177,1.182,178,1.182,179,0.875,180,1.182,181,0.928,182,1.182,183,1.182,184,0.875,185,1.182,186,0.928,187,1.182,188,0.928,189,1.182,190,0.875,191,1.182,192,1.182,193,0.875,194,1.111,195,1.182,196,0.928,197,1.111,198,1.182,199,1.788,200,2.695,201,2.066,202,0.984,203,0.875,204,1.182,205,0.875,206,1.111,207,1.182,307,2.049,308,1.693,309,1.851,314,2.315,318,1.182,328,1.693,329,1.448,330,1.111,489,3.949,597,1.851,612,2.725,846,2.315,945,2.315,1540,4.46,1541,2.315,1542,4.748,1543,4.001,1544,5.838,1545,2.718,1546,2.718,1547,2.718,1548,2.718,1549,2.718,1550,4.001,1551,2.718,1552,2.718,1553,2.718,1554,2.718,1555,2.718,1556,2.718]],["title/directives/ValidUsernameDirective.html",[175,1.129,205,1.129]],["body/directives/ValidUsernameDirective.html",[0,0.229,3,0.2,4,0.229,5,0.2,8,0.46,13,1.181,18,1.4,19,1.32,22,1.012,23,0.023,30,1.666,32,1.169,36,1.4,37,1.243,38,0.844,39,1.37,45,1.204,54,0.512,56,0.229,87,1.875,96,0.012,97,0.016,98,0.012,108,1.523,109,2.001,126,1.77,159,0.46,175,1.676,202,1.435,205,1.871,206,2.127,214,2.415,311,2.772,467,4.381,497,2.111,671,2.276,774,2.698,775,2.698,864,4.365,885,3.544,1190,4.949,1191,3.375,1192,4.432,1193,3.375,1195,4.432,1196,4.432,1199,3.375,1201,3.375,1202,3.375,1203,4.432,1205,4.949,1212,3.375,1214,3.375,1216,3.375,1217,3.375,1218,3.375,1219,3.375,1220,3.375,1221,3.375,1223,3.924,1224,3.375,1228,3.375,1405,4.832,1406,4.365,1502,3.375,1557,3.375,1558,5.204,1559,3.962,1560,3.962,1561,3.962,1562,3.962,1563,3.962,1564,3.962,1565,3.962,1566,3.962,1567,6.17,1568,6.17,1569,5.204,1570,3.962,1571,3.962]],["title/coverage.html",[1572,3.614]],["body/coverage.html",[0,0.341,1,1.009,5,0.177,6,2.381,7,2.995,23,0.023,24,1.009,38,0.511,79,1.13,86,4.059,96,0.011,97,0.015,98,0.011,99,1.201,105,2.995,107,1.352,152,1.547,155,1.274,175,1.547,179,1.132,181,1.201,184,1.132,186,1.201,188,1.201,190,1.132,193,1.132,196,1.201,199,1.201,203,1.132,205,1.132,225,2.19,242,2.02,244,2.19,261,2.652,262,2.995,279,2.395,288,2.19,295,2.652,296,2.19,298,2.395,299,2.395,300,2.995,306,2.516,308,2.19,317,2.995,326,2.995,327,2.395,343,2.19,344,2.995,362,2.02,375,2.19,377,2.02,399,2.992,404,2.02,465,2.995,489,2.652,508,2.652,511,2.652,514,2.652,518,2.995,532,2.19,542,1.746,558,2.19,560,2.395,562,1.746,563,2.395,628,2.995,630,2.995,631,2.995,655,2.301,657,2.995,664,2.652,666,2.995,685,2.395,686,2.995,687,2.995,690,2.995,691,2.995,738,2.995,743,2.995,856,2.995,867,2.395,888,2.652,1035,2.995,1090,4.434,1093,2.995,1143,2.995,1144,2.995,1158,2.995,1159,2.995,1189,2.995,1229,2.995,1230,2.995,1236,2.995,1289,2.395,1290,2.995,1291,2.995,1345,2.995,1346,2.995,1405,2.652,1406,2.395,1510,2.995,1519,2.995,1540,2.995,1541,2.995,1557,2.995,1572,2.652,1573,2.995,1574,2.995,1575,5.88,1576,4.804,1577,3.517,1578,3.517,1579,3.517,1580,3.517,1581,3.517,1582,3.517,1583,5.472,1584,3.517,1585,3.517,1586,3.517,1587,3.517,1588,5.472,1589,3.517,1590,4.804,1591,3.517,1592,3.517,1593,3.517,1594,3.517,1595,3.517,1596,3.517,1597,3.517,1598,3.517,1599,3.517,1600,3.517,1601,3.517,1602,3.517,1603,3.517,1604,3.517,1605,3.517,1606,3.517,1607,3.517,1608,3.517,1609,3.517,1610,3.517,1611,2.995,1612,4.092,1613,5.88,1614,2.995,1615,4.092,1616,2.995,1617,2.995,1618,3.517,1619,3.517]],["title/dependencies.html",[211,1.958,1620,2.922]],["body/dependencies.html",[23,0.023,55,2.495,96,0.016,97,0.019,98,0.016,159,0.584,160,1.716,174,1.933,211,2.333,232,4.557,233,3.764,487,2.678,497,2.678,753,4.281,1621,5.026,1622,7.126,1623,5.026,1624,5.026,1625,5.026,1626,5.026,1627,5.026,1628,5.026,1629,5.026,1630,5.026,1631,5.026,1632,5.026,1633,5.026,1634,5.026,1635,5.026,1636,5.026,1637,5.026,1638,5.026,1639,5.026]],["title/miscellaneous/enumerations.html",[1640,1.99,1641,3.592]],["body/miscellaneous/enumerations.html",[3,0.295,8,0.552,22,1.844,23,0.023,29,1.445,96,0.015,97,0.018,98,0.015,197,1.943,371,2.9,407,4.405,408,4.049,410,4.976,428,3.633,660,3.238,890,4.976,930,3.584,1079,3.584,1269,4.976,1270,4.049,1503,4.049,1640,3.238,1641,4.049,1642,4.754,1643,4.754,1644,5.842,1645,4.754,1646,5.842,1647,4.754,1648,5.842,1649,4.754,1650,4.754,1651,4.754,1652,4.754,1653,4.754,1654,4.754,1655,4.754,1656,4.754,1657,4.754,1658,4.754,1659,4.754,1660,4.754,1661,4.754,1662,4.754,1663,4.754,1664,5.842,1665,5.842]],["title/index.html",[8,0.339,1666,2.922,1667,2.922]],["body/index.html",[23,0.022,96,0.014,97,0.017,98,0.017,132,2.552,151,3.021,152,1.428,382,3.021,418,3.485,447,3.021,536,1.93,732,3.778,822,4.766,1112,4.766,1175,3.345,1374,3.778,1572,4.22,1573,5.221,1574,3.778,1668,4.436,1669,5.596,1670,5.596,1671,6.638,1672,5.596,1673,4.436,1674,5.596,1675,6.638,1676,4.436,1677,4.436,1678,6.131,1679,6.131,1680,5.596,1681,5.596,1682,6.131,1683,4.436,1684,5.596,1685,4.436,1686,4.436,1687,4.436,1688,4.436,1689,4.436,1690,4.436,1691,4.436,1692,4.436,1693,4.436,1694,4.436,1695,4.436,1696,4.436,1697,4.436,1698,4.436,1699,4.436,1700,4.436,1701,4.436,1702,4.436,1703,4.436,1704,4.436,1705,4.436,1706,4.436,1707,4.436,1708,4.436,1709,4.436,1710,4.436,1711,4.436,1712,3.778,1713,4.436,1714,4.436,1715,4.436,1716,4.436,1717,3.345,1718,4.436,1719,4.436,1720,4.436]],["title/modules.html",[210,1.736]],["body/modules.html",[23,0.019,96,0.016,97,0.019,98,0.016,209,3.479,210,1.85,221,3.182,222,2.371,223,2.722,224,2.934,233,4.368,484,3.182,614,3.479,618,3.182,700,5.973,1337,3.479,1341,3.182,1712,5.758,1721,7.013,1722,7.229,1723,6.761]],["title/overview.html",[1717,3.614]],["body/overview.html",[2,1.052,23,0.023,96,0.011,97,0.015,98,0.011,99,2.211,100,1.414,172,0.993,179,1.748,181,2.211,184,2.086,186,1.853,188,2.211,190,1.748,193,1.748,196,2.211,199,2.211,202,1.253,203,2.086,205,1.748,208,0.937,209,4.782,210,1.253,211,1.606,212,1.844,213,1.844,214,1.606,215,1.606,216,2.948,217,2.948,218,2.948,219,2.948,220,2.948,221,3.38,222,3.32,223,3.787,224,3.928,225,3.38,226,2.532,227,1.844,228,1.844,275,1.988,295,2.61,464,2.156,480,2.948,481,2.948,482,2.948,483,2.948,484,4.034,501,2.948,502,2.948,504,2.948,597,2.357,614,4.613,615,2.948,616,2.948,617,2.948,618,3.38,656,1.844,1223,2.61,1337,4.613,1338,2.948,1339,2.948,1340,2.948,1341,3.38,1533,2.948,1534,2.948,1536,2.948,1717,2.61,1724,4.752,1725,3.461,1726,3.461,1727,3.461,1728,3.461]],["title/routes.html",[275,2.752]],["body/routes.html",[23,0.02,96,0.018,97,0.02,98,0.018,275,3.287]],["title/miscellaneous/variables.html",[1640,1.99,1729,3.592]],["body/miscellaneous/variables.html",[8,0.592,21,1.981,22,1.665,23,0.023,38,0.981,51,1.852,88,3.026,89,2.715,96,0.016,97,0.019,98,0.016,1611,4.341,1612,5.754,1614,4.341,1615,4.341,1616,5.191,1617,5.191,1640,3.471,1729,4.341,1730,6.095,1731,5.097,1732,5.097,1733,5.097,1734,5.097,1735,5.097,1736,6.095]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LineChartComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1086,"title":{},"body":{"components/MessagesComponent.html":{}}}],["0.5px",{"_index":853,"title":{},"body":{"components/LineChartComponent.html":{}}}],["0/1",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":849,"title":{},"body":{"components/LineChartComponent.html":{}}}],["1",{"_index":597,"title":{},"body":{"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["1.25.0",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["1.5px",{"_index":855,"title":{},"body":{"components/LineChartComponent.html":{}}}],["1.7.2",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1724,"title":{},"body":{"overview.html":{}}}],["10/19",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":598,"title":{},"body":{"components/HomeComponent.html":{}}}],["100000",{"_index":596,"title":{},"body":{"components/HomeComponent.html":{}}}],["11/17",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["116/419",{"_index":1701,"title":{},"body":{"index.html":{}}}],["12/32",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["14.91",{"_index":1694,"title":{},"body":{"index.html":{}}}],["14/31",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["144/457",{"_index":1692,"title":{},"body":{"index.html":{}}}],["17/29",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1725,"title":{},"body":{"overview.html":{}}}],["2.4.1",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":738,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["22.78",{"_index":1697,"title":{},"body":{"index.html":{}}}],["24/161",{"_index":1695,"title":{},"body":{"index.html":{}}}],["24/39",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["27.68",{"_index":1700,"title":{},"body":{"index.html":{}}}],["30",{"_index":741,"title":{},"body":{"components/LineChartComponent.html":{}}}],["31.51",{"_index":1691,"title":{},"body":{"index.html":{}}}],["32",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["36/158",{"_index":1698,"title":{},"body":{"index.html":{}}}],["37",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1727,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1726,"title":{},"body":{"overview.html":{}}}],["5.15.0",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":743,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["500",{"_index":769,"title":{},"body":{"components/LineChartComponent.html":{}}}],["50em",{"_index":819,"title":{},"body":{"components/LineChartComponent.html":{}}}],["52",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1728,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["6/16",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":817,"title":{},"body":{"components/LineChartComponent.html":{}}}],["8/18",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["8/20",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["8/22",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["8/25",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1223,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{},"overview.html":{}}}],["9.0.0",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":815,"title":{},"body":{"components/LineChartComponent.html":{}}}],["900",{"_index":765,"title":{},"body":{"components/LineChartComponent.html":{}}}],["99999",{"_index":595,"title":{},"body":{"components/HomeComponent.html":{}}}],["9]+(?:[_]?[a",{"_index":1569,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["_addnewpersondetails",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["_addnewpersondetails:ipersondetails",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{}}}],["_destory",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_destroy",{"_index":11,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_destroy$=new",{"_index":81,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["_editprofilepic",{"_index":1349,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_editprofilepic:\"disabled\"|null=null",{"_index":1420,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_http",{"_index":345,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_http:httpclient",{"_index":412,"title":{},"body":{"classes/BaseService.html":{}}}],["_httpoptions",{"_index":346,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_httpoptions={headers:new",{"_index":415,"title":{},"body":{"classes/BaseService.html":{}}}],["_id",{"_index":1295,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_id:number",{"_index":1318,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_imgsrc",{"_index":1350,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_imgsrc:string",{"_index":1417,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_injector",{"_index":468,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["_injector:injector",{"_index":475,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["_invaliduser",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["_invaliduser:boolean=false",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{}}}],["_isloggedin",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_isloggedin:boolean",{"_index":332,"title":{},"body":{"classes/BaseComponent.html":{}}}],["_iweights",{"_index":1296,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_iweights:iweighthistory",{"_index":1319,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_jsonurl",{"_index":1145,"title":{},"body":{"injectables/MockDataService.html":{}}}],["_jsonurl='assets/data/users.json",{"_index":1155,"title":{},"body":{"injectables/MockDataService.html":{}}}],["_loginform",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["_loginform:formgroup",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{}}}],["_messages",{"_index":1041,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_messages:imessage",{"_index":1064,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_mode",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["_mode:'home'|'addfriend'='home",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{}}}],["_msgservice",{"_index":347,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_msgservice:messagesservice",{"_index":413,"title":{},"body":{"classes/BaseService.html":{}}}],["_msgsubject",{"_index":1094,"title":{},"body":{"injectables/MessagesService.html":{}}}],["_msgsubject$=new",{"_index":1123,"title":{},"body":{"injectables/MessagesService.html":{}}}],["_persondetails",{"_index":1297,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["_persondetails:ipersondetails",{"_index":1317,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["_profileform",{"_index":1351,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_profileform:formgroup",{"_index":1409,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_rest_url",{"_index":348,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_rest_url=\"/weightwatchers/api",{"_index":414,"title":{},"body":{"classes/BaseService.html":{}}}],["_showmsg",{"_index":1038,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_showmsg:boolean=false",{"_index":1065,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_storageservice",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_storageservice:sessionstorageservice",{"_index":331,"title":{},"body":{"classes/BaseComponent.html":{}}}],["_users",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["_users$:observable",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{}}}],["_users:ipersondetails",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["_weights",{"_index":697,"title":{},"body":{"components/LineChartComponent.html":{}}}],["_weights:iweighthistory",{"_index":762,"title":{},"body":{"components/LineChartComponent.html":{}}}],["a11ymodule",{"_index":947,"title":{},"body":{"modules/MaterialModule.html":{}}}],["absolute",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["abstract",{"_index":57,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil",{"_index":1,"title":{"classes/AbstractBaseUtil.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["abstractbaseutil:10",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:21",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:31",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:41",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:55",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:7",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["accessors",{"_index":469,"title":{},"body":{"injectables/CoreInjectorService.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["actions",{"_index":1507,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["activated",{"_index":1307,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["activatedroute",{"_index":1301,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["activatedroute:activatedroute",{"_index":1316,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["actual_component",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["add",{"_index":59,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["added",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["addfriend",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":1059,"title":{},"body":{"components/MessagesComponent.html":{}}}],["age",{"_index":667,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["age:new",{"_index":1435,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["age:number",{"_index":680,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["alert",{"_index":1084,"title":{},"body":{"components/MessagesComponent.html":{}}}],["align",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["allowed",{"_index":1227,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{}}}],["allows",{"_index":1052,"title":{},"body":{"components/MessagesComponent.html":{}}}],["allusers",{"_index":1657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["already",{"_index":1427,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["always",{"_index":1381,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["anchor",{"_index":821,"title":{},"body":{"components/LineChartComponent.html":{}}}],["angular",{"_index":1034,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/animations",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":948,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":950,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":953,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":955,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":957,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":959,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":961,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":487,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["angular/compiler",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/LoginComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":963,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/badge",{"_index":965,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":967,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":970,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":974,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":976,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":978,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":1002,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":982,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":984,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":986,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":988,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":990,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":993,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":995,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":997,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":999,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1004,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":1006,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1011,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1013,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1015,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":1019,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":1017,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":1021,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1023,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":980,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1025,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":1027,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1029,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1031,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1033,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileFormComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/TopToolbarComponent.html":{},"dependencies.html":{}}}],["app",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["app.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":99,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append('g",{"_index":794,"title":{},"body":{"components/LineChartComponent.html":{}}}],["append('text",{"_index":813,"title":{},"body":{"components/LineChartComponent.html":{}}}],["application",{"_index":1718,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":209,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnumbersonly",{"_index":1194,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["appnumbersonly]'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["apppage",{"_index":261,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":221,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appvalidusername",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["array",{"_index":35,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["array.isarray(data",{"_index":84,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["assets",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets/data/user.json",{"_index":1154,"title":{},"body":{"injectables/MockDataService.html":{}}}],["assets/data/users.json",{"_index":1151,"title":{},"body":{"injectables/MockDataService.html":{}}}],["assuming",{"_index":689,"title":{},"body":{"interfaces/IWeightHistory.html":{}}}],["attr('class",{"_index":807,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('d",{"_index":836,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('dy",{"_index":818,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('transform",{"_index":795,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('y",{"_index":816,"title":{},"body":{"components/LineChartComponent.html":{}}}],["authguardservice",{"_index":296,"title":{"guards/AuthGuardService.html":{}},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["auto",{"_index":1556,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["available",{"_index":1712,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":419,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{}}}],["axis",{"_index":723,"title":{},"body":{"components/LineChartComponent.html":{}}}],["bar",{"_index":1007,"title":{},"body":{"modules/MaterialModule.html":{}}}],["base",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"components/MessagesComponent.html":{},"interfaces/ServiceRequest.html":{}}}],["base.util",{"_index":325,"title":{},"body":{"classes/BaseComponent.html":{},"classes/BaseService.html":{}}}],["base/base.component",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["base/base.component.ts",{"_index":317,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["base/base.component.ts:10",{"_index":321,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:11",{"_index":320,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:20",{"_index":324,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:24",{"_index":322,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:38",{"_index":323,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.service",{"_index":1272,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["base/base.service.ts",{"_index":344,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["base/base.service.ts:111",{"_index":378,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:135",{"_index":369,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:139",{"_index":366,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:16",{"_index":358,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:17",{"_index":363,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:18",{"_index":365,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:19",{"_index":356,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:33",{"_index":393,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:51",{"_index":391,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:70",{"_index":396,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:88",{"_index":386,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.util",{"_index":1122,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/MockDataService.html":{}}}],["base/base.util.ts",{"_index":7,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"coverage.html":{}}}],["base/base.util.ts:10",{"_index":20,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:21",{"_index":53,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:31",{"_index":50,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:41",{"_index":41,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:55",{"_index":28,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:7",{"_index":26,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["basecomponent",{"_index":107,"title":{"classes/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["basecomponent:10",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:11",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:20",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:24",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:38",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["based",{"_index":382,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"index.html":{}}}],["baseservice",{"_index":343,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["baseservice:10",{"_index":1266,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:111",{"_index":1253,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:135",{"_index":1252,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:139",{"_index":1251,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:16",{"_index":1262,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:17",{"_index":1264,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:18",{"_index":1265,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:19",{"_index":1263,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:21",{"_index":1261,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:31",{"_index":1260,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:33",{"_index":1256,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:41",{"_index":1259,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:51",{"_index":1255,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:55",{"_index":1258,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:7",{"_index":1267,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:70",{"_index":1257,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:88",{"_index":1254,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["black",{"_index":852,"title":{},"body":{"components/LineChartComponent.html":{}}}],["block",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{}}}],["body:data",{"_index":652,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["boolean",{"_index":48,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["bootstrap",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["bottom",{"_index":740,"title":{},"body":{"components/LineChartComponent.html":{}}}],["bottom:0.25em",{"_index":1506,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["bottom:10px",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom:30px",{"_index":1184,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["branches",{"_index":1693,"title":{},"body":{"index.html":{}}}],["brand",{"_index":1551,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["break",{"_index":1492,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["browse",{"_index":1722,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ProfileFormComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1112,"title":{},"body":{"injectables/MessagesService.html":{},"index.html":{}}}],["build:prod",{"_index":1676,"title":{},"body":{"index.html":{}}}],["builderrorresponse",{"_index":349,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildmessages",{"_index":1095,"title":{},"body":{"injectables/MessagesService.html":{}}}],["buildmessages(type",{"_index":1101,"title":{},"body":{"injectables/MessagesService.html":{}}}],["buildmessages(type:msgtypeenum",{"_index":1133,"title":{},"body":{"injectables/MessagesService.html":{}}}],["builds",{"_index":370,"title":{},"body":{"classes/BaseService.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildservicerequest",{"_index":350,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildservicerequest(url",{"_index":367,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildservicerequest(url:string,data:any=null,handlemessages:boolean=true",{"_index":461,"title":{},"body":{"classes/BaseService.html":{}}}],["button",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["call",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["call(d3axis.axisbottom(this.xaxis",{"_index":811,"title":{},"body":{"components/LineChartComponent.html":{}}}],["call(d3axis.axisleft(this.yaxis",{"_index":812,"title":{},"body":{"components/LineChartComponent.html":{}}}],["called",{"_index":839,"title":{},"body":{"components/LineChartComponent.html":{}}}],["caller",{"_index":431,"title":{},"body":{"classes/BaseService.html":{}}}],["canactivate",{"_index":301,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["cancel",{"_index":1388,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["card",{"_index":538,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["card'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["card.component",{"_index":512,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["card.component.html",{"_index":1161,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.scss",{"_index":1160,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts",{"_index":1159,"title":{},"body":{"components/NameWeightCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":1167,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:15",{"_index":1169,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:16",{"_index":1166,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:17",{"_index":1168,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:18",{"_index":1171,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:19",{"_index":1165,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:25",{"_index":1172,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:32",{"_index":1173,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:39",{"_index":1174,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card/name",{"_index":511,"title":{},"body":{"modules/FeaturesModule.html":{},"components/NameWeightCardComponent.html":{},"coverage.html":{}}}],["cardclicked",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["cardclicked(id",{"_index":535,"title":{},"body":{"components/HomeComponent.html":{}}}],["cardclicked(id:number",{"_index":575,"title":{},"body":{"components/HomeComponent.html":{}}}],["cardclicked=new",{"_index":1178,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["case",{"_index":1490,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["cast",{"_index":1137,"title":{},"body":{"injectables/MessagesService.html":{}}}],["catcherror",{"_index":403,"title":{},"body":{"classes/BaseService.html":{}}}],["catcherror((err",{"_index":433,"title":{},"body":{"classes/BaseService.html":{}}}],["cdksteppermodule",{"_index":956,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":958,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":960,"title":{},"body":{"modules/MaterialModule.html":{}}}],["center",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["change",{"_index":1374,"title":{},"body":{"components/ProfileFormComponent.html":{},"index.html":{}}}],["changed",{"_index":1054,"title":{},"body":{"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["changefieldstate",{"_index":1352,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["chart",{"_index":694,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["chart.component",{"_index":515,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["chart.component.html",{"_index":696,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.scss",{"_index":695,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts",{"_index":691,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:103",{"_index":720,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:127",{"_index":717,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:139",{"_index":729,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:19",{"_index":746,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:21",{"_index":744,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:22",{"_index":747,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:23",{"_index":735,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:24",{"_index":748,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:25",{"_index":749,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:26",{"_index":745,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:27",{"_index":737,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:28",{"_index":734,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:29",{"_index":714,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:38",{"_index":716,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:59",{"_index":730,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:67",{"_index":726,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:80",{"_index":731,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:86",{"_index":724,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:94",{"_index":728,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart/line",{"_index":514,"title":{},"body":{"modules/FeaturesModule.html":{},"components/LineChartComponent.html":{},"coverage.html":{}}}],["check",{"_index":29,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checked",{"_index":1076,"title":{},"body":{"components/MessagesComponent.html":{}}}],["checkformode",{"_index":1353,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["checks",{"_index":42,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["child",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["childroutes",{"_index":625,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractBaseUtil.html":{},"classes/AppPage.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["clear",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["clearmessages",{"_index":1096,"title":{},"body":{"injectables/MessagesService.html":{}}}],["clicked",{"_index":539,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["cluster_appmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":480,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":481,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":483,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":482,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_featuresmodule",{"_index":501,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_declarations",{"_index":502,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_exports",{"_index":504,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_imports",{"_index":503,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["cluster_homemodule",{"_index":615,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":616,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":617,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_personaldashboardmodule",{"_index":1338,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"overview.html":{}}}],["cluster_personaldashboardmodule_declarations",{"_index":1339,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"overview.html":{}}}],["cluster_personaldashboardmodule_imports",{"_index":1340,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1533,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1534,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1536,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1535,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":1684,"title":{},"body":{"index.html":{}}}],["code:coverage",{"_index":1685,"title":{},"body":{"index.html":{}}}],["color:blue;//todo",{"_index":1092,"title":{},"body":{"components/MessagesComponent.html":{}}}],["color:green",{"_index":1091,"title":{},"body":{"components/MessagesComponent.html":{}}}],["color:red",{"_index":1087,"title":{},"body":{"components/MessagesComponent.html":{}}}],["combination",{"_index":455,"title":{},"body":{"classes/BaseService.html":{}}}],["commonmodule",{"_index":486,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{}}}],["compliementory",{"_index":68,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["compodoc",{"_index":1707,"title":{},"body":{"index.html":{}}}],["component",{"_index":79,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["component:pagenotfoundcomponent",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["components/home/home.component",{"_index":620,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["components/line",{"_index":513,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["components/login/login.component",{"_index":493,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/messages/messages.component",{"_index":492,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/name",{"_index":510,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["components/page",{"_index":494,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/personal",{"_index":1343,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["components/profile",{"_index":507,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["components/top",{"_index":488,"title":{},"body":{"modules/CoreModule.html":{}}}],["concat(this._msgservice.buildmessages(msgtypeenum.info,response.infomsgs",{"_index":458,"title":{},"body":{"classes/BaseService.html":{}}}],["concat(this._msgservice.buildmessages(msgtypeenum.success,response.successmsgs",{"_index":457,"title":{},"body":{"classes/BaseService.html":{}}}],["concatmap",{"_index":1315,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["concatmap((id:number",{"_index":1322,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["console",{"_index":1075,"title":{},"body":{"components/MessagesComponent.html":{}}}],["console.log(\"ngdestroy",{"_index":838,"title":{},"body":{"components/LineChartComponent.html":{}}}],["console.log(users",{"_index":580,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["constructor(activatedroute",{"_index":1300,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["constructor(eleref",{"_index":712,"title":{},"body":{"components/LineChartComponent.html":{}}}],["constructor(fb",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["constructor(http",{"_index":1147,"title":{},"body":{"injectables/MockDataService.html":{}}}],["constructor(injector:injector",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(msgservice",{"_index":1042,"title":{},"body":{"components/MessagesComponent.html":{}}}],["constructor(private",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MockDataService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(storageservice",{"_index":302,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/HttpMockInterceptor.html":{}}}],["content",{"_index":271,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":1616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["controls",{"_index":1408,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["convert",{"_index":780,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["core",{"_index":499,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/abstract",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["core/components/login/login.component",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/components/page",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/core.module",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["core/interceptor/http",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/core",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["coreinjectorservice",{"_index":242,"title":{"injectables/CoreInjectorService.html":{}},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["coreinjectorservice.injector=injector",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":222,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":78,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["coverage",{"_index":1572,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["createformgroup",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["createformgroup():void",{"_index":1430,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["creating",{"_index":1056,"title":{},"body":{"components/MessagesComponent.html":{}}}],["crispedges",{"_index":851,"title":{},"body":{"components/LineChartComponent.html":{}}}],["current",{"_index":1377,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["current_user",{"_index":1665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cypress.io",{"_index":1702,"title":{},"body":{"index.html":{}}}],["d",{"_index":828,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d.lastupdated",{"_index":803,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d.weight",{"_index":805,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3",{"_index":753,"title":{},"body":{"components/LineChartComponent.html":{},"dependencies.html":{}}}],["d3.select(this.hostelement).append('svg').attr(\"height\",\"500\").attr(\"width\",\"900",{"_index":793,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3.select(this.hostelement).select('svg').remove",{"_index":842,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3.selectall(\"svg",{"_index":840,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3array",{"_index":759,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3axis",{"_index":760,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3scale",{"_index":755,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3scale.scalelinear().range([this.height",{"_index":800,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3scale.scaletime().range([0",{"_index":798,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3shape",{"_index":757,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3shape.line",{"_index":736,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d:iweighthistory",{"_index":802,"title":{},"body":{"components/LineChartComponent.html":{}}}],["dashboard",{"_index":1292,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["dashboard.component",{"_index":1344,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["dashboard.component.html",{"_index":1294,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":1293,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1291,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:16",{"_index":1302,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:24",{"_index":1313,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:25",{"_index":1311,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:26",{"_index":1312,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:28",{"_index":1310,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:35",{"_index":1306,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:51",{"_index":1305,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:62",{"_index":1304,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.module').then(mod=>mod.personaldashboardmodule",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dashboard.module.ts",{"_index":1342,"title":{},"body":{"modules/PersonalDashboardModule.html":{}}}],["dashboard/components/personal",{"_index":1290,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["dashboard/personal",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["data",{"_index":44,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["data!=\"undefined",{"_index":92,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["data.length",{"_index":85,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["data.service",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.service.ts",{"_index":1144,"title":{},"body":{"injectables/MockDataService.html":{},"coverage.html":{}}}],["data.service.ts:12",{"_index":1148,"title":{},"body":{"injectables/MockDataService.html":{}}}],["data.service.ts:19",{"_index":1150,"title":{},"body":{"injectables/MockDataService.html":{}}}],["data.trim().length",{"_index":95,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["data/mock",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"coverage.html":{}}}],["data:t",{"_index":1516,"title":{},"body":{"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{}}}],["datachanged",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["datachanged(ip",{"_index":541,"title":{},"body":{"components/HomeComponent.html":{}}}],["datachanged(ip:ipersondetails",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["datachanged(ipersondetails",{"_index":1303,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["datachanged(ipersondetails:ipersondetails",{"_index":1333,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["datachanged=new",{"_index":1412,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["date",{"_index":94,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{}}}],["date(),\"mm/dd/yyyy",{"_index":1473,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["date(iw.lastupdated",{"_index":782,"title":{},"body":{"components/LineChartComponent.html":{}}}],["datepipe",{"_index":506,"title":{},"body":{"modules/FeaturesModule.html":{},"components/ProfileFormComponent.html":{}}}],["datepipe:datepipe",{"_index":1422,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["datum(this._weights",{"_index":835,"title":{},"body":{"components/LineChartComponent.html":{}}}],["declarations",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["delay",{"_index":328,"title":{},"body":{"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/MessagesComponent.html":{},"components/TopToolbarComponent.html":{}}}],["delay(0",{"_index":336,"title":{},"body":{"classes/BaseComponent.html":{},"components/HomeComponent.html":{}}}],["delay(0),//added",{"_index":1074,"title":{},"body":{"components/MessagesComponent.html":{}}}],["delegate",{"_index":1372,"title":{},"body":{"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{}}}],["delete",{"_index":388,"title":{},"body":{"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["delete_forever",{"_index":1183,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["delete_user",{"_index":1661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deletebyid",{"_index":1237,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["deletebyid(id",{"_index":1242,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["deletebyid(id:number",{"_index":1286,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["deleteclicked",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["deleteclicked(id",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{}}}],["deleteclicked(id:number",{"_index":577,"title":{},"body":{"components/HomeComponent.html":{}}}],["deleteclicked=new",{"_index":1179,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["deleteuser",{"_index":1662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demo",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{}}}],["dependencies",{"_index":211,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["destoryed",{"_index":1072,"title":{},"body":{"components/MessagesComponent.html":{}}}],["destroy",{"_index":61,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["destroyed",{"_index":80,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{}}}],["details",{"_index":673,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["details.interface",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["details.interface.ts",{"_index":666,"title":{},"body":{"interfaces/IPersonDetails.html":{},"coverage.html":{}}}],["details.service",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{},"components/PersonalDashboardComponent.html":{}}}],["details.service.ts",{"_index":1236,"title":{},"body":{"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:14",{"_index":1241,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:25",{"_index":1244,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:41",{"_index":1246,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:60",{"_index":1249,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:77",{"_index":1243,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["determine",{"_index":1376,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["development",{"_index":1669,"title":{},"body":{"index.html":{}}}],["directive",{"_index":175,"title":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"overview.html":{}}}],["directives/numbersonly/numbersonly.directive",{"_index":1538,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/valid",{"_index":1539,"title":{},"body":{"modules/SharedModule.html":{}}}],["disable",{"_index":1385,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disable)?this._profileform.controls.age.disable():this._profileform.controls.age.enable",{"_index":1496,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disable)?this._profileform.controls.name.disable():this._profileform.controls.name.enable",{"_index":1495,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disable)?this._profileform.controls.weight.disable():this._profileform.controls.weight.enable",{"_index":1497,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disabled",{"_index":1382,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["display",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["document",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["documentaiton",{"_index":1704,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1573,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1152,"title":{},"body":{"injectables/MockDataService.html":{}}}],["dom",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["dome",{"_index":1058,"title":{},"body":{"components/MessagesComponent.html":{}}}],["domsanitizer",{"_index":1363,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["domsanitzer",{"_index":1362,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["domsanitzer:domsanitizer",{"_index":1421,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["dragdropmodule",{"_index":949,"title":{},"body":{"modules/MaterialModule.html":{}}}],["draw",{"_index":718,"title":{},"body":{"components/LineChartComponent.html":{}}}],["drawlinechart",{"_index":704,"title":{},"body":{"components/LineChartComponent.html":{}}}],["drawxandyaxis",{"_index":705,"title":{},"body":{"components/LineChartComponent.html":{}}}],["drop",{"_index":951,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1703,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":262,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":267,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":265,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":1365,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["effect",{"_index":442,"title":{},"body":{"classes/BaseService.html":{}}}],["eg",{"_index":1719,"title":{},"body":{"index.html":{}}}],["element",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"dependencies.html":{}}}],["element(by.css('app",{"_index":270,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":713,"title":{},"body":{"components/LineChartComponent.html":{},"directives/NumbersonlyDirective.html":{}}}],["eleref",{"_index":715,"title":{},"body":{"components/LineChartComponent.html":{}}}],["eleref:elementref",{"_index":763,"title":{},"body":{"components/LineChartComponent.html":{}}}],["emit",{"_index":1113,"title":{},"body":{"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["emitmessages",{"_index":1097,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emitmessages(msgs",{"_index":1105,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emitmessages(msgs:imessage[]|imessage",{"_index":1124,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emits",{"_index":1107,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emitted",{"_index":1047,"title":{},"body":{"components/MessagesComponent.html":{}}}],["empty",{"_index":31,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["enable",{"_index":1418,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["enableordisableformfields",{"_index":1354,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["enableordisableformfields(disable",{"_index":1383,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["enableordisableformfields(disable:boolean",{"_index":1494,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["encapsulation",{"_index":692,"title":{},"body":{"components/LineChartComponent.html":{}}}],["end",{"_index":822,"title":{},"body":{"components/LineChartComponent.html":{},"index.html":{}}}],["ensure",{"_index":774,"title":{},"body":{"components/LineChartComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"directives/ValidUsernameDirective.html":{}}}],["enter",{"_index":1502,"title":{},"body":{"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["entered",{"_index":1209,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["enum",{"_index":1280,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["enumerations",{"_index":1641,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/msg",{"_index":1121,"title":{},"body":{"injectables/MessagesService.html":{}}}],["enums/storage",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment",{"_index":1612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":428,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error(messages",{"_index":1110,"title":{},"body":{"injectables/MessagesService.html":{}}}],["error(messages:string[]|string",{"_index":1127,"title":{},"body":{"injectables/MessagesService.html":{}}}],["errormsgs",{"_index":1520,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["errormsgs:string[]|string",{"_index":1529,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["errors",{"_index":436,"title":{},"body":{"classes/BaseService.html":{}}}],["event",{"_index":1394,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["eventemitter",{"_index":1170,"title":{},"body":{"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["exception",{"_index":437,"title":{},"body":{"classes/BaseService.html":{}}}],["exists",{"_index":775,"title":{},"body":{"components/LineChartComponent.html":{},"directives/NumbersonlyDirective.html":{},"interfaces/ServiceResponse.html":{},"directives/ValidUsernameDirective.html":{}}}],["export",{"_index":56,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["exports",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["exports:[profileformcomponent,nameweightcardcomponent,linechartcomponent",{"_index":516,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["exports:[routermodule",{"_index":627,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["exports:[toptoolbarcomponent,materialmodule,logincomponent",{"_index":498,"title":{},"body":{"modules/CoreModule.html":{}}}],["extend",{"_index":1153,"title":{},"body":{"injectables/MockDataService.html":{}}}],["extends",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["false",{"_index":89,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["fb:formbuilder",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["features/features.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["featuresmodule",{"_index":223,"title":{"modules/FeaturesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["field",{"_index":665,"title":{},"body":{"interfaces/IMessage.html":{},"components/ProfileFormComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{}}}],["file]=$event.target.files",{"_index":1460,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader",{"_index":1459,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader.onload",{"_index":1462,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader.readasdataurl(file",{"_index":1461,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader=new",{"_index":1458,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["fill",{"_index":846,"title":{},"body":{"components/LineChartComponent.html":{},"components/TopToolbarComponent.html":{}}}],["filteritem=weights.filter((iw:iweighthistory)=>{return",{"_index":1481,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filteritem[0].weight=weight",{"_index":1484,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["flag",{"_index":383,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["flex",{"_index":1555,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["float:right",{"_index":1505,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["fn",{"_index":1201,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["folder",{"_index":1714,"title":{},"body":{"index.html":{}}}],["font",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/TopToolbarComponent.html":{}}}],["forkjoin",{"_index":1314,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["form",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["form'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["form.component",{"_index":509,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["form.component.html",{"_index":1348,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.scss",{"_index":1347,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts",{"_index":1346,"title":{},"body":{"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:100",{"_index":1401,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:107",{"_index":1375,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:116",{"_index":1391,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:133",{"_index":1389,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:142",{"_index":1395,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:179",{"_index":1371,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:195",{"_index":1384,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:21",{"_index":1399,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:210",{"_index":1387,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:23",{"_index":1398,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:29",{"_index":1367,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:33",{"_index":1369,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:37",{"_index":1370,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:40",{"_index":1397,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:43",{"_index":1364,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:52",{"_index":1368,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:58",{"_index":1386,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:67",{"_index":1379,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:84",{"_index":1396,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form/profile",{"_index":508,"title":{},"body":{"modules/FeaturesModule.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["formcontrol",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["formcontrol({value:\"\",disabled:false},[validators.required,validators.maxlength(50",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol({value:\"\",disabled:false},[validusernamedirective.validateusername,validators.required",{"_index":1445,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["formcontrol({value:(this.hasvalue(this.persondetails",{"_index":1433,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["formcontrol):validationerrors|null",{"_index":1212,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["formcontrols",{"_index":1402,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["formgroup",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["formsmodule",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{}}}],["found",{"_index":1079,"title":{},"body":{"components/MessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["found'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["found.component",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.html",{"_index":1232,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1231,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1230,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1234,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1233,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["function",{"_index":1202,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["functions",{"_index":1696,"title":{},"body":{"index.html":{}}}],["games",{"_index":1550,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["gen:documentation",{"_index":1705,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1706,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1710,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1513,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["get_all_users",{"_index":1656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_user",{"_index":1658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["getallusers",{"_index":1238,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getallusers():observable",{"_index":1273,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getformcontrol",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["getidfromroute",{"_index":1298,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["getidfromroute():observable",{"_index":1327,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["getinjector",{"_index":471,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["getnullforemtpy",{"_index":14,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["getnullforemtpy(value",{"_index":27,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["getting",{"_index":1666,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["getuniqueid",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{}}}],["getuniqueid():number",{"_index":593,"title":{},"body":{"components/HomeComponent.html":{}}}],["getuserbyid",{"_index":1239,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getuserbyid(id",{"_index":1245,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getuserbyid(id:number):observable",{"_index":1279,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["given",{"_index":43,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["global",{"_index":1070,"title":{},"body":{"components/MessagesComponent.html":{}}}],["gobal",{"_index":1089,"title":{},"body":{"components/MessagesComponent.html":{}}}],["gohome",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1723,"title":{},"body":{"modules.html":{}}}],["group",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["guard",{"_index":295,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":624,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["guard.service.ts",{"_index":300,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":305,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:8",{"_index":303,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard/auth",{"_index":299,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["guards",{"_index":297,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["h1",{"_index":1185,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["handle",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["handleerror",{"_index":429,"title":{},"body":{"classes/BaseService.html":{}}}],["handlemessages",{"_index":368,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceRequest.html":{}}}],["handlemessages:boolean",{"_index":1518,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["handlemessagesfromresponse",{"_index":351,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["handlemessagesfromresponse(request",{"_index":374,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["handlemessagesfromresponse(request:servicerequest",{"_index":449,"title":{},"body":{"classes/BaseService.html":{}}}],["handling",{"_index":1517,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["hasvalue",{"_index":15,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["hasvalue(data",{"_index":40,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["header",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["headers:new",{"_index":359,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["height",{"_index":698,"title":{},"body":{"components/LineChartComponent.html":{}}}],["height:30vh",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["height:40px",{"_index":1509,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["history",{"_index":668,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["history.interface",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/LineChartComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["history.interface.ts",{"_index":687,"title":{},"body":{"interfaces/IWeightHistory.html":{},"coverage.html":{}}}],["history:iweighthistory",{"_index":684,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["historydata.lastupdated=lastupdated",{"_index":1476,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["historydata.weight=weight",{"_index":1475,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["historydata:iweighthistory=new",{"_index":1474,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["histry",{"_index":674,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["hold",{"_index":1415,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["holder",{"_index":1515,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["holds",{"_index":672,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["home",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["home'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["home.component.html",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":179,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":614,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":618,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["horizontal",{"_index":809,"title":{},"body":{"components/LineChartComponent.html":{}}}],["hostelement",{"_index":699,"title":{},"body":{"components/LineChartComponent.html":{}}}],["hostlistener",{"_index":1210,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["http",{"_index":1149,"title":{},"body":{"injectables/MockDataService.html":{}}}],["http://localhost:4200",{"_index":1673,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1156,"title":{},"body":{"injectables/MockDataService.html":{}}}],["http_interceptors",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":357,"title":{},"body":{"classes/BaseService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["httpclientmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{}}}],["httpevent",{"_index":641,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httphandler",{"_index":637,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpheaders",{"_index":398,"title":{},"body":{"classes/BaseService.html":{}}}],["httpheaders({'content",{"_index":360,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["httpinterceptor",{"_index":640,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpmockinterceptor",{"_index":225,"title":{"interceptors/HttpMockInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpMockInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httprequest",{"_index":635,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpresponse",{"_index":642,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpresponse({status:200",{"_index":651,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["https://compodoc.app",{"_index":1709,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":46,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["icons",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":540,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["id:number",{"_index":1177,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["id:number;//assuming",{"_index":675,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["id?:number",{"_index":688,"title":{},"body":{"interfaces/IWeightHistory.html":{}}}],["identifier",{"_index":664,"title":{},"body":{"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"coverage.html":{}}}],["if(!this.svg",{"_index":785,"title":{},"body":{"components/LineChartComponent.html":{}}}],["if(!value",{"_index":1219,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["if($event.target.files.length>0",{"_index":1457,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(data!=null",{"_index":91,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"interceptors/HttpMockInterceptor.html":{}}}],["if(disable",{"_index":1498,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(req.url.indexof(\".json",{"_index":645,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["if(request",{"_index":451,"title":{},"body":{"classes/BaseService.html":{}}}],["if(response",{"_index":453,"title":{},"body":{"classes/BaseService.html":{}}}],["if(response!=null",{"_index":1277,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["if(this._imgsrc",{"_index":1453,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.hasvalue(msgs",{"_index":1140,"title":{},"body":{"injectables/MessagesService.html":{}}}],["if(this.hasvalue(this._persondetails",{"_index":1446,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.isvalidarraywithdata(data",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isvalidarraywithdata(filteritem",{"_index":1483,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.isvalidarraywithdata(ip",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isvalidarraywithdata(msgs",{"_index":459,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{}}}],["if(this.isvalidarraywithdata(this._users",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isvalidarraywithdata(weights",{"_index":776,"title":{},"body":{"components/LineChartComponent.html":{}}}],["if(this.mode==='add",{"_index":1443,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.svg",{"_index":843,"title":{},"body":{"components/LineChartComponent.html":{}}}],["if(weight!=this._persondetails.weight",{"_index":1471,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["image",{"_index":1393,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["imessage",{"_index":404,"title":{"interfaces/IMessage.html":{}},"body":{"classes/BaseService.html":{},"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["imgs=this._imgsrc.repeat(1",{"_index":1464,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["imgsrc",{"_index":669,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["imgsrc:string",{"_index":683,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["implement",{"_index":732,"title":{},"body":{"components/LineChartComponent.html":{},"index.html":{}}}],["implemented",{"_index":1690,"title":{},"body":{"index.html":{}}}],["implements",{"_index":311,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["import",{"_index":54,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IPersonDetails.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["imports",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{}}}],["imports:[routermodule.forchild(childroutes",{"_index":626,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["improves",{"_index":1060,"title":{},"body":{"components/MessagesComponent.html":{}}}],["including",{"_index":1410,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["incorrect",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1716,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"miscellaneous/enumerations.html":{}}}],["info(messages",{"_index":1114,"title":{},"body":{"injectables/MessagesService.html":{}}}],["info(messages:string[]|string",{"_index":1132,"title":{},"body":{"injectables/MessagesService.html":{}}}],["infomsgs",{"_index":1521,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["infomsgs:string[]|string",{"_index":1531,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["information",{"_index":1247,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["inherited",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["initalize",{"_index":727,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initalized3svgobject",{"_index":706,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initialize",{"_index":725,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initializechart",{"_index":707,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initializexandyaxis",{"_index":708,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initiated",{"_index":1428,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["injectable",{"_index":306,"title":{"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/CoreInjectorService.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["injectables",{"_index":464,"title":{},"body":{"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"overview.html":{}}}],["injection",{"_index":417,"title":{},"body":{"classes/BaseService.html":{}}}],["injector",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/CoreInjectorService.html":{}}}],["injector():injector",{"_index":478,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector(injector:injector",{"_index":476,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector.service",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{}}}],["injector.service.ts",{"_index":465,"title":{},"body":{"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["injector.service.ts:11",{"_index":474,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector.service.ts:15",{"_index":472,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector.service.ts:8",{"_index":470,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector/core",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["input",{"_index":751,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["inputs",{"_index":710,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["insance",{"_index":421,"title":{},"body":{"classes/BaseService.html":{}}}],["inside",{"_index":70,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["instance",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["int",{"_index":384,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["intercept",{"_index":632,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["intercept(req",{"_index":634,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["interceptor",{"_index":628,"title":{"interceptors/HttpMockInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":629,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["interface",{"_index":655,"title":{"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{}},"body":{"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":656,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"overview.html":{}}}],["invalid",{"_index":93,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["invoke",{"_index":387,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokedelete",{"_index":352,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokedelete(request",{"_index":385,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokedelete(request:servicerequest):observable",{"_index":445,"title":{},"body":{"classes/BaseService.html":{}}}],["invokeget",{"_index":353,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeget(request",{"_index":390,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeget(request:servicerequest):observable",{"_index":439,"title":{},"body":{"classes/BaseService.html":{}}}],["invokepost",{"_index":354,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokepost(request",{"_index":392,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokepost(request:servicerequest):observable",{"_index":425,"title":{},"body":{"classes/BaseService.html":{}}}],["invokeput",{"_index":355,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeput(request",{"_index":395,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeput(request:servicerequest):observable",{"_index":443,"title":{},"body":{"classes/BaseService.html":{}}}],["ip",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{}}}],["ip:ipersondetails[]=this._users.filter((p:ipersondetails)=>{return",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{}}}],["ipersondetails",{"_index":542,"title":{"interfaces/IPersonDetails.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["ips",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{}}}],["irrespective",{"_index":1524,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["isvalid)?{notvaliduser:\"please",{"_index":1571,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["isvalid)?{numbersonly:\"only",{"_index":1225,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["isvalid=regexnumber.test(value",{"_index":1224,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["isvalidarray",{"_index":16,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["isvalidarray(data",{"_index":49,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["isvalidarray(data:any",{"_index":90,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["isvalidarraywithdata",{"_index":17,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["isvalidarraywithdata(data",{"_index":52,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["item",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{},"components/MessagesComponent.html":{}}}],["item.id",{"_index":574,"title":{},"body":{"components/HomeComponent.html":{}}}],["item.message",{"_index":1069,"title":{},"body":{"components/MessagesComponent.html":{}}}],["itself",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["iuser",{"_index":685,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["iw.lastupdated===lastupdated",{"_index":1482,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["iweighthistory",{"_index":562,"title":{"interfaces/IWeightHistory.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["karma/jasmin",{"_index":1683,"title":{},"body":{"index.html":{}}}],["key",{"_index":658,"title":{},"body":{"interfaces/IMessage.html":{}}}],["key?:string;//unique",{"_index":663,"title":{},"body":{"interfaces/IMessage.html":{}}}],["keys.enum",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{}}}],["keys.enum.ts",{"_index":1648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":825,"title":{},"body":{"components/LineChartComponent.html":{}}}],["last",{"_index":1404,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["lastupdated",{"_index":670,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["lastupdated:date|string",{"_index":682,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{}}}],["lastupdated:new",{"_index":1440,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["lastupdated:string=this.datepipe.transform(new",{"_index":1472,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["launch",{"_index":1715,"title":{},"body":{"index.html":{}}}],["lbs",{"_index":1182,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["lbs)');//weight",{"_index":824,"title":{},"body":{"components/LineChartComponent.html":{}}}],["leaks",{"_index":66,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{}}}],["left",{"_index":742,"title":{},"body":{"components/LineChartComponent.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["line",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["linechart",{"_index":719,"title":{},"body":{"components/LineChartComponent.html":{}}}],["linechartcomponent",{"_index":181,"title":{"components/LineChartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lines",{"_index":1699,"title":{},"body":{"index.html":{}}}],["list",{"_index":991,"title":{},"body":{"modules/MaterialModule.html":{}}}],["listen",{"_index":76,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{}}}],["listentomessagesstream",{"_index":1039,"title":{},"body":{"components/MessagesComponent.html":{}}}],["listentomsgsstream",{"_index":1098,"title":{},"body":{"injectables/MessagesService.html":{}}}],["listetoisloggedinstream",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["literal",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"components/PersonalDashboardComponent.html":{}}}],["loadchildren:()=>\"import('./pages/home/home.module').then(mod=>mod.homemodule",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadchildren:()=>\"import('./pages/personal",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadpersondetails",{"_index":1299,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["loadusers",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadusersfromassets",{"_index":1146,"title":{},"body":{"injectables/MockDataService.html":{}}}],["loadusersfromsesssion",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["local",{"_index":1414,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["log",{"_index":435,"title":{},"body":{"classes/BaseService.html":{}}}],["logger",{"_index":434,"title":{},"body":{"classes/BaseService.html":{}}}],["login",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["login.component.html",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":184,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":1544,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["make",{"_index":1677,"title":{},"body":{"index.html":{}}}],["manually",{"_index":416,"title":{},"body":{"classes/BaseService.html":{}}}],["map",{"_index":329,"title":{},"body":{"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"components/TopToolbarComponent.html":{}}}],["map((data:any",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["map((ips:ipersondetails",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((isloggedin:boolean",{"_index":337,"title":{},"body":{"classes/BaseComponent.html":{}}}],["map((msgs:imessage",{"_index":1077,"title":{},"body":{"components/MessagesComponent.html":{}}}],["map((response:serviceresponse",{"_index":1276,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["map((users:ipersondetails",{"_index":579,"title":{},"body":{"components/HomeComponent.html":{}}}],["margin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/LineChartComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["margin:auto",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["mat",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["matautocompletemodule",{"_index":962,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":964,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":966,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":969,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":971,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":973,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":975,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":97,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":977,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":981,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":983,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":985,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{},"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":491,"title":{},"body":{"modules/CoreModule.html":{}}}],["materialmodule",{"_index":484,"title":{"modules/MaterialModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":987,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":989,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math.floor(math.random",{"_index":594,"title":{},"body":{"components/HomeComponent.html":{}}}],["maticonmodule",{"_index":992,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":994,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":996,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":998,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1000,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1003,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":1005,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1008,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1010,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":1001,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1012,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1014,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1016,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1018,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":1020,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":1022,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":979,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":1024,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1026,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1028,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1030,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1032,"title":{},"body":{"modules/MaterialModule.html":{}}}],["memory",{"_index":65,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{}}}],["message",{"_index":659,"title":{},"body":{"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"interfaces/ServiceRequest.html":{}}}],["message(s",{"_index":1528,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["message:string",{"_index":662,"title":{},"body":{"interfaces/IMessage.html":{}}}],["messageenum",{"_index":410,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/enumerations.html":{}}}],["messages",{"_index":380,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{}}}],["messages'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["messages.component.html",{"_index":1037,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":1036,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.push({\"type\":type,message:(msgs",{"_index":1141,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages.push({\"type\":type,message:msg",{"_index":1139,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages=new",{"_index":1136,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages=null",{"_index":1135,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messagescomponent",{"_index":186,"title":{"components/MessagesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messageservice",{"_index":1048,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagesservice",{"_index":362,"title":{"injectables/MessagesService.html":{}},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["metadata",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["method",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["min",{"_index":1508,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["miscellaneous",{"_index":1640,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{}}}],["mock.interceptor",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.interceptor.ts",{"_index":631,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"coverage.html":{}}}],["mock.interceptor.ts:11",{"_index":633,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["mock.interceptor.ts:15",{"_index":638,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["mockdata",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{}}}],["mockdataservice",{"_index":867,"title":{"injectables/MockDataService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"coverage.html":{}}}],["mockdataservice:mockdataservice",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["mocked",{"_index":676,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{}}}],["mode",{"_index":1360,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["mode:'edit'|'readonly'|'add'='edit",{"_index":1411,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["mode=='readonly",{"_index":1378,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["models/message.interface",{"_index":1062,"title":{},"body":{"components/MessagesComponent.html":{},"injectables/MessagesService.html":{}}}],["models/person",{"_index":1268,"title":{},"body":{"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["models/service",{"_index":643,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["models/user.interface",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{}}}],["models/weight",{"_index":761,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["module",{"_index":208,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":210,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["msg.type}}{{msg.message",{"_index":1083,"title":{},"body":{"components/MessagesComponent.html":{}}}],["msgs",{"_index":1102,"title":{},"body":{"injectables/MessagesService.html":{},"interfaces/ServiceResponse.html":{}}}],["msgs).foreach((msg:string",{"_index":1138,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msgs.concat(this._msgservice.buildmessages(msgtypeenum.error,response.errormsgs",{"_index":456,"title":{},"body":{"classes/BaseService.html":{}}}],["msgs:imessage[]=new",{"_index":454,"title":{},"body":{"classes/BaseService.html":{}}}],["msgs:string[]|string",{"_index":1134,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msgservice",{"_index":1044,"title":{},"body":{"components/MessagesComponent.html":{}}}],["msgservice:messagesservice",{"_index":1066,"title":{},"body":{"components/MessagesComponent.html":{}}}],["msgtypeenum",{"_index":407,"title":{},"body":{"classes/BaseService.html":{},"injectables/MessagesService.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":1109,"title":{},"body":{"injectables/MessagesService.html":{}}}],["name",{"_index":37,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IPersonDetails.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["name:new",{"_index":1432,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["name:string",{"_index":678,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/NameWeightCardComponent.html":{}}}],["nameweightcardcomponent",{"_index":188,"title":{"components/NameWeightCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigateto",{"_index":264,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["needed",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":24,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["next",{"_index":636,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["next.handle(req",{"_index":646,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["ng",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["ng_validators",{"_index":1192,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["ngmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":63,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ngoninit",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ngweightwatchers",{"_index":1668,"title":{},"body":{"index.html":{}}}],["no_url_found",{"_index":1654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["none",{"_index":847,"title":{},"body":{"components/LineChartComponent.html":{}}}],["npm",{"_index":1671,"title":{},"body":{"index.html":{}}}],["null",{"_index":30,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["number",{"_index":536,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"index.html":{}}}],["number(params['id']).valueof():null",{"_index":1331,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["numbers",{"_index":1226,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{}}}],["numbersonlydirective",{"_index":203,"title":{"directives/NumbersonlyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbersonlydirective.validatenumbersonly(control",{"_index":1213,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["numbersonlydirective.validatenumbersonly,validators.maxlength(3",{"_index":1439,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["object",{"_index":51,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":74,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["observable(observer",{"_index":1328,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["observable>(observer",{"_index":647,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["observer",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["observer.complete",{"_index":654,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"components/PersonalDashboardComponent.html":{}}}],["observer.next(response",{"_index":653,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["observer.next(this._id",{"_index":1332,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["occured",{"_index":1653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["of(this.builderrorresponse",{"_index":438,"title":{},"body":{"classes/BaseService.html":{}}}],["oncancel",{"_index":1355,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["oncancelclicked",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileFormComponent.html":{}}}],["oncancelclicked(clicked",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["oncancelclicked(clicked:boolean",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{}}}],["oncancelclicked=new",{"_index":1413,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["once",{"_index":62,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["onclick",{"_index":1162,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["ondelete",{"_index":1163,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["ondestroy",{"_index":319,"title":{},"body":{"classes/BaseComponent.html":{}}}],["onedit",{"_index":1356,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["onfileinput",{"_index":1357,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["onfileinput($event",{"_index":1390,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["oninit",{"_index":318,"title":{},"body":{"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["onsave",{"_index":1358,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["operation",{"_index":389,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["otherwise",{"_index":1523,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["out",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":1175,"title":{},"body":{"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{},"index.html":{}}}],["outputs",{"_index":1164,"title":{},"body":{"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["override",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["overview",{"_index":1717,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.username==username",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1620,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1085,"title":{},"body":{"components/MessagesComponent.html":{}}}],["padding:0.25rem",{"_index":1187,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["padding:0.35em",{"_index":1552,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["padding:1em",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["page",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["pagenotfoundcomponent",{"_index":190,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages/dashboard",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/home",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/login",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["param",{"_index":82,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["parent",{"_index":422,"title":{},"body":{"classes/BaseService.html":{},"components/NameWeightCardComponent.html":{}}}],["passed",{"_index":34,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["passing",{"_index":420,"title":{},"body":{"classes/BaseService.html":{}}}],["password",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{}}}],["password=this._loginform.controls.password.value",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["patch",{"_index":448,"title":{},"body":{"classes/BaseService.html":{}}}],["path",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"components/LineChartComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["pathmatch",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1532,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["percent",{"_index":1689,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1061,"title":{},"body":{"components/MessagesComponent.html":{}}}],["person",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["person_add",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{}}}],["personal",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["personaldashboardcomponent",{"_index":193,"title":{"components/PersonalDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["personaldashboardmodule",{"_index":1337,"title":{"modules/PersonalDashboardModule.html":{}},"body":{"modules/PersonalDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["personaldashboardroutingmodule",{"_index":1341,"title":{"modules/PersonalDashboardRoutingModule.html":{}},"body":{"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["persondetails",{"_index":1361,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["persondetails(persondetails:ipersondetails",{"_index":1423,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["persondetailsservice",{"_index":532,"title":{"injectables/PersonDetailsService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["persondetailsservice:persondetailsservice",{"_index":569,"title":{},"body":{"components/HomeComponent.html":{},"components/PersonalDashboardComponent.html":{}}}],["pic",{"_index":1419,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["picture",{"_index":1416,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["pipe",{"_index":71,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["place",{"_index":1514,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["plot",{"_index":831,"title":{},"body":{"components/LineChartComponent.html":{}}}],["points",{"_index":832,"title":{},"body":{"components/LineChartComponent.html":{}}}],["pool",{"_index":1071,"title":{},"body":{"components/MessagesComponent.html":{}}}],["portalmodule",{"_index":952,"title":{},"body":{"modules/MaterialModule.html":{}}}],["position",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["possibility",{"_index":1426,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["post",{"_index":394,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["prevent",{"_index":64,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{}}}],["private",{"_index":466,"title":{},"body":{"injectables/CoreInjectorService.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["prod",{"_index":1674,"title":{},"body":{"index.html":{}}}],["production",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["profile_updated",{"_index":1650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profileformcomponent",{"_index":196,"title":{"components/ProfileFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1711,"title":{},"body":{"index.html":{}}}],["promise",{"_index":266,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["protected",{"_index":10,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["protractor",{"_index":268,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":1191,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["provide:http_interceptors,useclass:httpmockinterceptor,multi:true",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:ng_validators,useexisting:numbersonlydirective",{"_index":1211,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["provide:ng_validators,useexisting:validusernamedirective",{"_index":1564,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["provided",{"_index":833,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["providedin",{"_index":310,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["providers",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"directives/NumbersonlyDirective.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"directives/ValidUsernameDirective.html":{},"overview.html":{}}}],["providers:[datepipe",{"_index":517,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["pull",{"_index":1504,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["purpose",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["put",{"_index":397,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["re",{"_index":1055,"title":{},"body":{"components/MessagesComponent.html":{}}}],["reactive",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":495,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{}}}],["readonly",{"_index":1366,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["reative",{"_index":1380,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["redirectto",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regexnumber:regexp=new",{"_index":1221,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["regexp",{"_index":1222,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["regexp(/^[a",{"_index":1570,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["register",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["registeronvalidatorchange",{"_index":1195,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["registeronvalidatorchange(fn",{"_index":1199,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["registeronvalidatorchange?(fn",{"_index":1214,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["remove",{"_index":841,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{}}}],["rendering",{"_index":850,"title":{},"body":{"components/LineChartComponent.html":{},"components/LoginComponent.html":{}}}],["req",{"_index":639,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["request",{"_index":372,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["request.handlemessages",{"_index":452,"title":{},"body":{"classes/BaseService.html":{}}}],["request.interface",{"_index":400,"title":{},"body":{"classes/BaseService.html":{}}}],["request.interface.ts",{"_index":1510,"title":{},"body":{"interfaces/ServiceRequest.html":{},"coverage.html":{}}}],["request=this.buildservicerequest(serviceurls.get_all_users,null",{"_index":1274,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["request=this.buildservicerequest(serviceurls.save_user,ipersondetails",{"_index":1284,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["request=this.buildservicerequest(url,null",{"_index":1288,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["request=this.buildservicerequest(userurl",{"_index":1282,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["requested",{"_index":1655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["require",{"_index":1617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/ProfileFormComponent.html":{}}}],["reset",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["response",{"_index":376,"title":{},"body":{"classes/BaseService.html":{},"components/LineChartComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["response.data",{"_index":1278,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["response.interface",{"_index":401,"title":{},"body":{"classes/BaseService.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/PersonDetailsService.html":{}}}],["response.interface.ts",{"_index":1519,"title":{},"body":{"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["response:httpresponse",{"_index":648,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["response:serviceresponse",{"_index":450,"title":{},"body":{"classes/BaseService.html":{}}}],["response=new",{"_index":650,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["result",{"_index":96,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":98,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["returns",{"_index":32,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["returs",{"_index":1527,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["right",{"_index":739,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["right:0px",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["root",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["root'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["rotate",{"_index":814,"title":{},"body":{"components/LineChartComponent.html":{}}}],["route",{"_index":1308,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["router",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/TopToolbarComponent.html":{}}}],["router:router",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/TopToolbarComponent.html":{}}}],["router:router,private",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{}}}],["routermodule",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":275,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{}}}],["routing.module.ts",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["run",{"_index":1675,"title":{},"body":{"index.html":{}}}],["running",{"_index":1678,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":55,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":330,"title":{},"body":{"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sample",{"_index":1686,"title":{},"body":{"index.html":{}}}],["sass",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1250,"title":{},"body":{"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["save_user",{"_index":1659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["savechanges",{"_index":1240,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["savechanges(ipersondetails",{"_index":1248,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["savechanges(ipersondetails:ipersondetails",{"_index":1283,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["saveuser",{"_index":1660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scale",{"_index":756,"title":{},"body":{"components/LineChartComponent.html":{}}}],["scrollingmodule",{"_index":954,"title":{},"body":{"modules/MaterialModule.html":{}}}],["scss",{"_index":1088,"title":{},"body":{"components/MessagesComponent.html":{}}}],["section",{"_index":381,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["see",{"_index":1708,"title":{},"body":{"index.html":{}}}],["selection",{"_index":754,"title":{},"body":{"components/LineChartComponent.html":{}}}],["selector",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["server",{"_index":1670,"title":{},"body":{"index.html":{}}}],["service",{"_index":371,"title":{},"body":{"classes/BaseService.html":{},"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/enumerations.html":{}}}],["service_failire",{"_index":1651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["servicerequest",{"_index":375,"title":{"interfaces/ServiceRequest.html":{}},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceRequest.html":{},"coverage.html":{}}}],["serviceresponse",{"_index":377,"title":{"interfaces/ServiceResponse.html":{}},"body":{"classes/BaseService.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["services",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["services/messages/messages.service",{"_index":1063,"title":{},"body":{"components/MessagesComponent.html":{}}}],["services/mock",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/session",{"_index":307,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/HttpMockInterceptor.html":{},"components/TopToolbarComponent.html":{}}}],["serviceurls",{"_index":1269,"title":{},"body":{"injectables/PersonDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["session",{"_index":1309,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["sessionstorageservice",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["set",{"_index":430,"title":{},"body":{"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{}}}],["setinjector(injector",{"_index":473,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["setpersondetails(persondetails",{"_index":1400,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["setweights(weights",{"_index":750,"title":{},"body":{"components/LineChartComponent.html":{}}}],["shape",{"_index":758,"title":{},"body":{"components/LineChartComponent.html":{}}}],["shared/shared.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["sharedmodule",{"_index":224,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":968,"title":{},"body":{"modules/MaterialModule.html":{}}}],["show",{"_index":379,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["showmessages",{"_index":1099,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showmessages(messages",{"_index":1117,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showmessages(messages:imessage",{"_index":1130,"title":{},"body":{"injectables/MessagesService.html":{}}}],["shown",{"_index":826,"title":{},"body":{"components/LineChartComponent.html":{}}}],["similar",{"_index":1688,"title":{},"body":{"index.html":{}}}],["single",{"_index":1108,"title":{},"body":{"injectables/MessagesService.html":{}}}],["size:18px",{"_index":1188,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["size:20px",{"_index":1553,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["size:34px",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["something",{"_index":1687,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["space",{"_index":1554,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["span",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["span')).gettext",{"_index":272,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1009,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../environment.prod.ts",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../messages.enum.ts",{"_index":1642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../msg",{"_index":1643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../service",{"_index":1645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../storage",{"_index":1647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/abstract",{"_index":6,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/core/components/login/login.component.ts",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/core/components/login/login.component.ts:18",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:19",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:20",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:28",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:37",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:47",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:54",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:74",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts",{"_index":1035,"title":{},"body":{"components/MessagesComponent.html":{},"coverage.html":{}}}],["src/app/core/components/messages/messages.component.ts:16",{"_index":1045,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:20",{"_index":1043,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:26",{"_index":1049,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:37",{"_index":1051,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:44",{"_index":1046,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/page",{"_index":1229,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/components/top",{"_index":1540,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module",{"_index":622,"title":{},"body":{"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{}}}],["src/app/core/core.module.ts",{"_index":485,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/enums/messages.enum",{"_index":411,"title":{},"body":{"classes/BaseService.html":{}}}],["src/app/core/enums/messages.enum.ts",{"_index":1649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/enums/msg",{"_index":408,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/enums/service",{"_index":1270,"title":{},"body":{"injectables/PersonDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/enums/storage",{"_index":1663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/guards/auth",{"_index":298,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["src/app/core/interceptor/http",{"_index":630,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"coverage.html":{}}}],["src/app/core/material/material.module.ts",{"_index":946,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/core/models/message.interface",{"_index":405,"title":{},"body":{"classes/BaseService.html":{}}}],["src/app/core/models/message.interface.ts",{"_index":657,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{}}}],["src/app/core/models/service",{"_index":399,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["src/app/core/models/user.interface.ts",{"_index":686,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/core/services/core",{"_index":327,"title":{},"body":{"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["src/app/core/services/messages/messages.service",{"_index":406,"title":{},"body":{"classes/BaseService.html":{}}}],["src/app/core/services/messages/messages.service.ts",{"_index":1093,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/app/core/services/messages/messages.service.ts:13",{"_index":1100,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:23",{"_index":1106,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:30",{"_index":1116,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:38",{"_index":1111,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:46",{"_index":1120,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:54",{"_index":1118,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:62",{"_index":1115,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:74",{"_index":1103,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:91",{"_index":1104,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/mock",{"_index":1143,"title":{},"body":{"injectables/MockDataService.html":{},"coverage.html":{}}}],["src/app/core/services/session",{"_index":326,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["src/app/features/components/line",{"_index":690,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["src/app/features/components/name",{"_index":1158,"title":{},"body":{"components/NameWeightCardComponent.html":{},"coverage.html":{}}}],["src/app/features/components/profile",{"_index":1345,"title":{},"body":{"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/features/features.module",{"_index":621,"title":{},"body":{"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{}}}],["src/app/features/features.module.ts",{"_index":505,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["src/app/features/models/person",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["src/app/features/models/weight",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IWeightHistory.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["src/app/features/services/person",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/components/home/home.component.ts",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/components/home/home.component.ts:103",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:19",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:20",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:21",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:27",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:32",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:41",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:49",{"_index":537,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:57",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:72",{"_index":534,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:83",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:99",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home",{"_index":623,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":619,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/pages/personal",{"_index":1289,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive",{"_index":1403,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts",{"_index":1189,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:10",{"_index":1198,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:16",{"_index":1204,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:19",{"_index":1200,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:28",{"_index":1207,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/valid",{"_index":1405,"title":{},"body":{"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1537,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1672,"title":{},"body":{"index.html":{}}}],["started",{"_index":1667,"title":{"index.html":{}},"body":{}}],["state",{"_index":1373,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["statements",{"_index":1574,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["static",{"_index":467,"title":{},"body":{"injectables/CoreInjectorService.html":{},"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["steelblue",{"_index":854,"title":{},"body":{"components/LineChartComponent.html":{}}}],["storage.service",{"_index":309,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/TopToolbarComponent.html":{}}}],["storage.service.ts",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["storage/session",{"_index":308,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["storagekeys",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["storageservice",{"_index":304,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/HttpMockInterceptor.html":{}}}],["storageservice:sessionstorageservice",{"_index":644,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["storageservice:sessionstorageservice,private",{"_index":312,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["stream",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["streams",{"_index":75,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["stroke",{"_index":848,"title":{},"body":{"components/LineChartComponent.html":{}}}],["style('text",{"_index":820,"title":{},"body":{"components/LineChartComponent.html":{}}}],["styles",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["styleurls",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subject",{"_index":25,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subscribe",{"_index":339,"title":{},"body":{"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/MessagesComponent.html":{}}}],["subscribe(((users:ipersondetails",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((data:ipersondetails",{"_index":1324,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["subscriptions",{"_index":60,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subscriptons",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subsink",{"_index":12,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subsink=new",{"_index":67,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["succesmsgs",{"_index":1525,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["success",{"_index":660,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/MessagesService.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/enumerations.html":{}}}],["success(messages",{"_index":1119,"title":{},"body":{"injectables/MessagesService.html":{}}}],["success(messages:string[]|string",{"_index":1129,"title":{},"body":{"injectables/MessagesService.html":{}}}],["success:boolean",{"_index":1526,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["success:false,errormsgs:messageenum.service_failire",{"_index":463,"title":{},"body":{"classes/BaseService.html":{}}}],["successmsgs",{"_index":1522,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["successmsgs:string[]|string",{"_index":1530,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["suffix",{"_index":1186,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["super",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["super.ngondestory",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["super.ngondestroy",{"_index":837,"title":{},"body":{"components/LineChartComponent.html":{}}}],["super.ngoninit",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/TopToolbarComponent.html":{}}}],["support",{"_index":1721,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":700,"title":{},"body":{"components/LineChartComponent.html":{},"modules.html":{}}}],["switch(this.mode",{"_index":1489,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["t",{"_index":1511,"title":{},"body":{"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{}}}],["table",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":73,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"components/PersonalDashboardComponent.html":{}}}],["takeuntil(this._destroy",{"_index":572,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{}}}],["tap",{"_index":402,"title":{},"body":{"classes/BaseService.html":{},"components/HomeComponent.html":{}}}],["tap((ip:ipersondetails",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{}}}],["tap((response:serviceresponse",{"_index":427,"title":{},"body":{"classes/BaseService.html":{}}}],["tap((response:serviceresponse)=>{//side",{"_index":441,"title":{},"body":{"classes/BaseService.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["templateurl",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["test",{"_index":1681,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1682,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1680,"title":{},"body":{"index.html":{}}}],["text",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["text('weight",{"_index":823,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this._addnewpersondetails.history=new",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._addnewpersondetails.id=this.getuniqueid",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._addnewpersondetails=ip",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._addnewpersondetails=new",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._addnewpersondetails=null",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._destroy$.complete",{"_index":342,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._destroy$.next",{"_index":341,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._editprofilepic=\"disabled",{"_index":1454,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._editprofilepic=null",{"_index":1499,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._http.delete(this._rest_url+request.url,this._httpoptions).pipe",{"_index":446,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http.get>(this._rest_url+request.url).pipe",{"_index":440,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http.post>(this._rest_url+request.url,request.data,this._httpoptions).pipe",{"_index":426,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http.put>(this._rest_url+request.url,request.data,this._httpoptions).pipe",{"_index":444,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http=coreinjectorservice.injector.get(httpclient",{"_index":423,"title":{},"body":{"classes/BaseService.html":{}}}],["this._id=!isnan(params['id'])?new",{"_index":1330,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._imgsrc=filereader.result",{"_index":1463,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._imgsrc=this._persondetails.imgsrc",{"_index":1452,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._injector",{"_index":479,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["this._injector=injector",{"_index":477,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["this._invaliduser=true",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._isloggedin=isloggedin",{"_index":338,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._iweights=[...this._persondetails.history",{"_index":1326,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._iweights=null",{"_index":1335,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._loginform.controls",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._loginform=this.fb.group",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._messages=msgs",{"_index":1078,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._messages=null",{"_index":1081,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._mode='addfriend",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._mode='home",{"_index":592,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._msgservice.showmessages(msgs",{"_index":460,"title":{},"body":{"classes/BaseService.html":{}}}],["this._msgservice=coreinjectorservice.injector.get(messagesservice",{"_index":424,"title":{},"body":{"classes/BaseService.html":{}}}],["this._msgsubject$.asobservable",{"_index":1126,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._msgsubject$.next(msgs",{"_index":1125,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._persondetails.age=this._profileform.controls.age.value",{"_index":1469,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.imgsrc=imgs",{"_index":1465,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.lastupdated=lastupdated",{"_index":1479,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.name=this._profileform.controls.name.value",{"_index":1468,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.username=this._profileform.controls.username.value",{"_index":1486,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.weight=weight",{"_index":1478,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails=data",{"_index":1325,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._persondetails=ipersondetails",{"_index":1334,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._persondetails=persondetails",{"_index":1424,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.addcontrol(\"username\",new",{"_index":1444,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls",{"_index":1455,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.age.setvalue(this._persondetails.age",{"_index":1449,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.lastupdated.setvalue(lastupdated",{"_index":1477,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.lastupdated.setvalue(this._persondetails.lastupdated",{"_index":1451,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.name.setvalue(this._persondetails.name",{"_index":1448,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.weight.setvalue(this._persondetails.weight",{"_index":1450,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform=this.fb.group",{"_index":1431,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._showmsg=false",{"_index":1082,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._showmsg=true",{"_index":1080,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._storageservice.clearall",{"_index":1548,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this._storageservice.emitisloggedin(false",{"_index":1549,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this._storageservice.emitisloggedin(true",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._storageservice.setdatainsessionstroageforkey(storagekeys.current_user,user",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._storageservice.setdatainsessionstroageforkey(storagekeys.user_profiles,users",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._storageservice=coreinjectorservice.injector.get(sessionstorageservice",{"_index":333,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._users$=this._storageservice.getusersfromsession().pipe",{"_index":571,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._users$=this.persondetailsservice.deletebyid(id).pipe",{"_index":578,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._users=users",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._weights.push(w",{"_index":784,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this._weights=new",{"_index":777,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.cardclicked.emit(this.id",{"_index":1180,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["this.changefieldstate",{"_index":1467,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.createformgroup",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["this.datachanged.emit(this._persondetails",{"_index":1487,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.deleteclicked.emit(this.id",{"_index":1181,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["this.drawlinechart",{"_index":791,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.drawxandyaxis",{"_index":790,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.emitmessages(messages",{"_index":1131,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.emitmessages(null",{"_index":1142,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.emitmessages(this.buildmessages(msgtypeenum.error,messages",{"_index":1128,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.enableordisableformfields(false",{"_index":1491,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.enableordisableformfields(true",{"_index":1493,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.getidfromroute().pipe",{"_index":1321,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.handlemessagesfromresponse(request,response",{"_index":432,"title":{},"body":{"classes/BaseService.html":{}}}],["this.hasvalue(this._profileform",{"_index":1447,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.age))?this.persondetails.age:\"\",disabled:this.checkformode()},[validators.required,numbersonlydirective.validatenumbersonly,validators.maxlength(3",{"_index":1436,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.imgsrc))?this.persondetails.imgsrc:\"\",disabled:false",{"_index":1442,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.lastupdated))?this.persondetails.lastupdated:\"\",disabled:true",{"_index":1441,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.name))?this.persondetails.name:\"\",disabled:this.checkformode()},[validators.required,validators.maxlength(100",{"_index":1434,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.weight))?this.persondetails.weight:\"\",disabled:this.checkformode()},[validators.required",{"_index":1438,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.height",{"_index":768,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.hostelement=this.eleref.nativeelement",{"_index":772,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.http.get(this._jsonurl",{"_index":1157,"title":{},"body":{"injectables/MockDataService.html":{}}}],["this.initalized3svgobject",{"_index":788,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.initializechart",{"_index":786,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.initializexandyaxis",{"_index":789,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.invokeget(request).pipe",{"_index":1275,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["this.invokepost(request).pipe",{"_index":1285,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["this.line",{"_index":827,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.listentomessagesstream",{"_index":1067,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this.listetoisloggedinstream",{"_index":334,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.loadpersondetails",{"_index":1320,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.loadusers",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loadusersfromsesssion",{"_index":570,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.margin.bottom",{"_index":771,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.margin.left",{"_index":766,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.margin.right",{"_index":767,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.margin.top",{"_index":770,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.mockdataservice.loadusersfromassets().pipe",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode=\"edit",{"_index":1466,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.mode=\"readonly",{"_index":1488,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.mode==='readonly'?true:false",{"_index":1456,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.oncancelclicked.emit(true",{"_index":1500,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.persondetailsservice.getuserbyid(id",{"_index":1323,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.persondetailsservice.savechanges(ip).pipe(delay(0",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.persondetailsservice.savechanges(this._persondetails).subscribe((data",{"_index":1336,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.router.navigatebyurl(\"/pages/home",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(\"pages/dashboard/\"+id",{"_index":576,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigatebyurl(\"pages/home",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalDashboardComponent.html":{}}}],["this.router.navigatebyurl(\"pages/login",{"_index":314,"title":{},"body":{"guards/AuthGuardService.html":{},"components/TopToolbarComponent.html":{}}}],["this.storageservice.clearall",{"_index":315,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.storageservice.emitisloggedin(true",{"_index":316,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.storageservice.isuserloggedin",{"_index":313,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.storageservice.processrequestbyurl(req.url,req.body).pipe(delay(0)).subscribe((data:serviceresponse",{"_index":649,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["this.subsink.add(this._storageservice.listentoislogged().pipe",{"_index":335,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.subsink.add(this.activatedroute.params.subscribe(params",{"_index":1329,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.subsink.add(this.msgservice.listentomsgsstream().pipe",{"_index":1073,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this.subsink.unsubscribe",{"_index":340,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.svg",{"_index":792,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg.append('g",{"_index":806,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg.append('path",{"_index":834,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg.selectall(\"*\").remove",{"_index":844,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg=null",{"_index":845,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.updatechart",{"_index":787,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.updateformgroup",{"_index":1429,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.width",{"_index":764,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.xaxis",{"_index":797,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.xaxis(d.lastupdated",{"_index":829,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.xaxis.domain(d3array.extent(this._weights",{"_index":801,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.yaxis",{"_index":799,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.yaxis(d.weight",{"_index":830,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.yaxis.domain(d3array.extent(this._weights",{"_index":804,"title":{},"body":{"components/LineChartComponent.html":{}}}],["title",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["todo",{"_index":447,"title":{},"body":{"classes/BaseService.html":{},"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"index.html":{}}}],["toggle",{"_index":972,"title":{},"body":{"modules/MaterialModule.html":{},"components/ProfileFormComponent.html":{}}}],["toolbar",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar.component",{"_index":490,"title":{},"body":{"modules/CoreModule.html":{}}}],["toolbar.component.html",{"_index":1543,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":1542,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":1541,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:12",{"_index":1545,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:18",{"_index":1547,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:24",{"_index":1546,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":489,"title":{},"body":{"modules/CoreModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["top:0px",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["toptoolbarcomponent",{"_index":199,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":1053,"title":{},"body":{"components/MessagesComponent.html":{}}}],["trackbyid",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["trackbyid(index",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{}}}],["trackbyid(index:number,item:ipersondetails",{"_index":573,"title":{},"body":{"components/HomeComponent.html":{}}}],["trackbymsg",{"_index":1040,"title":{},"body":{"components/MessagesComponent.html":{}}}],["trackbymsg(index",{"_index":1050,"title":{},"body":{"components/MessagesComponent.html":{}}}],["trackbymsg(index:number,item:imessage",{"_index":1068,"title":{},"body":{"components/MessagesComponent.html":{}}}],["transform",{"_index":808,"title":{},"body":{"components/LineChartComponent.html":{}}}],["translate",{"_index":796,"title":{},"body":{"components/LineChartComponent.html":{}}}],["translate(0",{"_index":810,"title":{},"body":{"components/LineChartComponent.html":{}}}],["tree",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["triggered",{"_index":1218,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["true",{"_index":88,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"guards/AuthGuardService.html":{},"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":361,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["type.enum",{"_index":409,"title":{},"body":{"classes/BaseService.html":{},"injectables/MessagesService.html":{}}}],["type.enum.ts",{"_index":1644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type:'error'|'success'|'info",{"_index":661,"title":{},"body":{"interfaces/IMessage.html":{}}}],["typeof",{"_index":83,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["undefined",{"_index":47,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["under",{"_index":1713,"title":{},"body":{"index.html":{}}}],["unexpected",{"_index":1652,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unique",{"_index":677,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/MessagesComponent.html":{}}}],["unit",{"_index":1679,"title":{},"body":{"index.html":{}}}],["unless",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["until",{"_index":77,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{}}}],["update",{"_index":733,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{}}}],["updatechart",{"_index":709,"title":{},"body":{"components/LineChartComponent.html":{}}}],["updated",{"_index":1503,"title":{},"body":{"components/ProfileFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updateformgroup",{"_index":1359,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["upload",{"_index":1501,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["uploaded",{"_index":1392,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["url",{"_index":373,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{}}}],["url.enum",{"_index":1271,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["url.enum.ts",{"_index":1646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url:string",{"_index":1512,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["url:url,data:data,handlemessages:handlemessages",{"_index":462,"title":{},"body":{"classes/BaseService.html":{}}}],["url=serviceurls.delete_user.repeat(1)+\"/\"+id",{"_index":1287,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["use",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["used",{"_index":69,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"modules/AppModule.html":{},"classes/BaseService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["useexisting",{"_index":1193,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["user",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["user.username=username",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.username}}/12345",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{}}}],["user:iuser=new",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["user_profiles",{"_index":1664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["username",{"_index":671,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["username.directive",{"_index":1407,"title":{},"body":{"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{}}}],["username.directive.ts",{"_index":1557,"title":{},"body":{"directives/ValidUsernameDirective.html":{},"coverage.html":{}}}],["username.directive.ts:10",{"_index":1559,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["username.directive.ts:15",{"_index":1561,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["username.directive.ts:18",{"_index":1560,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["username.directive.ts:22",{"_index":1563,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["username/password",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["username/valid",{"_index":1406,"title":{},"body":{"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{}}}],["username:new",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{}}}],["username:string",{"_index":679,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"components/NameWeightCardComponent.html":{}}}],["username:string=this._loginform.controls.username.value",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["users",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["users:ipersondetails[]=null",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["users=data",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["userurl=serviceurls.get_user.repeat(1)+\"/\"+id",{"_index":1281,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["using",{"_index":418,"title":{},"body":{"classes/BaseService.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"index.html":{}}}],["utility",{"_index":58,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["valid",{"_index":45,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["validate",{"_index":1196,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["validate(control",{"_index":1203,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["validatenumbersonly",{"_index":1197,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validatenumbersonly(control",{"_index":1206,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validatenumbersonly(control:formcontrol):validationerrors",{"_index":1215,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validates",{"_index":1208,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validateusername",{"_index":1558,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["validateusername(control",{"_index":1562,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["validateusername(control:formcontrol):validationerrors",{"_index":1566,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["validation",{"_index":1217,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["validationerrors",{"_index":1205,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["validationerrors:null",{"_index":1228,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["validator",{"_index":1190,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["validators",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["validusernamedirective",{"_index":205,"title":{"directives/ValidUsernameDirective.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"coverage.html":{},"overview.html":{}}}],["validusernamedirective.validateusername(control",{"_index":1565,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length==0",{"_index":1220,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["value=control.value",{"_index":1216,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"directives/ValidUsernameDirective.html":{}}}],["values",{"_index":1425,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["var",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["variable",{"_index":1090,"title":{},"body":{"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1729,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":72,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{}}}],["viewencapsulation",{"_index":752,"title":{},"body":{"components/LineChartComponent.html":{}}}],["viewencapsulation.none",{"_index":693,"title":{},"body":{"components/LineChartComponent.html":{}}}],["void",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"directives/ValidUsernameDirective.html":{}}}],["w.lastupdated=new",{"_index":781,"title":{},"body":{"components/LineChartComponent.html":{}}}],["w.weight=iw.weight",{"_index":783,"title":{},"body":{"components/LineChartComponent.html":{}}}],["w:iweighthistory=new",{"_index":779,"title":{},"body":{"components/LineChartComponent.html":{}}}],["watchers",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["watchers/documentation/index.html",{"_index":1720,"title":{},"body":{"index.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["weight",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["weight:bold",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["weight:new",{"_index":1437,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weight:number",{"_index":681,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{}}}],["weight:number=0",{"_index":1176,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["weight=this._profileform.controls.weight.value",{"_index":1470,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weights",{"_index":711,"title":{},"body":{"components/LineChartComponent.html":{}}}],["weights(weights:iweighthistory",{"_index":773,"title":{},"body":{"components/LineChartComponent.html":{}}}],["weights.foreach((iw:iweighthistory",{"_index":778,"title":{},"body":{"components/LineChartComponent.html":{}}}],["weights.push(historydata",{"_index":1485,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weights:iweighthistory[]=this.isvalidarraywithdata(this._persondetails.history)?this._persondetails.history:new",{"_index":1480,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weightwatchers/api",{"_index":364,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["whole",{"_index":1057,"title":{},"body":{"components/MessagesComponent.html":{}}}],["width",{"_index":701,"title":{},"body":{"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["width:100",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:300px",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["works",{"_index":1235,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["x",{"_index":721,"title":{},"body":{"components/LineChartComponent.html":{}}}],["xaxis",{"_index":702,"title":{},"body":{"components/LineChartComponent.html":{}}}],["y",{"_index":722,"title":{},"body":{"components/LineChartComponent.html":{}}}],["yaxis",{"_index":703,"title":{},"body":{"components/LineChartComponent.html":{}}}],["z0",{"_index":1568,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["za",{"_index":1567,"title":{},"body":{"directives/ValidUsernameDirective.html":{}}}],["zone.js",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractBaseUtil.html":{"url":"classes/AbstractBaseUtil.html","title":"class - AbstractBaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractBaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstract-base/base.util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/abstract-base/base.util.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.util.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.util.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:55\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:41\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:31\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:21\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {SubSink} from 'subsink';\nimport { Subject } from 'rxjs';\n\nexport abstract class AbstractBaseUtil{\n\n    //Utility to add all subscriptions and destroy at once in ngOnDestroy to prevent any memory leaks\n    subsink=new SubSink();\n\n    //Compliementory to subsink to be used to inside rxjs pipe via takeUntil so that observable streams listen until the corresponding component is destroyed.\n    protected _destroy$=new Subject();\n\n\n    constructor(){\n        \n    }\n\n    /**\n   * Checks if the given object is an array with data\n   * @param data\n   */\n  isValidArrayWithData(data: any) {\n    if (data != null && typeof data != \"undefined\" && Array.isArray(data) && data.length > 0) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks if the given object is an array with data\n   * @param data\n   */\n  isValidArray(data:any){\n    if(data!=null && typeof data!=\"undefined\" && Array.isArray(data)){\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks if the given data is valid i.e., not null, undefined and no empty string\n   * @param data\n   */\n  hasValue(data: any) {\n    if (data == null || data == undefined || data == \"undefined\" || data == \"null\" || data == 'Invalid Date') {\n      return false\n    }\n    if (data != null && typeof data === \"string\" && data.trim().length == 0) {\n      return false\n    }\n    return true\n  }\n  /**\n   * Check if value is null or empty and returns empty string.\n   * passed may be an array or string\n   * @param value\n   */\n  getNullForEmtpy(value: any) {\n    if (value != null && typeof value != \"undefined\") {\n      return value;\n    }\n    return \"\";\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goHome\n                        \n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ng-weight-watchers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseComponent } from './core/abstract-base/base.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent extends BaseComponent{\n  title = 'ng-weight-watchers';\n\n  constructor(private router:Router){\n      super();\n  }\n  ngOnInit(){\n    super.ngOnInit();\n  }\n  goHome(){\n    this.router.navigateByUrl(\"pages/home\");\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n       \n        \n        home\n     \n      \n    \n    \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                button{\n    margin-bottom:10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 home                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nAppModule -->\n\nFeaturesModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHttpMockInterceptor\n\nHttpMockInterceptor\n\nAppModule -->\n\nHttpMockInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpMockInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FeaturesModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { FeaturesModule } from './features/features.module';\nimport { CoreInjectorService } from './core/services/core-injector/core-injector.service';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpMockInterceptor } from './core/interceptor/http-mock.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    FeaturesModule,\n    AppRoutingModule,\n    HttpClientModule,\n    \n\n  ],\n  providers: [{provide:HTTP_INTERCEPTORS,useClass:HttpMockInterceptor,multi:true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(injector:Injector){\n    //used to create runtime instance of the services as needed for base classes.\n    CoreInjectorService.injector=injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule} from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from './core/components/login/login.component';\nimport { PageNotFoundComponent } from './core/components/page-not-found/page-not-found.component';\n\n\nconst routes: Routes = [\n \n  {\n    path: \"pages/login\",\n    component: LoginComponent,\n  },\n  \n  {\n    path: \"pages/home\",\n    loadChildren:()=>\"import('./pages/home/home.module').then(mod=>mod.HomeModule)\"\n  },\n  {\n    path: \"pages/dashboard\",\n    loadChildren:()=>\"import('./pages/personal-dashboard/personal-dashboard.module').then(mod=>mod.PersonalDashboardModule)\"\n  },\n  { path: \"\", redirectTo: \"pages/login\", pathMatch: \"full\" },\n  { path: \"**\", component:PageNotFoundComponent }\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth-guard/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: SessionStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth-guard/auth-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth-guard/auth-guard.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { SessionStorageService } from '../../services/session-storage/session-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n \n  constructor(private storageService:SessionStorageService,private router:Router) { }\n\n\n  canActivate(): boolean {\n    if (!this.storageService.isUserLoggedIn()) {\n      this.router.navigateByUrl(\"pages/login\");\n      this.storageService.clearAll();\n      return false;\n    }\n    this.storageService.emitIsLoggedin(true);\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstract-base/base.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/abstract-base/base.component.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.component.ts:38\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.component.ts:20\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { AbstractBaseUtil } from './base.util';\nimport { SessionStorageService } from 'src/app/core/services/session-storage/session-storage.service';\nimport { CoreInjectorService } from 'src/app/core/services/core-injector/core-injector.service';\nimport { delay, map } from 'rxjs/operators';\n\nexport abstract class BaseComponent extends AbstractBaseUtil implements OnInit, OnDestroy{\n   \n    \n    _storageService:SessionStorageService;\n    _isLoggedIn:boolean;\n    constructor(){\n        super();\n        this._storageService=CoreInjectorService.injector.get(SessionStorageService);\n    }\n\n    /**\n     * Child classes may override\n     */\n    ngOnInit(): void {\n       this.listeToIsLoggedInStream();\n    }\n\n    listeToIsLoggedInStream(){\n        this.subsink.add(this._storageService.listenToisLogged().pipe(\n        delay(0),\n        map((isLoggedIn:boolean)=>{\n          this._isLoggedIn=isLoggedIn;\n        })\n        ).subscribe())\n      }\n\n    /**\n     * Child classes may use subsink to add any observable stream subscriptons.\n     * When method is override by child class, may call super.ngOnDestory() to clear all subscriptions \n     * added to subsink or _destory$ subject unless need to handle by itself. \n     */\n    ngOnDestroy(): void {\n        this.subsink.unsubscribe();\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstract-base/base.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _http\n                            \n                            \n                                    Protected\n                                _httpOptions\n                            \n                            \n                                    Protected\n                                _msgService\n                            \n                            \n                                    Protected\n                                _REST_URL\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildErrorResponse\n                            \n                            \n                                buildServiceRequest\n                            \n                            \n                                handleMessagesFromResponse\n                            \n                            \n                                invokeDelete\n                            \n                            \n                                invokeGet\n                            \n                            \n                                invokePost\n                            \n                            \n                                invokePut\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/abstract-base/base.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers:new HttpHeaders({'content-type':'application/json'})}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _msgService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessagesService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _REST_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/weightwatchers/api/\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nbuildErrorResponse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildServiceRequest\n                        \n                        \n                    \n                \n            \n            \n                \nbuildServiceRequest(url: string, data: any, handleMessages: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:135\n                \n            \n\n\n            \n                \n                    Builds the service request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    handleMessages\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessagesFromResponse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessagesFromResponse(request: ServiceRequest, response: ServiceResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:111\n                \n            \n\n\n            \n                \n                    To show messages is messages section based on the flag int by the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                ServiceResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokeDelete\n                        \n                        \n                    \n                \n            \n            \n                \ninvokeDelete(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:88\n                \n            \n\n\n            \n                \n                    Used by child services to invoke delete operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokeGet\n                        \n                        \n                    \n                \n            \n            \n                \ninvokeGet(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:51\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke get operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePost\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePost(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:33\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke post operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePut\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePut(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:70\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke put operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CoreInjectorService } from 'src/app/core/services/core-injector/core-injector.service';\nimport { ServiceRequest } from 'src/app/core/models/service-request.interface';\nimport { Type } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ServiceResponse } from 'src/app/core/models/service-response.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { AbstractBaseUtil } from './base.util';\nimport { IMessage } from 'src/app/core/models/message.interface';\nimport { MessagesService } from 'src/app/core/services/messages/messages.service';\nimport { MsgTypeEnum } from 'src/app/core/enums/msg-type.enum';\nimport { MessageEnum } from 'src/app/core/enums/messages.enum';\n\nexport abstract class BaseService extends AbstractBaseUtil{\n\n    protected _http:HttpClient;\n    protected _msgService:MessagesService;\n    protected _REST_URL=\"/weightwatchers/api/\"\n    protected _httpOptions={headers:new HttpHeaders({'content-type':'application/json'})};\n    constructor(){\n        super();\n        //manually injection of using CoreInjectorService to avoid every child class passing an insance to parent.\n        this._http=CoreInjectorService.injector.get(HttpClient);\n        this._msgService=CoreInjectorService.injector.get(MessagesService);\n        \n    }\n\n    /**\n     * Used by child service classes to invoke post operation\n     * @param url \n     * @param data \n     */\n    invokePost(request:ServiceRequest):Observable>{\n        return this._http.post>(this._REST_URL+request.url,request.data,this._httpOptions).pipe(\n            tap((response:ServiceResponse)=>{\n                 //handle any error messages from service based on the handleError flag set by the caller.\n                 this.handleMessagesFromResponse(request,response);                \n            }),\n            catchError((err)=>{\n                //use logger service to log errors\n                //return service error exception\n                return of(this.buildErrorResponse());\n               })\n        );\n    }\n\n    /**\n     * Used by child service classes to invoke get operation\n     * @param url \n     */\n    invokeGet(request:ServiceRequest):Observable>{\n        return this._http.get>(this._REST_URL+request.url).pipe(\n            tap((response:ServiceResponse)=>{//side effect\n                 //handle any error messages from service based on the handleError flag set by the caller.\n                this.handleMessagesFromResponse(request,response);\n            }),\n            catchError((err)=>{\n                //use logger service to log errors\n                //return service error exception\n                return of(this.buildErrorResponse());\n               })\n        );\n    }\n\n    /**\n     * Used by child service classes to invoke put operation\n     * @param url \n     * @param data \n     */\n    invokePut(request:ServiceRequest):Observable>{\n        return this._http.put>(this._REST_URL+request.url,request.data,this._httpOptions).pipe(\n            tap((response:ServiceResponse)=>{//side effect\n                //handle any error messages from service based on the handleError flag set by the caller.\n               this.handleMessagesFromResponse(request,response);\n           }),\n           catchError((err)=>{\n            //use logger service to log errors\n            //return service error exception\n            return of(this.buildErrorResponse());\n           })\n        );\n    }\n\n    /**\n     * Used by child services to invoke delete operation\n     * @param request \n     */\n    invokeDelete(request:ServiceRequest):Observable>{\n        return this._http.delete(this._REST_URL+request.url,this._httpOptions).pipe(\n            tap((response:ServiceResponse)=>{//side effect\n                //handle any error messages from service based on the handleError flag set by the caller.\n               this.handleMessagesFromResponse(request,response);\n           }),\n           catchError((err)=>{\n            //use logger service to log errors\n            //return service error exception\n            return of(this.buildErrorResponse());\n           })\n        );\n    }\n\n\n    //TODO: Add for Delete\n    //TODO: Add for Patch\n\n    /**\n     * To show messages is messages section based on the flag int by the request object\n     * @param request \n     * @param response \n     */\n    handleMessagesFromResponse(request:ServiceRequest, response:ServiceResponse){\n        if(request && request.handleMessages){\n            if(response){\n                let msgs:IMessage[]=new Array() as IMessage[];\n                //service may return combination of messages\n                msgs.concat(this._msgService.buildMessages(MsgTypeEnum.ERROR,response.errorMsgs))\n                    .concat(this._msgService.buildMessages(MsgTypeEnum.SUCCESS,response.successMsgs))\n                    .concat(this._msgService.buildMessages(MsgTypeEnum.INFO,response.infoMsgs))\n                \n                if(this.isValidArrayWithData(msgs)){\n                    this._msgService.showMessages(msgs);\n                }\n            }\n        }\n\n\n    }\n\n    /**\n     * Builds the service request object\n     * @param url \n     * @param data \n     * @param handleMessages \n     */\n    buildServiceRequest(url:string,data:any=null,handleMessages:boolean=true){\n        return {url:url,data:data,handleMessages:handleMessages} as ServiceRequest;\n    }\n\n    buildErrorResponse(){\n        return {success:false,errorMsgs:MessageEnum.SERVICE_FAILIRE} as ServiceResponse;\n    }\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreInjectorService.html":{"url":"injectables/CoreInjectorService.html","title":"injectable - CoreInjectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoreInjectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/core-injector/core-injector.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _injector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    injector\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/core-injector/core-injector.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        injector\n                    \n                \n\n                \n                    \n                        getinjector()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/core-injector/core-injector.service.ts:15\n                                \n                            \n\n                \n                    \n                        setinjector(injector)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/core-injector/core-injector.service.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            injector\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreInjectorService {\n\n  private static _injector:Injector;\n  \n  \n  static set injector(injector:Injector){\n    this._injector=injector;\n  }\n\n  static get injector():Injector{\n    return this._injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLoginComponent->CoreModule\n\n\n\n\n\nMessagesComponent\n\nMessagesComponent\n\nCoreModule -->\n\nMessagesComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nCoreModule -->\n\nTopToolbarComponent->CoreModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nCoreModule->LoginComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nTopToolbarComponent \n\nTopToolbarComponent \n\nTopToolbarComponent  -->\n\nCoreModule->TopToolbarComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MessagesComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TopToolbarComponent } from './components/top-toolbar/top-toolbar.component';\nimport { MaterialModule } from './material/material.module';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [TopToolbarComponent, MessagesComponent, LoginComponent, PageNotFoundComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n \n    \n  ],\n  exports:[TopToolbarComponent,MaterialModule,LoginComponent]\n})\n\n//Core module should not dependency with any other modules\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesModule.html":{"url":"modules/FeaturesModule.html","title":"module - FeaturesModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_FeaturesModule_exports\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nLineChartComponent->FeaturesModule\n\n\n\n\n\nNameWeightCardComponent\n\nNameWeightCardComponent\n\nFeaturesModule -->\n\nNameWeightCardComponent->FeaturesModule\n\n\n\n\n\nProfileFormComponent\n\nProfileFormComponent\n\nFeaturesModule -->\n\nProfileFormComponent->FeaturesModule\n\n\n\n\n\nLineChartComponent \n\nLineChartComponent \n\nLineChartComponent  -->\n\nFeaturesModule->LineChartComponent \n\n\n\n\n\nNameWeightCardComponent \n\nNameWeightCardComponent \n\nNameWeightCardComponent  -->\n\nFeaturesModule->NameWeightCardComponent \n\n\n\n\n\nProfileFormComponent \n\nProfileFormComponent \n\nProfileFormComponent  -->\n\nFeaturesModule->ProfileFormComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nFeaturesModule -->\n\nCoreModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineChartComponent\n                        \n                        \n                            NameWeightCardComponent\n                        \n                        \n                            ProfileFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineChartComponent\n                        \n                        \n                            NameWeightCardComponent\n                        \n                        \n                            ProfileFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { ProfileFormComponent } from './components/profile-form/profile-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { CoreModule } from '../core/core.module';\nimport { NameWeightCardComponent } from './components/name-weight-card/name-weight-card.component';\nimport { RouterModule } from '@angular/router';\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n\n@NgModule({\n  declarations: [ProfileFormComponent, NameWeightCardComponent, LineChartComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CoreModule,\n    SharedModule,\n    HttpClientModule,\n   \n  ],\n  exports:[ProfileFormComponent,NameWeightCardComponent,LineChartComponent],\n  providers:[DatePipe]\n})\nexport class FeaturesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/components/home/home.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _addNewPersonDetails\n                            \n                            \n                                _mode\n                            \n                            \n                                _users$\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                cardClicked\n                            \n                            \n                                dataChanged\n                            \n                            \n                                deleteClicked\n                            \n                            \n                                getUniqueId\n                            \n                            \n                                loadUsersFromSesssion\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancelClicked\n                            \n                            \n                                trackByid\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, personDetailsService: PersonDetailsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personDetailsService\n                                                  \n                                                        \n                                                                        PersonDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFriend\n                        \n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cardClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncardClicked(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:49\n                \n            \n\n\n            \n                \n                    card clicked \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dataChanged\n                        \n                        \n                    \n                \n            \n            \n                \ndataChanged(ip: IPersonDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ip\n                                    \n                                                IPersonDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteClicked\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteClicked(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:57\n                \n            \n\n\n            \n                \n                    Card delete icon is clicked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUniqueId\n                        \n                        \n                    \n                \n            \n            \n                \ngetUniqueId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUsersFromSesssion\n                        \n                        \n                    \n                \n            \n            \n                \nloadUsersFromSesssion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCancelClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonCancelClicked(clicked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clicked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByid\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByid(index: number, item: IPersonDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                IPersonDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _addNewPersonDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/components/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"home\" | \"addFriend\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'home'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/components/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _users$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/components/home/home.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { IPersonDetails } from 'src/app/features/models/person-details.interface';\nimport { Router } from '@angular/router';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\nimport { PersonDetailsService } from 'src/app/features/services/person-details.service';\nimport { delay, takeUntil, map, tap } from 'rxjs/operators';\nimport { IWeightHistory } from 'src/app/features/models/weight-history.interface';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent extends BaseComponent{\n\n\n  _users$:Observable;\n  _mode:'home'|'addFriend'='home';\n  _addNewPersonDetails:IPersonDetails;\n  constructor(private router:Router,private personDetailsService:PersonDetailsService) {\n    super();\n   }\n\n\n  ngOnInit(): void {\n    this.loadUsersFromSesssion();\n  }\n\n\n  loadUsersFromSesssion(){\n    this._users$=this._storageService.getUsersFromSession().pipe(\n      delay(0),\n      takeUntil(this._destroy$)\n    );\n  }\n\n\n \n  trackByid(index:number,item:IPersonDetails){\n    return item.id;\n  }\n\n\n  /**\n   *card clicked \n   */\n  cardClicked(id:number){\n    this.router.navigateByUrl(\"pages/dashboard/\"+id);\n  }\n\n  /**\n   * Card delete icon is clicked\n   * @param id \n   */\n  deleteClicked(id:number){\n    this._users$=this.personDetailsService.deleteById(id).pipe(\n      delay(0),\n      takeUntil(this._destroy$),\n      map((users:IPersonDetails[])=>{\n        console.log(users);\n        return users;\n      })\n    );\n\n  }\n\n  /**\n   * \n   */\n  addFriend(){\n    this._addNewPersonDetails=new Object() as IPersonDetails;\n    this._addNewPersonDetails.id=this.getUniqueId();\n    this._addNewPersonDetails.history=new Array() as IWeightHistory[];\n    this._mode='addFriend';\n  }\n\n  /**\n   * \n   * @param ip \n   */\n  dataChanged(ip:IPersonDetails){\n    this._addNewPersonDetails=ip;\n   this.personDetailsService.saveChanges(ip).pipe(delay(0),\n   map((ips:IPersonDetails)=>{\n    return ips;\n   }),\n   tap((ip:IPersonDetails)=>{\n     this.loadUsersFromSesssion();\n   })\n   ).subscribe();\n   this._mode='home';\n  }\n\n  /**\n   * \n   */\n  getUniqueId():number{\n     return Math.floor(Math.random() * (99999 - 100000 + 1)) + 10000;\n  }\n\n  onCancelClicked(clicked:boolean){\n    this._mode='home';\n    this._addNewPersonDetails=null;\n  }\n}\n\n    \n\n    \n        \n    person_add\n    \n        \n    \n\n\n    \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .mat-card{\n    padding:1em;\n    button{\n        &.add-person-icon{\n            position: absolute;\n            top:0px;\n            right:0px;\n            span{\n                &.material-icons{\n                    font-size:34px;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    person_add                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nHomeModule -->\n\nFeaturesModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            FeaturesModule\n                        \n                        \n                            HomeRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './components/home/home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { FeaturesModule } from 'src/app/features/features.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    FeaturesModule,\n    CoreModule,\n    RouterModule\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthGuardService } from 'src/app/core/guards/auth-guard/auth-guard.service';\n\n\n\n\nconst childRoutes: Routes=[\n  {\n    path: \"\",\n    component: HomeComponent,\n    canActivate: [AuthGuardService] \n  }\n];\n@NgModule({\n  imports:[RouterModule.forChild(childRoutes)],\n  exports:[RouterModule]\n})\nexport class HomeRoutingModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpMockInterceptor.html":{"url":"interceptors/HttpMockInterceptor.html","title":"interceptor - HttpMockInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpMockInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptor/http-mock.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: SessionStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptor/http-mock.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptor/http-mock.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ServiceResponse } from '../models/service-response.interface';\nimport { SessionStorageService } from '../services/session-storage/session-storage.service';\nimport { delay } from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class HttpMockInterceptor implements HttpInterceptor{\n    constructor(private storageService:SessionStorageService){\n\n    }\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n       \n      if(req.url.indexOf(\".json\")>-1){\n        return next.handle(req);\n      } else{\n      return new Observable>(observer=>{\n        let response:HttpResponse;\n        this.storageService.processRequestByUrl(req.url,req.body).pipe(delay(0)).subscribe((data:ServiceResponse)=>{\n          if(data!=null){\n            response=new HttpResponse({status:200, body:data});\n          }\n          observer.next(response);\n          observer.complete();\n          \n        });\n       });   \n      } \n    }\n    \n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                        message\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"error\" | \"success\" | \"info\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"error\" | \"success\" | \"info\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMessage{\n    type:'error'|'success'|'info';\n    message:string;\n    key?:string;//unique identifier for message, its an optional field.\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPersonDetails.html":{"url":"interfaces/IPersonDetails.html","title":"interface - IPersonDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPersonDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/models/person-details.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        history\n                                \n                                \n                                        id\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                        lastUpdated\n                                \n                                \n                                        name\n                                \n                                \n                                        username\n                                \n                                \n                                        weight\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:         IWeightHistory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeightHistory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdated\n                                    \n                                \n                                \n                                    \n                                        lastUpdated:     Date | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IWeightHistory } from './weight-history.interface';\n//Holds person details and weight histry details\nexport interface IPersonDetails{\n    id:number;//assuming mocked data will have unique id\n    name:string;\n    username:string;\n    age:number;\n    weight:number;\n    lastUpdated:Date|string;\n    imgSrc:string;\n    history:IWeightHistory[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser{\n    username:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeightHistory.html":{"url":"interfaces/IWeightHistory.html","title":"interface - IWeightHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeightHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/models/weight-history.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        lastUpdated\n                                \n                                \n                                        weight\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdated\n                                    \n                                \n                                \n                                    \n                                        lastUpdated:     Date | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWeightHistory{\n    id?:number; //assuming mocked data will have unique id\n    weight:number;\n    lastUpdated:Date|string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineChartComponent.html":{"url":"components/LineChartComponent.html","title":"component - LineChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/components/line-chart/line-chart.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-line-chart\n            \n\n            \n                styleUrls\n                ./line-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./line-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _weights\n                            \n                            \n                                height\n                            \n                            \n                                hostElement\n                            \n                            \n                                line\n                            \n                            \n                                margin\n                            \n                            \n                                svg\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                            \n                                xAxis\n                            \n                            \n                                yAxis\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawLineChart\n                            \n                            \n                                    Private\n                                drawXandYAxis\n                            \n                            \n                                    Private\n                                initalizeD3SvgObject\n                            \n                            \n                                initializeChart\n                            \n                            \n                                    Private\n                                initializeXandYAxis\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateChart\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weights\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    weights\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eleRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/components/line-chart/line-chart.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eleRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weights\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawLineChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawLineChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:127\n                \n            \n\n\n            \n                \n                    Draw linechart\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawXandYAxis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawXandYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:103\n                \n            \n\n\n            \n                \n                    draw x and y axis\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initalizeD3SvgObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initalizeD3SvgObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:86\n                \n            \n\n\n            \n                \n                    //initialize SVG object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeChart\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:67\n                \n            \n\n\n            \n                \n                    initalize chart.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeXandYAxis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeXandYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:94\n                \n            \n\n\n            \n                \n                    //initalize x and y axis\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateChart\n                        \n                        \n                    \n                \n            \n            \n                \nupdateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:80\n                \n            \n\n\n            \n                \n                    implement response update to the chart\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _weights\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IWeightHistory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostElement\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     d3Shape.Line<>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            margin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {top: 20, right: 20, bottom: 30, left: 50}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            svg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Line Chart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xAxis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yAxis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        weights\n                    \n                \n\n\n                \n                    \n                        setweights(weights: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            weights\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ViewEncapsulation, ElementRef } from '@angular/core';\n\nimport * as d3 from 'd3-selection';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Shape from 'd3-shape';\nimport * as d3Array from 'd3-array';\nimport * as d3Axis from 'd3-axis';\nimport { IWeightHistory } from '../../models/weight-history.interface';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LineChartComponent extends BaseComponent{\n\n    title = 'Line Chart';\n\n     margin = {top: 20, right: 20, bottom: 30, left: 50};\n     width: number;\n     height: number;\n     xAxis: any;\n     yAxis: any;\n     svg: any;\n     line: d3Shape.Line;\n     _weights:IWeightHistory[];\n     hostElement;\n    \n    constructor(private eleRef:ElementRef) {\n        super();\n        this.width = 900 - this.margin.left - this.margin.right;\n        this.height = 500 - this.margin.top - this.margin.bottom;\n        this.hostElement=this.eleRef.nativeElement;\n    }\n    @Input()\n    set weights(weights:IWeightHistory[]){\n     //Ensure weights data exists.\n      if(this.isValidArrayWithData(weights)){\n        this._weights=new Array() as IWeightHistory[];\n      \n        weights.forEach((iw:IWeightHistory)=>{\n          let w:IWeightHistory=new Object() as IWeightHistory;\n          //convert the date string to Date Object.\n          w.lastUpdated=new Date(iw.lastUpdated);\n          w.weight=iw.weight;\n          this._weights.push(w);\n        });\n        if(!this.svg){\n       //initialize line chart.\n        this.initializeChart();\n      }else{\n        this.updateChart();\n      }\n      }\n    }\n\n    ngOnInit() {\n     \n       \n    }\n\n    /**\n     * initalize chart.\n     */\n    initializeChart(){\n      //initialize SVG object\n      this.initalizeD3SvgObject();\n      //initalize x and y axis\n      this.initializeXandYAxis();\n      //draw x and y axis\n      this.drawXandYAxis();\n      //draw line path\n      this.drawLineChart();\n    }\n    /**\n     * implement response update to the chart\n     */\n    updateChart(){\n      //TODO:\n    }\n    /**\n     *  //initialize SVG object\n     */\n    private initalizeD3SvgObject() {\n        this.svg = d3.select(this.hostElement).append('svg').attr(\"height\",\"500\").attr(\"width\",\"900\")\n            .append('g')\n            .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n    }\n    /**\n     *  //initalize x and y axis\n     */\n    private initializeXandYAxis() {\n        this.xAxis = d3Scale.scaleTime().range([0, this.width]);\n        this.yAxis = d3Scale.scaleLinear().range([this.height, 0]);\n        this.xAxis.domain(d3Array.extent(this._weights, (d:IWeightHistory) => d.lastUpdated ));\n        this.yAxis.domain(d3Array.extent(this._weights, (d:IWeightHistory) => d.weight ));\n    }\n    /**\n     * draw x and y axis\n     */\n    private drawXandYAxis() {\n        //draw x axis line\n        this.svg.append('g')\n            //set class\n            .attr('class', 'axis x--axis')\n            //transform to horizontal line\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(d3Axis.axisBottom(this.xAxis));\n        //draw y axis line\n        this.svg.append('g')\n            .attr('class', 'axis y--axis')\n            .call(d3Axis.axisLeft(this.yAxis))\n            .append('text')\n            .attr('class', 'axis-title')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 8)\n            .attr('dy', '.50em')\n            .style('text-anchor', 'end')\n            .text('Weight (lbs)');//weight label to be shown on y-axis\n    }\n\n    /**\n     * Draw linechart\n     */\n    private drawLineChart() {\n        //draw the line with x with lastUpdated date and y-axis with weights.\n        this.line = d3Shape.line()\n            .x( (d: any) => this.xAxis(d.lastUpdated) )\n            .y( (d: any) => this.yAxis(d.weight) );\n        //to plot path using the data points provided\n        this.svg.append('path')\n            .datum(this._weights)\n            .attr('class', 'line')\n            .attr('d', this.line);\n    }\n\n    ngOnDestroy(){\n      super.ngOnDestroy();\n      console.log(\"ngDestroy called\");\n      d3.selectAll(\"svg > *\").remove();\n      d3.select(this.hostElement).select('svg').remove();\n      if(this.svg){\n        this.svg.selectAll(\"*\").remove();\n      }\n     \n      //this.svg=null;\n    }\n\n}\n\n    \n\n    \n        Weight Chart\n -->\n    \n\n    \n                \n                    ./line-chart.component.scss\n                \n                  \n\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n.axis-title {\n    fill: none;\n    stroke: black;\n    stroke-width: 0.5px;\n}\n\n\n\n.line {\n    fill: none;\n    stroke: steelblue;\n    stroke-width: 1.5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Weight Chart -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/login/login.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _invalidUser\n                            \n                            \n                                _loginForm\n                            \n                            \n                                _users\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                loadUsers\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, mockDataService: MockDataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockDataService\n                                                  \n                                                        \n                                                                        MockDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:37\n                \n            \n\n\n            \n                \n                    To create reactive form group object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUsers\n                        \n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:54\n                \n            \n\n\n            \n                \n                    Load mock data users from assets\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _invalidUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/components/login/login.component.ts:47\n                                \n                            \n                    \n                        \n                                utility to get form control from form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { IPersonDetails } from 'src/app/features/models/person-details.interface';\nimport { MockDataService } from '../../services/mock-data/mock-data.service';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { StorageKeys } from '../../enums/storage-keys.enum';\nimport { Router } from '@angular/router';\nimport { BaseComponent } from '../../abstract-base/base.component';\nimport { IUser } from '../../models/user.interface';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseComponent {\n\n  _loginForm:FormGroup;\n  _users:IPersonDetails[];\n  _invalidUser:boolean=false;\n  //For demo purpose only using mockData service to load users while login component is rendering\n  constructor(private fb:FormBuilder,\n              private mockDataService:MockDataService,\n              private router:Router) { \n    super();\n  }\n\n  ngOnInit(): void {\n    this.createFormGroup();\n    this.loadUsers();\n  }\n\n\n  /**\n   * To create reactive form group object\n   */\n  createFormGroup(){\n    this._loginForm=this.fb.group({\n      username:new FormControl({value:\"\",disabled:false},[Validators.required,Validators.maxLength(50)]),\n      password: new FormControl({value:\"\",disabled:false},[Validators.required,Validators.maxLength(50)])\n    \n    });\n  }\n  /**\n   * utility to get form control from form group\n   */\n  get formControl(){\n    return this._loginForm.controls;\n  }\n\n  /**\n   * Load mock data users from assets\n   */\n  loadUsers(){\n  //\n    this.mockDataService.loadUsersFromAssets().pipe(  \n      //listen to this observer stream until component is destroyed. \n      takeUntil(this._destroy$),        \n      map((data:any)=>{\n        let users:IPersonDetails[]=null;\n        if(this.isValidArrayWithData(data)){\n          users=data as IPersonDetails[];\n          this._storageService.setDataInSessionStroageForKey(StorageKeys.USER_PROFILES,users);\n        } \n        return users;    \n      })\n    ).subscribe(((users:IPersonDetails[])=>{\n      this._users=users;\n    })); \n  \n   \n  }\n\n  login(){\n    let userName:string=this._loginForm.controls.username.value;\n    let password=this._loginForm.controls.password.value;\n    if(this.isValidArrayWithData(this._users)){\n      let ip:IPersonDetails[]=this._users.filter((p:IPersonDetails)=>{return p.username==userName});\n        if(this.isValidArrayWithData(ip)){\n          let user:IUser=new Object() as IUser;\n          user.username=userName;\n          this._storageService.setDataInSessionStroageForKey(StorageKeys.CURRENT_USER,user);\n          this.router.navigateByUrl(\"/pages/home\");\n          this._storageService.emitIsLoggedin(true);\n        }else{\n          this._invalidUser=true; \n        }\n    }else{\n      this._invalidUser=true; \n    }\n      \n  }\n\n}\n\n    \n\n    \n        \n    \n      Login\n      ng-weight-watchers\n    \n    \n     \n        \n            \n              User Name\n              \n              \n                Username is required.\n                            \n            \n          \n          \n            \n              Password\n              \n              \n                Password is required.\n                            \n            \n            \n              Username or password is incorrect\n              \n           \n          \n     \n    \n    \n      Login\n    \n  \n\n  \n    \n      Demo\n      username/password\n    \n    \n      \n         {{user.username}}/12345        \n       \n    \n  \n    \n\n    \n                \n                    ./login.component.scss\n                \n                .full-width{\n    width:300px;\n}\n.login-card{\n    text-align: center;\n}\n.mat-card-header{\n    width:100%;\n    display: block;\n    .mat-card-header-text{\n        width:100%;\n    }\n}\n.mat-card{\n    width:300px;\n    margin:auto;\n    height:30vh;\n}\n\n.mat-card-header .mat-card-title{\n    \n    font-weight:bold;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login      ng-weight-watchers                                               User Name                                            Username is required.                                                                                      Password                                            Password is required.                                                                  Username or password is incorrect                                                      Login                  Demo      username/password                       {{user.username}}/12345                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n//added Angular Material module\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/messages/messages.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                styleUrls\n                ./messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _showMsg\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listenToMessagesStream\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackBymsg\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                _messages\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(msgService: MessagesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/messages/messages.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msgService\n                                                  \n                                                        \n                                                                        MessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        _messages\n                    \n                \n                \n                    \n                        Type :         IMessage[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/messages/messages.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToMessagesStream\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToMessagesStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/messages/messages.component.ts:44\n                \n            \n\n\n            \n                \n                    Listen to message stream emitted via MessageService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/messages/messages.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackBymsg\n                        \n                        \n                    \n                \n            \n            \n                \ntrackBymsg(index: number, item: IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/messages/messages.component.ts:37\n                \n            \n\n\n            \n                \n                    Allows to track the message array by unique identifier which allows to update only dom changed rather than re-creating whole dome again.\nImproves performance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _showMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/messages/messages.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { IMessage } from '../../models/message.interface';\nimport { MessagesService } from '../../services/messages/messages.service';\nimport { delay, map } from 'rxjs/operators';\nimport { BaseComponent } from '../../abstract-base/base.component';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent extends BaseComponent {\n\n\n  @Input() _messages:IMessage[];\n\n  \n  //Flag to add or remove the messages section\n  _showMsg:boolean=false;\n\n  constructor(private msgService:MessagesService) {\n    super();\n   }\n\n  ngOnInit(): void {\n    this.listenToMessagesStream();\n  }\n\n\n  /**\n   * Allows to track the message array by unique identifier which allows to update only dom changed rather than re-creating whole dome again.\n   * Improves performance\n   * @param index \n   * @param item \n   */\n  trackBymsg(index:number,item:IMessage){\n    return item.message;\n  }\n\n  /**\n   * Listen to message stream emitted via MessageService\n   */\n  listenToMessagesStream(){\n    //Added to global observable pool as it can be destoryed when component destroyed using base component ngOnDestroy() to prevent memory leaks.\n    this.subsink.add(this.msgService.listenToMsgsStream().pipe(\n      delay(0),//added some delay to avoid console error messages like value changed after component is checked\n      map((msgs:IMessage[])=>{\n        if(this.isValidArrayWithData(msgs)){\n          this._messages=msgs;\n          //set the flag to true if the valid messages are found\n          this._showMsg=true;\n\n        }else{\n          this._messages=null;\n          //set the flag to false if no messages are found\n          this._showMsg=false;\n        }\n      })\n      ).subscribe());\n  }\n\n\n\n}\n\n    \n\n    \n        \n    \n    {{msg.type}}{{msg.message}}\n    \n\n  \n  \n    \n\n    \n                \n                    ./messages.component.scss\n                \n                .alert{\n    padding: 0.25rem;\n    &.alert-error{\n        color:red; //TODO: use scss gobal variable\n    }\n    &.alert-check{\n        color:green; //TODO: use scss gobal variable\n    }\n    &.alert-info{\n        color:blue;//TODO: use scss gobal variable\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{msg.type}}{{msg.message}}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/messages/messages.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _msgSubject$\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildMessages\n                            \n                            \n                                clearMessages\n                            \n                            \n                                emitMessages\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                listenToMsgsStream\n                            \n                            \n                                showMessages\n                            \n                            \n                                success\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/messages/messages.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildMessages\n                        \n                        \n                    \n                \n            \n            \n                \nbuildMessages(type: MsgTypeEnum, msgs: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:74\n                \n            \n\n\n            \n                \n                    Builds the messages required by the Message Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MsgTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    msgs\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMessages\n                        \n                        \n                    \n                \n            \n            \n                \nclearMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitMessages\n                        \n                        \n                    \n                \n            \n            \n                \nemitMessages(msgs: IMessage[] | IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:23\n                \n            \n\n\n            \n                \n                    Emits single or multiple messages\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msgs\n                                    \n                                                IMessage[] | IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(messages: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:38\n                \n            \n\n\n            \n                \n                    Build error messages array and emit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(messages: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:62\n                \n            \n\n\n            \n                \n                    Build error messages array and emit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToMsgsStream\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToMsgsStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:30\n                \n            \n\n\n            \n                \n                    Return messages stream observable\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMessages\n                        \n                        \n                    \n                \n            \n            \n                \nshowMessages(messages: IMessage[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:54\n                \n            \n\n\n            \n                \n                    Emit messages\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                IMessage[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(messages: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:46\n                \n            \n\n\n            \n                \n                    Build error messages array and emit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _msgSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/messages/messages.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MsgTypeEnum } from '../../enums/msg-type.enum';\nimport { IMessage } from '../../models/message.interface';\nimport { AbstractBaseUtil } from '../../abstract-base/base.util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService extends AbstractBaseUtil{\n\n  _msgSubject$=new Subject();\n  \n  constructor() {\n    super();\n   }\n\n  /**\n   * Emits single or multiple messages\n   * @param msgs \n   */\n  emitMessages(msgs:IMessage[]|IMessage){\n    this._msgSubject$.next(msgs);\n  }\n\n  /**\n   * Return messages stream observable\n   */\n  listenToMsgsStream(){\n    return this._msgSubject$.asObservable();\n  }\n\n  /**\n   * Build error messages array and emit\n   * @param messages \n   */\n  error(messages:string[]|string){\n    this.emitMessages(this.buildMessages(MsgTypeEnum.ERROR,messages));\n  }\n\n  /**\n   * Build error messages array and emit\n   * @param messages \n   */\n  success(messages:string[]|string){\n    this.emitMessages(this.buildMessages(MsgTypeEnum.ERROR,messages));\n  }\n\n  /**\n   * Emit messages\n   * @param messages \n   */\n  showMessages(messages:IMessage[]){\n    this.emitMessages(messages);\n  }\n\n  /**\n   * Build error messages array and emit\n   * @param messages \n   */\n  info(messages:string[]|string){\n    this.emitMessages(this.buildMessages(MsgTypeEnum.ERROR,messages));\n  }\n\n\n\n\n  /**\n   * Builds the messages required by the Message Component\n   * @param type \n   * @param msgs \n   */\n  buildMessages(type:MsgTypeEnum, msgs:string[]|string){\n    let messages=null;\n    //to check if msgs are of type array and has data in it\n    if(this.isValidArrayWithData(msgs)){\n      messages=new Array() as IMessage[];\n      //type cast to string[]\n      (msgs).forEach((msg:string)=>{\n        messages.push({\"type\":type,message:msg} as IMessage);\n      });\n    }\n    else if(this.hasValue(msgs)){\n      messages=new Array() as IMessage[];\n      messages.push({\"type\":type,message:(msgs)} as IMessage);\n    }\n    return messages;\n  }\n\n  clearMessages(){\n    this.emitMessages(null);\n  }\n  \n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockDataService.html":{"url":"injectables/MockDataService.html","title":"injectable - MockDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/mock-data/mock-data.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _jsonUrl\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadUsersFromAssets\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/mock-data/mock-data.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUsersFromAssets\n                        \n                        \n                    \n                \n            \n            \n                \nloadUsersFromAssets()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mock-data/mock-data.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _jsonUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/data/users.json'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/mock-data/mock-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { AbstractBaseUtil } from '../../abstract-base/base.util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataService extends AbstractBaseUtil{\n//This service doesn't extend the BaseService as it is used to load mock data file from /assets/data/user.json file\n _jsonUrl='assets/data/users.json';\n\n  constructor(private http:HttpClient) {\n    super();\n   }\n\n\n  loadUsersFromAssets(){\n   return this.http.get(this._jsonUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameWeightCardComponent.html":{"url":"components/NameWeightCardComponent.html","title":"component - NameWeightCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameWeightCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/components/name-weight-card/name-weight-card.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-name-weight-card\n            \n\n            \n                styleUrls\n                ./name-weight-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-weight-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onDelete\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                userName\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardClicked\n                            \n                            \n                                deleteClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cardClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:32\n                \n            \n\n\n            \n                \n                    emit id to the parent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:39\n                \n            \n\n\n            \n                \n                    emit id to the parent on delete icon clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\n\n\n\n@Component({\n  selector: 'app-name-weight-card',\n  templateUrl: './name-weight-card.component.html',\n  styleUrls: ['./name-weight-card.component.scss']\n})\nexport class NameWeightCardComponent extends BaseComponent {\n\n\n  @Input() name:string;\n  @Input() weight:number=0;\n  @Input() id:number;\n  @Input() userName:string;\n  @Output() cardClicked=new EventEmitter();\n  @Output() deleteClicked=new EventEmitter();\n\n  constructor() { \n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * emit id to the parent.\n   * \n   */\n  onClick(){\n    this.cardClicked.emit(this.id);\n  }\n\n  /**\n   * emit id to the parent on delete icon clicked\n   */\n  onDelete(){\n    this.deleteClicked.emit(this.id);\n  }\n\n}\n\n    \n\n    \n            \n    {{name}}\n    {{weight}} lbs\n    delete_forever\n\n    \n\n    \n                \n                    ./name-weight-card.component.scss\n                \n                .mat-card{\n    width:300px;\n    margin:auto;\n    text-align: center;\n    margin-bottom:30px;\n\n    h1{\n        span{\n            .suffix{\n                padding:0.25rem;\n                font-size:18px;\n            }\n        }\n    }\n    button{\n        &.delete-icon{\n            position: absolute;\n            top:0px;\n            right:0px;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{name}}    {{weight}} lbs    delete_forever'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameWeightCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumbersonlyDirective.html":{"url":"directives/NumbersonlyDirective.html","title":"directive - NumbersonlyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumbersonlyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/numbersonly/numbersonly.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: NumbersonlyDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appNumbersonly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                    Static\n                                validateNumbersOnly\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            registerOnValidatorChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            validateNumbersOnly\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateNumbersOnly(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:28\n                \n            \n\n\n            \n                \n                    Validates if the entered value is a number or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationErrors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { FormControl, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appNumbersonly]',\n  providers:[\n    {provide:NG_VALIDATORS,useExisting:NumbersonlyDirective}\n  ]\n})\nexport class NumbersonlyDirective  implements Validator{\n \n\n  constructor() { }\n\n  \n  validate(control: FormControl):ValidationErrors|null {\n    return NumbersonlyDirective.validateNumbersOnly(control);\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    return null;\n  }\n\n\n  /**\n   * Validates if the entered value is a number or not.\n   * @param control \n   */\n  static validateNumbersOnly(control:FormControl):ValidationErrors{\n   \n    let value=control.value;\n    //Ensure that this validation is triggered only if value exists\n    if(!value || value.length==0){\n      return null;\n    }\n\n    let regexNumber:RegExp=new RegExp(/^[+ 0-9]/);\n    let isValid=regexNumber.test(value);\n    \n    return (!isValid)?{numbersonly:\"Only numbers are allowed\"} as ValidationErrors:null;\n\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        page-not-found works!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'page-not-found works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonDetailsService.html":{"url":"injectables/PersonDetailsService.html","title":"injectable - PersonDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersonDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/services/person-details.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _http\n                            \n                            \n                                    Protected\n                                _httpOptions\n                            \n                            \n                                    Protected\n                                _msgService\n                            \n                            \n                                    Protected\n                                _REST_URL\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteById\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getUserById\n                            \n                            \n                                saveChanges\n                            \n                            \n                                buildErrorResponse\n                            \n                            \n                                buildServiceRequest\n                            \n                            \n                                handleMessagesFromResponse\n                            \n                            \n                                invokeDelete\n                            \n                            \n                                invokeGet\n                            \n                            \n                                invokePost\n                            \n                            \n                                invokePut\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/services/person-details.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:25\n                \n            \n\n\n            \n                \n                    Get all users\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:41\n                \n            \n\n\n            \n                \n                    Get User information by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveChanges\n                        \n                        \n                    \n                \n            \n            \n                \nsaveChanges(iPersonDetails: IPersonDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:60\n                \n            \n\n\n            \n                \n                    invoke service to save data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iPersonDetails\n                                    \n                                                IPersonDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nbuildErrorResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:139\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildServiceRequest\n                        \n                        \n                    \n                \n            \n            \n                \nbuildServiceRequest(url: string, data: any, handleMessages: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:135\n\n                \n            \n\n\n            \n                \n                    Builds the service request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    handleMessages\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessagesFromResponse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessagesFromResponse(request: ServiceRequest, response: ServiceResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:111\n\n                \n            \n\n\n            \n                \n                    To show messages is messages section based on the flag int by the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                ServiceResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokeDelete\n                        \n                        \n                    \n                \n            \n            \n                \ninvokeDelete(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:88\n\n                \n            \n\n\n            \n                \n                    Used by child services to invoke delete operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokeGet\n                        \n                        \n                    \n                \n            \n            \n                \ninvokeGet(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:51\n\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke get operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePost\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePost(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:33\n\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke post operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePut\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePut(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke put operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers:new HttpHeaders({'content-type':'application/json'})}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _msgService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessagesService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _REST_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/weightwatchers/api/\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { IPersonDetails } from '../models/person-details.interface';\nimport { ServiceUrls } from 'src/app/core/enums/service-url.enum';\nimport { ServiceResponse } from 'src/app/core/models/service-response.interface';\nimport {map} from 'rxjs/operators';\nimport { BaseService } from 'src/app/core/abstract-base/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonDetailsService extends BaseService{\n\n  constructor() {\n    super();\n   }\n\n  \n\n  /**\n   * Get all users\n   */\n  getAllUsers():Observable{\n    let request=this.buildServiceRequest(ServiceUrls.GET_ALL_USERS,null);\n    return this.invokeGet(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails[];\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Get User information by id\n   * @param id \n   */\n  getUserById(id:number):Observable{\n    //To ensure that enum value is not changed\n    let userURL=ServiceUrls.GET_USER.repeat(1)+\"/\"+id;\n    let request=this.buildServiceRequest(userURL);\n    return this.invokeGet(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails;\n        }\n        return null;\n      })\n    );\n\n  }\n\n  /**\n   * invoke service to save data\n   * @param iPersonDetails \n   */\n  saveChanges(iPersonDetails:IPersonDetails){\n    let request=this.buildServiceRequest(ServiceUrls.SAVE_USER,iPersonDetails);\n    return this.invokePost(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails;\n        }\n        return null;\n      })\n    );\n  }\n\n\n  /**\n   * \n   * @param id \n   */\n  deleteById(id:number){\n    let url=ServiceUrls.DELETE_USER.repeat(1)+\"/\"+id;\n    let request=this.buildServiceRequest(url,null);\n    return this.invokePost(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails[];\n        }\n        return null;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalDashboardComponent.html":{"url":"components/PersonalDashboardComponent.html","title":"component - PersonalDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonalDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-dashboard\n            \n\n            \n                styleUrls\n                ./personal-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./personal-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _iweights\n                            \n                            \n                                _personDetails\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataChanged\n                            \n                            \n                                getIdFromRoute\n                            \n                            \n                                loadPersonDetails\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, personDetailsService: PersonDetailsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personDetailsService\n                                                  \n                                                        \n                                                                        PersonDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dataChanged\n                        \n                        \n                    \n                \n            \n            \n                \ndataChanged(ipersonDetails: IPersonDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ipersonDetails\n                                    \n                                                IPersonDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIdFromRoute\n                        \n                        \n                    \n                \n            \n            \n                \ngetIdFromRoute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPersonDetails\n                        \n                        \n                    \n                \n            \n            \n                \nloadPersonDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:35\n                \n            \n\n\n            \n                \n                    get person Id from activated route and load data from session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _iweights\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IWeightHistory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _personDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\nimport { IPersonDetails } from 'src/app/features/models/person-details.interface';\nimport { takeUntil, concatMap } from 'rxjs/operators';\nimport { PersonDetailsService } from 'src/app/features/services/person-details.service';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\nimport { IWeightHistory } from 'src/app/features/models/weight-history.interface';\n\n@Component({\n  selector: 'app-personal-dashboard',\n  templateUrl: './personal-dashboard.component.html',\n  styleUrls: ['./personal-dashboard.component.scss']\n})\nexport class PersonalDashboardComponent extends BaseComponent {\n\n  constructor(private activatedRoute:ActivatedRoute,\n    private personDetailsService:PersonDetailsService,\n    private router:Router) { \n    super();\n  }\n\n _personDetails:IPersonDetails;\n  _id:number;\n  _iweights:IWeightHistory[];\n  \n  ngOnInit(): void {\n    this.loadPersonDetails();\n  }\n\n  /**\n   * get person Id from activated route and load data from session\n   */\n  loadPersonDetails(){\n    this.getIdFromRoute().pipe(\n      takeUntil(this._destroy$),\n      concatMap((id:number)=>{\n        return this.personDetailsService.getUserById(id);\n      })).subscribe((data:IPersonDetails)=>{\n        this._personDetails=data;\n        this._iweights=[...this._personDetails.history];\n\n      });\n\n      \n\n\n  }\n\n  getIdFromRoute():Observable{\n    return new Observable(observer=>{\n      this.subsink.add(this.activatedRoute.params.subscribe(params=>{\n        this._id=!isNaN(params['id'])?new Number(params['id']).valueOf():null;\n        observer.next(this._id);\n        observer.complete();\n      }));\n    });\n  }\n\n\n  dataChanged(ipersonDetails:IPersonDetails){\n    this._personDetails=ipersonDetails;\n    this._iweights=null;\n    this._iweights=[...this._personDetails.history];\n    this.personDetailsService.saveChanges(this._personDetails).subscribe((data)=>{\n      this.router.navigateByUrl(\"pages/home\");\n    });\n\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n    \n                \n                    ./personal-dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'PersonalDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonalDashboardModule.html":{"url":"modules/PersonalDashboardModule.html","title":"module - PersonalDashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonalDashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PersonalDashboardModule\n\n\n\ncluster_PersonalDashboardModule_declarations\n\n\n\ncluster_PersonalDashboardModule_imports\n\n\n\n\nPersonalDashboardComponent\n\nPersonalDashboardComponent\n\n\n\nPersonalDashboardModule\n\nPersonalDashboardModule\n\nPersonalDashboardModule -->\n\nPersonalDashboardComponent->PersonalDashboardModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nPersonalDashboardModule -->\n\nCoreModule->PersonalDashboardModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nPersonalDashboardModule -->\n\nFeaturesModule->PersonalDashboardModule\n\n\n\n\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardModule -->\n\nPersonalDashboardRoutingModule->PersonalDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/personal-dashboard/personal-dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PersonalDashboardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            FeaturesModule\n                        \n                        \n                            PersonalDashboardRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PersonalDashboardComponent } from './components/personal-dashboard/personal-dashboard.component';\nimport { PersonalDashboardRoutingModule } from './personal-dashboard-routing.module';\nimport { FeaturesModule } from 'src/app/features/features.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [PersonalDashboardComponent],\n  imports: [\n    CommonModule,\n    PersonalDashboardRoutingModule,\n    FeaturesModule,\n    CoreModule,\n    RouterModule,\n  ]\n})\nexport class PersonalDashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonalDashboardRoutingModule.html":{"url":"modules/PersonalDashboardRoutingModule.html","title":"module - PersonalDashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonalDashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/personal-dashboard/personal-dashboard-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { PersonalDashboardComponent } from './components/personal-dashboard/personal-dashboard.component';\nimport { AuthGuardService } from 'src/app/core/guards/auth-guard/auth-guard.service';\n\n\n\n\nconst childRoutes: Routes=[\n  {\n    path: \":id\",\n    component: PersonalDashboardComponent,\n    canActivate: [AuthGuardService] \n  }\n];\n@NgModule({\n  imports:[RouterModule.forChild(childRoutes)],\n  exports:[RouterModule]\n})\nexport class PersonalDashboardRoutingModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileFormComponent.html":{"url":"components/ProfileFormComponent.html","title":"component - ProfileFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/components/profile-form/profile-form.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-form\n            \n\n            \n                styleUrls\n                ./profile-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _editProfilePic\n                            \n                            \n                                _imgSrc\n                            \n                            \n                                _personDetails\n                            \n                            \n                                _profileForm\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeFieldState\n                            \n                            \n                                checkForMode\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                enableOrDisableFormFields\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onEdit\n                            \n                            \n                                onFileInput\n                            \n                            \n                                onSave\n                            \n                            \n                                updateFormGroup\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                personDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChanged\n                            \n                            \n                                onCancelClicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    personDetails\n                                \n                                \n                                    formControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, domSanitzer: DomSanitizer, datePipe: DatePipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/components/profile-form/profile-form.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitzer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     \"edit\" | \"readonly\" | \"add\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        personDetails\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onCancelClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeFieldState\n                        \n                        \n                    \n                \n            \n            \n                \nchangeFieldState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:179\n                \n            \n\n\n            \n                \n                    Delegate toggle field state change based  on the mode (edit or readonly)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkForMode\n                        \n                        \n                    \n                \n            \n            \n                \ncheckForMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:107\n                \n            \n\n\n            \n                \n                    To determine the current state of the form\nif mode=='readonly' returns true else false\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:67\n                \n            \n\n\n            \n                \n                    Create the reative form group object\nlastUpdated is always disabled. (readonly)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableOrDisableFormFields\n                        \n                        \n                    \n                \n            \n            \n                \nenableOrDisableFormFields(disable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:195\n                \n            \n\n\n            \n                \n                    implements the field state change based on the flag provided.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCancel\n                        \n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:210\n                \n            \n\n\n            \n                \n                    On cancel clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \nonEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:133\n                \n            \n\n\n            \n                \n                    change the form mode to edit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileInput\n                        \n                        \n                    \n                \n            \n            \n                \nonFileInput($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:116\n                \n            \n\n\n            \n                \n                    Convert uploaded file to image data url;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:142\n                \n            \n\n\n            \n                \n                    Save data via service and change the mode to readonly\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _editProfilePic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"disabled\" | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _personDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _profileForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        personDetails\n                    \n                \n\n\n                \n                    \n                        setpersonDetails(personDetails)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            personDetails\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:100\n                                \n                            \n                    \n                        \n                                utility to get formcontrols from formGroup object\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IPersonDetails } from '../../models/person-details.interface';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nimport { NumbersonlyDirective } from 'src/app/shared/directives/numbersonly/numbersonly.directive';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DatePipe } from '@angular/common';\nimport { IWeightHistory } from '../../models/weight-history.interface';\nimport { last } from 'rxjs/operators';\nimport { ValidUsernameDirective } from 'src/app/shared/directives/valid-username/valid-username.directive';\n\n@Component({\n  selector: 'app-profile-form',\n  templateUrl: './profile-form.component.html',\n  styleUrls: ['./profile-form.component.scss']\n})\nexport class ProfileFormComponent extends BaseComponent {\n\n  //form controls for a given form\n  _profileForm:FormGroup;\n  //person details including weight history\n  _personDetails:IPersonDetails;\n  \n  \n \n\n  //mode to determine edit or readonly\n  @Input() mode:'edit'|'readonly'|'add'='edit';\n\n\n  //emit data changed\n  @Output() dataChanged=new EventEmitter();\n\n  //On Cancel\n\n  @Output() onCancelClicked=new EventEmitter();\n   \n  //local variable to hold profile picture image data url\n  _imgSrc:string;\n\n  //to enable or disable edit profile pic\n  _editProfilePic:\"disabled\"|null=null;\n\n  constructor(private fb:FormBuilder,\n    private domSanitzer:DomSanitizer,\n    private datePipe:DatePipe) {\n    super();\n   }\n\n   @Input()\n   set personDetails(personDetails:IPersonDetails){\n    this._personDetails=personDetails;\n    //need to update the form control with values as there is a possibility formGroup is already initiated.\n    this.updateFormGroup();\n   }\n\n  ngOnInit(): void {\n    this.createFormGroup();\n  }\n\n\n  /**\n   * Create the reative form group object\n   * lastUpdated is always disabled. (readonly)\n   */\n  createFormGroup():void{\n    this._profileForm=this.fb.group({\n      name:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.name))?this.personDetails.name:\"\",disabled:this.checkForMode()},[Validators.required,Validators.maxLength(100)]),\n      age:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.age))?this.personDetails.age:\"\",disabled:this.checkForMode()},[Validators.required,NumbersonlyDirective.validateNumbersOnly,Validators.maxLength(3)]),\n      weight:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.weight))?this.personDetails.weight:\"\",disabled:this.checkForMode()},[Validators.required, NumbersonlyDirective.validateNumbersOnly,Validators.maxLength(3)]),\n      lastUpdated:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.lastUpdated))?this.personDetails.lastUpdated:\"\",disabled:true},[]),\n      imgSrc: new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.imgSrc))?this.personDetails.imgSrc:\"\",disabled:false},[])\n    });\n\n    if(this.mode==='add'){\n      this._profileForm.addControl(\"username\",new FormControl({value:\"\",disabled:false},[ValidUsernameDirective.validateUsername,Validators.required]));\n    }\n  }\n\n  /**\n   * \n   */\n  updateFormGroup(){\n    if(this.hasValue(this._personDetails) && this.hasValue(this._profileForm)){\n      this._profileForm.controls.name.setValue(this._personDetails.name);\n      this._profileForm.controls.age.setValue(this._personDetails.age);\n      this._profileForm.controls.weight.setValue(this._personDetails.weight);\n      this._profileForm.controls.lastUpdated.setValue(this._personDetails.lastUpdated);\n      this._imgSrc=this._personDetails.imgSrc+\"\";\n      if(this._imgSrc){\n        this._editProfilePic=\"disabled\";\n      }\n    }\n  }\n\n  /**\n   * utility to get formcontrols from formGroup object\n   */\n  get formControl(){\n    return this._profileForm.controls;\n  }\n  /**\n   * To determine the current state of the form\n   * if mode=='readonly' returns true else false\n   */\n  checkForMode(){\n    return this.mode==='readonly'?true:false;\n  }\n\n\n  /**\n   * Convert uploaded file to image data url;\n   * @param $event \n   */\n  onFileInput($event){\n    if($event.target.files.length>0){\n      let fileReader=new FileReader();\n      const [file]=$event.target.files;\n      fileReader.readAsDataURL(file);\n      fileReader.onload=()=>{\n        this._imgSrc=fileReader.result as string;        \n        let imgs=this._imgSrc.repeat(1);\n        this._personDetails.imgSrc=imgs;       \n      }\n    }\n  }\n\n  /**\n   * change the form mode to edit\n   * \n   */\n  onEdit(){\n    this.mode=\"edit\";\n    this.changeFieldState();\n\n  }\n\n  /**\n   * Save data via service and change the mode to readonly\n   */\n  onSave(){\n   \n    this.changeFieldState();\n    this._personDetails.name=this._profileForm.controls.name.value;\n    this._personDetails.age=this._profileForm.controls.age.value;\n    \n    let weight=this._profileForm.controls.weight.value;\n    //if weight value is changed then update the history object\n    if(weight!=this._personDetails.weight){\n      let lastUpdated:string=this.datePipe.transform(new Date(),\"MM/dd/yyyy\");\n      let historyData:IWeightHistory=new Object() as IWeightHistory;\n      historyData.weight=weight;\n      historyData.lastUpdated=lastUpdated;\n      this._profileForm.controls.lastUpdated.setValue(lastUpdated);\n      this._personDetails.weight=weight;\n      this._personDetails.lastUpdated=lastUpdated;\n      let weights:IWeightHistory[]=this.isValidArrayWithData(this._personDetails.history)?this._personDetails.history:new Array() as IWeightHistory[];\n      let filterItem=weights.filter((iw:IWeightHistory)=>{return iw.lastUpdated===lastUpdated});\n      if(this.isValidArrayWithData(filterItem)){\n        filterItem[0].weight=weight;\n      }else{\n        weights.push(historyData);\n      }\n\n    }\n    \n    if(this.mode==='add'){\n     this._personDetails.username=this._profileForm.controls.username.value;\n    }\n\n    this.dataChanged.emit(this._personDetails);\n    this.mode=\"readonly\";\n  }\n\n  /**\n   * Delegate toggle field state change based  on the mode (edit or readonly)\n   */\n  changeFieldState(){\n    switch(this.mode){\n      case \"edit\":\n        this.enableOrDisableFormFields(false);\n        break;\n      case \"readonly\":\n        this.enableOrDisableFormFields(true);\n        break;\n      case \"add\":\n        this.enableOrDisableFormFields(false);\n    }\n  }\n\n  /**\n   * implements the field state change based on the flag provided.\n   */\n  enableOrDisableFormFields(disable:boolean){\n    (disable)?this._profileForm.controls.name.disable():this._profileForm.controls.name.enable();\n    (disable)?this._profileForm.controls.age.disable():this._profileForm.controls.age.enable();\n    (disable)?this._profileForm.controls.weight.disable():this._profileForm.controls.weight.enable();\n    if(disable){\n      this._editProfilePic=\"disabled\";\n    }else{\n      this._editProfilePic=null;\n    }\n  }\n\n\n  /**\n   * On cancel clicked\n   */\n  onCancel(){\n    this.onCancelClicked.emit(true);\n  }\n\n \n\n}\n\n    \n\n    \n        \n\n      \n    Profile\n  \n  \n\n    \n      \n        \n          \n            \n            Upload\n            \n              \n              edit\n          \n         \n          \n            \n              \n                Name\n                \n                \n                  name is required.\n                \n                \n              \n            \n            \n              \n                Weight\n                \n                \n                  Weight is required.\n                \n                \n                  Only Numbers are allowed\n                \n              \n            \n            \n              \n                Age\n                \n                \n                  Age is required.\n                \n                \n                  Only Numbers are allowed\n                \n              \n            \n            \n              \n                Username\n                \n              \n              \n                Username is required.\n              \n              \n               Enter valid username\n              \n            \n            \n              \n                Last Updated\n                \n              \n            \n            \n          \n        \n      \n\n    \n\n\n  \n  \n    \n    Edit\n    Save\n    Cancel\n  \n  \n\n    \n\n    \n                \n                    ./profile-form.component.scss\n                \n                .full-width{\n    width:300px;\n}\n\n.pull-right{\n    float:right;\n}\n\n.mat-form-field{\n    margin-bottom:0.25em;\n}\n.mat-card-actions{\n    min-height:40px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Profile                                                        Upload                                        edit                                                                       Name                                                  name is required.                                                                                                    Weight                                                  Weight is required.                                                  Only Numbers are allowed                                                                                    Age                                                  Age is required.                                                  Only Numbers are allowed                                                                                    Username                                                            Username is required.                                           Enter valid username                                                                    Last Updated                                                                                              Edit    Save    Cancel    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceRequest.html":{"url":"interfaces/ServiceRequest.html","title":"interface - ServiceRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/service-request.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        handleMessages\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handleMessages\n                                    \n                                \n                                \n                                    \n                                        handleMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ServiceRequest{\n       //service url\n       url:string;\n       //generic data place holder\n       data:T;\n       //delegate message handling to base class\n       handleMessages:boolean;//\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceResponse.html":{"url":"interfaces/ServiceResponse.html","title":"interface - ServiceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/service-response.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        errorMsgs\n                                \n                                \n                                        infoMsgs\n                                \n                                \n                                        success\n                                \n                                \n                                        successMsgs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsgs\n                                    \n                                \n                                \n                                    \n                                        errorMsgs:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        infoMsgs\n                                    \n                                \n                                \n                                    \n                                        infoMsgs:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successMsgs\n                                    \n                                \n                                \n                                    \n                                        successMsgs:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ServiceResponse{\n    //is false if error or info msgs exists otherwise its true irrespective of succesMsgs exists or not.\n    success:boolean;\n    //service returs error message(s)\n    errorMsgs:string[]|string;\n    //service returns success message(s)\n    successMsgs:string[]|string;\n    // service returns info message(s)\n    infoMsgs:string[]|string;\n    //payload\n    data:T;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nNumbersonlyDirective\n\nNumbersonlyDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNumbersonlyDirective->SharedModule\n\n\n\n\n\nValidUsernameDirective\n\nValidUsernameDirective\n\nSharedModule -->\n\nValidUsernameDirective->SharedModule\n\n\n\n\n\nNumbersonlyDirective \n\nNumbersonlyDirective \n\nNumbersonlyDirective  -->\n\nSharedModule->NumbersonlyDirective \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nSharedModule -->\n\nCoreModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumbersonlyDirective\n                        \n                        \n                            ValidUsernameDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumbersonlyDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumbersonlyDirective } from './directives/numbersonly/numbersonly.directive';\nimport { CoreModule } from '../core/core.module';\nimport { ValidUsernameDirective } from './directives/valid-username/valid-username.directive';\n\n\n\n@NgModule({\n  declarations: [NumbersonlyDirective, ValidUsernameDirective],\n  imports: [\n    CommonModule,\n    CoreModule,\n  ],\n  exports:[\n   \n    NumbersonlyDirective\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/top-toolbar/top-toolbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/top-toolbar/top-toolbar.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/top-toolbar/top-toolbar.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../abstract-base/base.component';\nimport { SessionStorageService } from '../../services/session-storage/session-storage.service';\nimport { Router } from '@angular/router';\nimport { delay, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent extends BaseComponent {\n\n  constructor(private router:Router) {\n    super();\n   }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  \n\n  logout(){\n    this._storageService.clearAll();\n    this.router.navigateByUrl(\"pages/login\");\n    this._storageService.emitIsLoggedin(false);\n\n  }\n\n}\n\n    \n\n    \n        \n    games\n    ng-weight-watchers\n    \n    \n     Logout\n    \n  \n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                .brand-title{\n    font-weight:bold;\n    padding:0.35em;\n    font-size:20px;\n}\n.fill-space{\n    flex: 1 0 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    games    ng-weight-watchers             Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'},{'name': 'ValidUsernameDirective', 'selector': '[appValidUsername]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidUsernameDirective.html":{"url":"directives/ValidUsernameDirective.html","title":"directive - ValidUsernameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidUsernameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/valid-username/valid-username.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidUsernameDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appValidUsername]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                    Static\n                                validateUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/valid-username/valid-username.directive.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            registerOnValidatorChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/valid-username/valid-username.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/valid-username/valid-username.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            validateUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUsername(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/valid-username/valid-username.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationErrors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { Validator, FormControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appValidUsername]',\n  providers:[\n    {provide:NG_VALIDATORS,useExisting:ValidUsernameDirective}\n  ]\n})\nexport class ValidUsernameDirective  implements Validator{\n\n  constructor() { }\n\n\n  validate(control: FormControl):ValidationErrors|null {\n    return ValidUsernameDirective.validateUsername(control);\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    return null;\n  }\n\n  static validateUsername(control:FormControl):ValidationErrors{\n//^[a-zA-Z0-9]+(?:[_]?[a-zA-Z0-9])*$\n\n    let value=control.value;\n    //Ensure that this validation is triggered only if value exists\n    if(!value || value.length==0){\n      return null;\n    }\n\n    let regexNumber:RegExp=new RegExp(/^[a-zA-Z0-9]+(?:[_]?[a-zA-Z0-9])*$/);\n    let isValid=regexNumber.test(value);\n    \n    return (!isValid)?{notvaliduser:\"PLease enter a valid username\"} as ValidationErrors:null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/core/abstract-base/base.component.ts\n            \n            class\n            BaseComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/core/abstract-base/base.service.ts\n            \n            class\n            BaseService\n            \n                52 %\n                (10/19)\n            \n        \n        \n            \n                \n                src/app/core/abstract-base/base.util.ts\n            \n            class\n            AbstractBaseUtil\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/core/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                40 %\n                (8/20)\n            \n        \n        \n            \n                \n                src/app/core/components/messages/messages.component.ts\n            \n            component\n            MessagesComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/core/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/components/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-guard/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptor/http-mock.interceptor.ts\n            \n            interceptor\n            HttpMockInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/message.interface.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/service-request.interface.ts\n            \n            interface\n            ServiceRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/service-response.interface.ts\n            \n            interface\n            ServiceResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/models/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/core-injector/core-injector.service.ts\n            \n            injectable\n            CoreInjectorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/core/services/mock-data/mock-data.service.ts\n            \n            injectable\n            MockDataService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage/session-storage.service.ts\n            \n            injectable\n            SessionStorageService\n            \n                61 %\n                (24/39)\n            \n        \n        \n            \n                \n                src/app/features/components/line-chart/line-chart.component.ts\n            \n            component\n            LineChartComponent\n            \n                37 %\n                (12/32)\n            \n        \n        \n            \n                \n                src/app/features/components/name-weight-card/name-weight-card.component.ts\n            \n            component\n            NameWeightCardComponent\n            \n                36 %\n                (8/22)\n            \n        \n        \n            \n                \n                src/app/features/components/profile-form/profile-form.component.ts\n            \n            component\n            ProfileFormComponent\n            \n                45 %\n                (14/31)\n            \n        \n        \n            \n                \n                src/app/features/models/person-details.interface.ts\n            \n            interface\n            IPersonDetails\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/models/weight-history.interface.ts\n            \n            interface\n            IWeightHistory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/services/person-details.service.ts\n            \n            injectable\n            PersonDetailsService\n            \n                58 %\n                (17/29)\n            \n        \n        \n            \n                \n                src/app/pages/home/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                32 %\n                (8/25)\n            \n        \n        \n            \n                \n                src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts\n            \n            component\n            PersonalDashboardComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/shared/directives/numbersonly/numbersonly.directive.ts\n            \n            directive\n            NumbersonlyDirective\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/directives/valid-username/valid-username.directive.ts\n            \n            directive\n            ValidUsernameDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.0.0\n        \n            @angular/common : ~9.0.0\n        \n            @angular/compiler : ~9.0.0\n        \n            @angular/core : ~9.0.0\n        \n            @angular/elements : ^9.0.1\n        \n            @angular/forms : ~9.0.0\n        \n            @angular/platform-browser : ~9.0.0\n        \n            @angular/platform-browser-dynamic : ~9.0.0\n        \n            @angular/router : ~9.0.0\n        \n            @webcomponents/webcomponentsjs : ^2.4.1\n        \n            d3 : ^5.15.0\n        \n            document-register-element : ^1.7.2\n        \n            rxjs : ~6.5.4\n        \n            sass : ^1.25.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MessageEnum   (src/.../messages.enum.ts)\n                        \n                        \n                            MsgTypeEnum   (src/.../msg-type.enum.ts)\n                        \n                        \n                            ServiceUrls   (src/.../service-url.enum.ts)\n                        \n                        \n                            StorageKeys   (src/.../storage-keys.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enums/messages.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageEnum\n                    \n                \n                        \n                            \n                                 PROFILE_UPDATED\n                            \n                        \n                        \n                            \n                                Value : Profile has been updated.\n                            \n                        \n                        \n                            \n                                 SERVICE_FAILIRE\n                            \n                        \n                        \n                            \n                                Value : Unexpected service error occured.\n                            \n                        \n                        \n                            \n                                 NO_URL_FOUND\n                            \n                        \n                        \n                            \n                                Value : Requested service is not found\n                            \n                        \n            \n        \n\n    src/app/core/enums/msg-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MsgTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : check\n                            \n                        \n            \n        \n\n    src/app/core/enums/service-url.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ServiceUrls\n                    \n                \n                        \n                            \n                                 GET_ALL_USERS\n                            \n                        \n                        \n                            \n                                Value : allusers\n                            \n                        \n                        \n                            \n                                 GET_USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 SAVE_USER\n                            \n                        \n                        \n                            \n                                Value : saveuser\n                            \n                        \n                        \n                            \n                                 DELETE_USER\n                            \n                        \n                        \n                            \n                                Value : deleteuser\n                            \n                        \n            \n        \n\n    src/app/core/enums/storage-keys.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageKeys\n                    \n                \n                        \n                            \n                                 USER_PROFILES\n                            \n                        \n                        \n                            \n                                Value : USER_PROFILES\n                            \n                        \n                        \n                            \n                                 CURRENT_USER\n                            \n                        \n                        \n                            \n                                Value : CURRENT_USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgWeightWatchers\nDevelopment server\nUse npm start to start development server at http://localhost:4200\nProd Build\nUse npm run build:prod to make a prod build\nRunning unit tests\nUse npm run test to run unit testing using Karma/Jasmin\nRunning code coverage test\nUse npm run code:coverage. \nSample output will have something similar and percent may change based on number unit testing implemented.\ncode coverage results\nStatements   : 31.51% ( 144/457 )\nBranches     : 14.91% ( 24/161 )\nFunctions    : 22.78% ( 36/158 )\nLines        : 27.68% ( 116/419 )\nRunning end-to-end tests\nTODO: implement cypress.io e2e testing\nDocumentaiton\nUse npm run gen:documentation to generate the documentation using '@compodoc' (see https://compodoc.app/)\nThe generated documentation for the project is available under documentation folder. \nLaunch index.html to get an overview of the application.\neg., /ng-weight-watchers/documentation/index.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonalDashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonalDashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_PersonalDashboardModule\n\n\n\ncluster_PersonalDashboardModule_declarations\n\n\n\ncluster_PersonalDashboardModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nCoreModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCoreModule->SharedModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nCoreModule->LoginComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nTopToolbarComponent \n\nTopToolbarComponent \n\nTopToolbarComponent  -->\n\nCoreModule->TopToolbarComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nPersonalDashboardModule\n\nPersonalDashboardModule\n\nPersonalDashboardModule -->\n\nCoreModule->PersonalDashboardModule\n\n\n\nAppModule -->\n\nFeaturesModule->AppModule\n\n\n\n\n\nLineChartComponent \n\nLineChartComponent \n\nLineChartComponent  -->\n\nFeaturesModule->LineChartComponent \n\n\n\n\n\nNameWeightCardComponent \n\nNameWeightCardComponent \n\nNameWeightCardComponent  -->\n\nFeaturesModule->NameWeightCardComponent \n\n\n\n\n\nProfileFormComponent \n\nProfileFormComponent \n\nProfileFormComponent  -->\n\nFeaturesModule->ProfileFormComponent \n\n\n\nHomeModule -->\n\nFeaturesModule->HomeModule\n\n\n\nPersonalDashboardModule -->\n\nFeaturesModule->PersonalDashboardModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\nNumbersonlyDirective \n\nNumbersonlyDirective \n\nNumbersonlyDirective  -->\n\nSharedModule->NumbersonlyDirective \n\n\n\n\n\nHttpMockInterceptor\n\nHttpMockInterceptor\n\nAppModule -->\n\nHttpMockInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nCoreModule -->\n\nLoginComponent->CoreModule\n\n\n\n\n\nMessagesComponent\n\nMessagesComponent\n\nCoreModule -->\n\nMessagesComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nCoreModule -->\n\nTopToolbarComponent->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\nFeaturesModule -->\n\nLineChartComponent->FeaturesModule\n\n\n\n\n\nNameWeightCardComponent\n\nNameWeightCardComponent\n\nFeaturesModule -->\n\nNameWeightCardComponent->FeaturesModule\n\n\n\n\n\nProfileFormComponent\n\nProfileFormComponent\n\nFeaturesModule -->\n\nProfileFormComponent->FeaturesModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nPersonalDashboardComponent\n\nPersonalDashboardComponent\n\nPersonalDashboardModule -->\n\nPersonalDashboardComponent->PersonalDashboardModule\n\n\n\n\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardModule -->\n\nPersonalDashboardRoutingModule->PersonalDashboardModule\n\n\n\n\n\nNumbersonlyDirective\n\nNumbersonlyDirective\n\nSharedModule -->\n\nNumbersonlyDirective->SharedModule\n\n\n\n\n\nValidUsernameDirective\n\nValidUsernameDirective\n\nSharedModule -->\n\nValidUsernameDirective->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
