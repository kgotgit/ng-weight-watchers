var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractBaseUtil.html",[0,0.208,1,0.984]],["body/classes/AbstractBaseUtil.html",[0,0.181,1,1.22,2,0.907,3,0.157,4,0.157,5,0.157,6,2.741,7,2.577,8,0.364,9,0.902,10,1.6,11,1.373,12,1.974,13,1.02,14,1.373,15,1.373,16,1.373,17,1.373,18,1.262,19,1.38,20,4.32,21,1.294,22,1.72,23,0.024,24,1.149,25,1.6,26,3.028,27,1.373,28,3.028,29,1.22,30,1.936,31,1.918,32,1.261,33,1.38,34,1.373,35,1.918,36,1.376,37,1.147,38,0.825,39,1.22,40,1.373,41,3.028,42,1.918,43,1.918,44,1.763,45,1.373,46,1.373,47,1.918,48,1.34,49,0.962,50,3.028,51,1.644,52,1.373,53,3.028,54,0.438,55,1.991,56,0.181,57,1.494,58,2.279,59,1.153,60,1.226,61,3.028,62,3.028,63,1.226,64,2.577,65,2.577,66,2.577,67,3.028,68,3.028,69,1.879,70,3.028,71,3.028,72,2.057,73,2.057,74,0.962,75,3.028,76,2.279,77,2.577,78,3.028,79,0.455,80,2.279,81,3.028,82,2.909,83,5.49,84,4.32,85,3.028,86,2.469,87,2.18,88,2.484,89,2.909,90,3.028,91,2.577,92,3.028,93,3.028,94,2.057,95,3.028,96,0.01,97,0.014,98,0.01]],["title/components/AppComponent.html",[79,0.524,99,1.175]],["body/components/AppComponent.html",[0,0.242,1,1.655,2,1.216,3,0.144,4,0.144,5,0.144,8,0.334,9,0.848,10,1.29,11,1.29,12,1.783,13,0.958,14,1.29,15,1.29,16,1.29,17,1.29,18,0.697,19,1.502,21,1.437,22,1.493,23,0.023,24,1.08,25,1.29,27,0.883,29,0.784,30,1.216,31,1.524,32,1.343,33,1.172,34,0.883,35,1.524,36,1.407,37,1.322,38,0.932,39,1.247,40,0.883,42,1.524,43,1.524,44,1.469,45,0.883,46,0.883,47,0.883,48,1.404,49,0.883,51,1.216,52,0.883,54,0.487,56,0.166,59,1.058,60,1.125,63,1.942,74,0.883,79,0.721,96,0.009,97,0.013,98,0.009,99,1.779,100,1.644,101,1.199,102,1.199,103,1.199,104,1.199,105,2.364,106,1.369,107,2.362,108,1.125,109,2.695,110,2.509,111,2.151,112,1.752,113,4.796,114,1.752,115,4.059,116,3.257,117,1.752,118,1.752,119,5.275,120,2.451,121,2.07,122,2.091,123,3.016,124,4.059,125,2.779,126,1.681,127,2.779,128,2.198,129,1.28,130,1.28,131,1.826,132,1.058,133,1.125,134,1.199,135,1.199,136,1.752,137,1.199,138,1.199,139,1.199,140,1.125,141,1.199,142,1.199,143,1.199,144,1.125,145,1.199,146,1.28,147,0.937,148,0.937,149,0.937,150,0.937,151,2.757,152,1.618,153,3.055,154,1.28,155,0.995,156,1.28,157,0.937,158,0.937,159,0.334,160,1.125,161,2.779,162,1.28,163,1.125,164,1.588,165,0.937,166,2.364,167,2.364,168,3.055,169,2.091,170,1.887,171,2.779,172,0.784,173,1.752,174,1.545,175,0.937,176,2.277,177,1.199,178,1.199,179,0.883,180,1.199,181,0.937,182,1.199,183,1.199,184,0.883,185,1.199,186,0.937,187,1.199,188,0.937,189,1.199,190,0.883,191,1.199,192,1.199,193,0.883,194,1.125,195,1.199,196,0.937,197,1.125,198,1.199,199,0.937,200,1.199,201,1.199,202,1.125,203,0.883,204,1.125,205,1.199]],["title/modules/AppModule.html",[206,0.927,207,2.366]],["body/modules/AppModule.html",[0,0.23,2,1.153,3,0.2,4,0.2,5,0.2,23,0.023,54,0.703,56,0.23,69,2.388,96,0.012,97,0.016,98,0.012,99,2.352,110,1.465,159,0.462,172,1.087,206,1.024,207,4.842,208,1.379,209,1.774,210,3.026,211,3.026,212,2.817,213,1.774,214,3.275,215,3.275,216,3.275,217,3.275,218,3.275,219,4.03,220,2.993,221,3.442,222,3.713,223,3.922,224,2.699,225,2.039,226,1.899,227,3.849,228,2.699,229,5.095,230,3.834,231,2.388,232,2.199,233,3.275,234,5.095,235,3.849,236,3.849,237,2.896,238,3.275,239,3.849,240,2.2,241,3.849,242,2.388,243,2.896,244,3.849,245,5.095,246,2.2,247,3.849,248,3.849,249,2.896,250,3.849,251,3.849,252,2.896,253,3.849,254,3.849,255,3.849,256,3.849,257,2.896,258,3.849]],["title/classes/AppPage.html",[0,0.208,259,2.622]],["body/classes/AppPage.html",[0,0.297,2,1.491,3,0.259,4,0.259,5,0.259,8,0.598,13,1.415,19,1.332,23,0.023,32,1.252,54,0.505,56,0.297,87,2.022,96,0.016,97,0.019,98,0.016,111,2.638,174,1.895,231,3.089,259,4.51,260,4.235,261,6.675,262,6.675,263,4.978,264,6.938,265,4.978,266,4.235,267,4.978,268,4.978,269,4.978,270,4.978]],["title/modules/AppRoutingModule.html",[206,0.927,219,2.162]],["body/modules/AppRoutingModule.html",[0,0.281,3,0.245,4,0.245,5,0.245,23,0.024,54,0.665,56,0.281,79,0.708,96,0.015,97,0.018,98,0.015,159,0.565,160,1.907,184,1.841,190,1.496,208,1.686,213,2.17,219,3.595,228,2.495,232,2.501,271,4.709,272,3.543,273,3.588,274,3.935,275,4.709,276,4.709,277,3.198,278,4.006,279,3.198,280,4.567,281,5.794,282,4.709,283,4.709,284,4.709,285,4.709,286,2.921,287,4.709,288,4.709,289,4.709,290,3.543,291,4.709,292,4.709]],["title/guards/AuthGuardService.html",[293,2.622,294,2.162]],["body/guards/AuthGuardService.html",[0,0.275,3,0.24,4,0.24,5,0.24,8,0.554,13,1.351,18,1.157,19,1.272,23,0.023,32,0.964,36,1.157,37,0.964,38,0.694,39,1.025,48,1.523,54,0.631,56,0.275,87,1.93,88,2.276,89,2.445,96,0.015,97,0.018,98,0.015,111,2.445,123,3.822,155,2.228,159,0.554,160,1.869,163,1.869,164,2.638,294,3.551,295,4.615,296,4.224,297,4.224,298,3.926,299,5.127,300,3.926,301,4.615,302,3.473,303,4.615,304,2.318,305,3.134,306,2.638,307,2.863,308,2.863,309,2.638,310,4.615,311,4.615,312,3.926,313,4.615,314,4.615]],["title/classes/BaseComponent.html",[0,0.208,107,1.326]],["body/classes/BaseComponent.html",[0,0.304,1,1.833,2,1.751,3,0.16,4,0.16,5,0.16,6,2.696,8,0.371,9,0.915,10,1.391,11,1.391,12,1.985,13,1.034,14,1.391,15,1.391,16,1.391,17,1.391,18,1.276,19,1.494,21,1.311,22,1.474,23,0.023,24,1.165,25,1.617,27,0.981,29,0.871,30,1.311,31,1.617,32,1.333,33,1.131,34,0.981,35,1.617,36,1.388,37,1.157,38,0.913,39,1.23,40,0.981,42,1.617,43,1.617,44,1.523,45,0.981,46,0.981,47,0.981,48,1.474,49,0.981,51,1.311,52,0.981,54,0.593,56,0.184,57,1.523,59,1.667,60,1.773,63,2.243,74,1.391,96,0.01,97,0.014,98,0.01,106,1.477,107,1.667,117,1.89,118,1.89,120,2.243,121,2.39,126,1.751,128,2.048,131,2.312,132,1.667,133,1.773,134,1.89,135,1.89,136,2.39,137,1.89,138,1.89,139,1.89,140,1.773,141,1.89,142,1.89,143,1.89,144,1.773,145,1.89,147,1.041,148,1.041,149,1.041,150,1.041,155,1.568,157,1.041,158,1.041,159,0.371,165,1.041,240,1.764,242,1.915,243,2.323,306,1.764,307,1.915,309,2.503,315,2.626,316,2.196,317,5.089,318,4.379,319,3.087,320,3.087,321,3.087,322,3.087,323,2.626,324,2.626,325,2.096,326,2.096,327,1.764,328,1.332,329,3.087,330,3.087,331,3.087,332,3.087,333,3.087,334,3.087,335,3.087,336,3.087,337,2.626,338,3.087,339,3.087,340,3.087]],["title/classes/BaseService.html",[0,0.208,341,2.162]],["body/classes/BaseService.html",[0,0.196,1,1.65,2,1.645,3,0.109,4,0.109,5,0.109,6,2.672,8,0.251,9,0.684,10,2.019,11,1.041,12,1.283,13,0.773,14,1.041,15,1.041,16,1.041,17,1.041,18,1.012,19,1.451,21,1.484,22,1.462,23,0.023,24,0.872,25,0.665,27,0.665,29,0.591,30,1.209,31,1.283,32,1.273,33,1.168,34,0.665,35,1.451,36,1.465,37,1.221,38,0.955,39,1.299,40,0.665,42,1.283,43,1.283,44,1.527,45,0.665,46,0.665,47,0.665,48,1.319,49,0.665,51,1.645,52,0.665,54,0.628,55,0.965,56,0.125,57,1.033,59,1.247,69,3.261,74,1.451,82,3.167,87,2.088,88,1.033,96,0.007,97,0.01,98,0.007,106,1.105,126,0.627,128,1.772,131,2.091,132,1.536,144,1.635,147,0.706,148,0.706,149,0.706,150,0.706,157,0.706,158,0.706,159,0.251,165,0.706,240,1.873,242,1.299,243,1.575,246,1.197,323,1.781,325,1.421,328,0.903,341,2.033,342,1.781,343,2.787,344,2.787,345,2.787,346,2.787,347,3.884,348,2.787,349,2.787,350,2.787,351,2.787,352,2.787,353,3.276,354,2.225,355,2.093,356,1.781,357,2.787,358,2.787,359,1.873,360,2.093,361,1.781,362,2.093,363,2.093,364,1.781,365,3.037,366,2.093,367,2.465,368,3.246,369,4.972,370,3.366,371,1.781,372,3.709,373,3.037,374,2.61,375,2.093,376,2.787,377,3.86,378,2.465,379,3.729,380,3.075,381,2.787,382,1.781,383,2.093,384,4.471,385,4.471,386,1.781,387,2.093,388,2.787,389,1.781,390,2.093,391,2.787,392,2.093,393,2.033,394,2.093,395,1.575,396,2.093,397,2.093,398,1.873,399,2.093,400,2.093,401,1.575,402,1.781,403,1.781,404,1.781,405,2.093,406,2.093,407,2.093,408,2.093,409,2.093,410,2.093,411,2.093,412,1.421,413,1.781,414,2.093,415,2.093,416,1.781,417,2.093,418,2.093,419,2.093,420,2.093,421,2.093,422,3.004,423,4.036,424,2.504,425,4.036,426,4.036,427,4.036,428,4.036,429,4.036,430,4.036,431,4.036,432,4.036,433,2.093,434,2.093,435,3.276,436,3.276,437,2.093,438,2.093,439,2.465,440,1.781,441,2.093,442,2.093,443,2.093,444,2.093,445,2.093,446,2.093,447,2.093,448,2.093,449,2.093,450,2.093,451,2.093,452,1.575,453,2.093,454,2.093,455,2.093,456,2.093]],["title/injectables/CoreInjectorService.html",[240,1.992,304,1.411]],["body/injectables/CoreInjectorService.html",[0,0.283,3,0.246,4,0.246,5,0.246,8,0.569,9,1.216,19,1.399,23,0.023,32,0.99,36,1.189,37,0.99,38,0.712,39,1.053,54,0.481,56,0.283,87,1.599,96,0.015,97,0.019,98,0.015,111,2.512,126,1.42,159,0.569,233,5.732,240,3.326,242,4.073,304,2.356,308,2.941,325,4.458,424,2.941,457,2.941,458,4.033,459,3.906,460,5.732,461,5.819,462,3.951,463,4.741,464,4.741,465,4.741,466,4.741,467,4.741,468,4.741,469,4.741,470,4.741,471,4.741,472,4.741]],["title/modules/CoreModule.html",[206,0.927,220,1.605]],["body/modules/CoreModule.html",[0,0.242,3,0.211,4,0.211,5,0.211,23,0.023,54,0.69,56,0.242,96,0.013,97,0.017,98,0.013,159,0.486,172,1.144,184,2.22,186,2.222,190,2.093,199,2.356,206,1.402,208,1.887,209,1.867,210,3.102,211,2.146,212,1.998,213,2.427,220,3.303,224,2.791,225,2.146,226,1.998,228,2.791,232,2.273,277,2.751,278,3.446,473,3.446,474,3.446,475,3.446,476,3.446,477,4.334,478,4.051,479,3.269,480,2.146,481,4.051,482,3.048,483,4.051,484,4.051,485,4.051,486,4.051,487,4.051,488,4.482,489,2.316,490,4.051,491,4.051,492,4.051]],["title/modules/FeaturesModule.html",[206,0.927,221,1.846]],["body/modules/FeaturesModule.html",[0,0.239,3,0.208,4,0.208,5,0.208,23,0.023,54,0.696,56,0.239,96,0.013,97,0.017,98,0.013,152,1.761,159,0.48,160,1.619,172,1.128,181,2.351,188,2.351,196,2.351,206,1.063,208,1.431,209,1.842,210,3.082,211,2.118,212,1.971,213,2.406,220,3.024,221,3.793,222,3.752,224,2.767,225,2.118,226,1.971,228,2.767,232,2.254,237,3.007,238,3.4,274,2.714,479,3.24,480,2.118,488,4.443,489,2.285,493,3.4,494,3.4,495,3.997,496,3.4,497,3.997,498,3.4,499,3.997,500,3.007,501,3.997,502,3.997,503,3.007,504,3.997,505,3.997,506,3.007,507,3.997,508,3.997,509,3.997]],["title/components/HomeComponent.html",[79,0.524,179,1.107]],["body/components/HomeComponent.html",[0,0.232,1,1.621,2,1.166,3,0.136,4,0.136,5,0.136,6,1.133,8,0.315,9,0.813,10,1.237,11,1.237,12,1.742,13,0.919,14,1.237,15,1.237,16,1.237,17,1.237,18,0.658,19,1.498,21,1.166,22,1.366,23,0.023,24,1.036,25,1.237,27,0.834,29,0.741,30,1.166,31,1.475,32,1.345,33,1.031,34,0.834,35,1.475,36,1.44,37,1.326,38,0.937,39,1.276,40,0.834,42,1.475,43,1.475,44,1.44,45,0.834,46,0.834,47,0.834,48,1.366,49,0.834,51,1.166,52,0.834,54,0.556,55,1.21,56,0.157,59,1.482,60,1.063,63,1.879,74,1.475,79,0.697,96,0.008,97,0.012,98,0.008,99,0.885,100,1.577,101,1.133,102,1.133,103,1.133,104,1.133,106,1.313,107,2.324,108,1.063,109,2.666,110,2.48,112,1.68,114,1.68,117,1.68,118,1.68,120,2.407,121,2.002,122,1.975,123,2.934,126,1.78,128,2.171,129,1.21,130,1.21,131,1.766,132,0.999,133,1.063,134,1.133,135,1.133,136,1.68,137,1.133,138,1.133,139,1.133,140,1.063,141,1.133,142,1.133,143,1.133,144,1.063,145,1.133,146,1.21,147,0.885,148,0.885,149,0.885,150,0.885,152,0.885,154,1.21,155,0.94,156,1.21,157,0.885,158,0.885,159,0.315,160,1.063,162,1.21,163,1.063,164,1.501,165,0.885,168,2.929,169,1.975,172,0.741,173,1.68,174,1.482,175,0.885,176,2.215,177,1.133,178,1.133,179,1.631,180,1.133,181,0.885,182,1.133,183,1.133,184,0.834,185,1.133,186,0.885,187,1.133,188,0.885,189,1.133,190,0.834,191,1.133,192,1.133,193,0.834,194,1.063,195,1.133,196,0.885,197,1.063,198,1.133,199,0.885,200,1.133,201,1.133,202,1.063,203,0.834,204,1.063,205,1.133,316,1.133,510,2.233,511,4.64,512,3.893,513,3.312,514,3.312,515,5.133,516,3.893,517,2.625,518,1.794,519,2.625,520,1.391,521,2.625,522,2.625,523,1.295,524,1.629,525,1.629,526,2.625,527,2.625,528,2.625,529,2.625,530,2.625,531,3.893,532,1.782,533,1.782,534,2.625,535,1.782,536,2.233,537,2.233,538,2.233,539,2.233,540,2.233,541,2.233,542,2.233,543,2.625,544,1.782,545,2.625]],["title/modules/HomeModule.html",[206,0.927,546,2.366]],["body/modules/HomeModule.html",[0,0.268,3,0.233,4,0.233,5,0.233,23,0.023,54,0.687,56,0.268,96,0.014,97,0.018,98,0.014,159,0.539,168,3.376,172,1.267,179,2.15,206,1.194,208,1.607,209,2.067,210,3.254,211,2.377,212,2.213,213,2.067,220,3.118,221,3.585,224,2.979,225,2.377,226,2.213,228,2.979,232,2.427,249,3.376,479,3.489,480,2.377,546,4.84,547,3.817,548,3.817,549,3.817,550,4.198,551,4.486,552,3.817,553,3.817,554,3.817]],["title/modules/HomeRoutingModule.html",[206,0.927,550,2.162]],["body/modules/HomeRoutingModule.html",[0,0.3,3,0.261,4,0.261,5,0.261,23,0.023,54,0.68,56,0.3,79,0.755,96,0.016,97,0.019,98,0.016,159,0.603,160,2.035,179,1.916,208,1.8,232,2.602,272,3.782,273,3.446,274,3.413,279,3.413,280,3.413,294,3.74,296,3.413,297,3.413,299,3.782,550,3.74,552,4.276,555,5.026,556,4.276,557,4.276,558,4.276,559,4.276]],["title/interceptors/HttpMockInterceptor.html",[223,2.162,560,2.964]],["body/interceptors/HttpMockInterceptor.html",[0,0.257,3,0.224,4,0.224,5,0.224,8,0.517,13,1.294,18,1.081,19,1.218,23,0.023,24,1.147,32,0.9,36,1.375,37,1.145,38,0.824,39,1.218,54,0.68,55,1.986,56,0.257,74,1.916,87,1.849,91,3.667,96,0.014,97,0.018,98,0.014,155,2.159,159,0.517,163,1.745,223,3.402,246,2.464,300,3.667,302,3.243,304,2.22,305,2.927,306,2.464,307,2.674,309,2.464,326,2.927,328,1.86,374,2.464,395,3.243,561,4.31,562,5.129,563,3.667,564,5.483,565,4.31,566,5.483,567,6.346,568,6.029,569,6.346,570,4.31,571,4.31,572,5.483,573,4.31,574,4.31,575,4.31,576,3.667,577,4.31,578,3.243,579,4.31,580,4.31,581,4.31,582,4.31,583,4.31,584,4.31,585,4.31,586,4.31,587,3.667]],["title/interfaces/IMessage.html",[398,1.992,588,1.248]],["body/interfaces/IMessage.html",[3,0.335,4,0.26,5,0.26,8,0.6,9,1.256,23,0.023,33,1.486,38,1.044,39,1.432,56,0.299,96,0.016,97,0.019,98,0.016,398,3.436,422,3.436,588,1.791,589,2.65,590,4.256,591,6.445,592,4.54,593,4.082,594,5.002,595,5.002,596,5.002,597,3.764,598,4.256]],["title/interfaces/IPersonDetails.html",[523,1.718,588,1.248]],["body/interfaces/IPersonDetails.html",[3,0.234,4,0.234,5,0.234,8,0.54,9,1.176,23,0.023,33,1.543,37,1.284,38,1.044,44,1.127,54,0.456,56,0.268,94,3.823,96,0.014,97,0.018,98,0.014,152,2.238,518,3.119,520,3.414,523,2.777,524,2.789,535,3.053,588,1.61,589,2.382,599,3.825,600,5.23,601,5.23,602,5.23,603,4.175,604,4.175,605,3.257,606,3.053,607,4.496,608,4.79,609,4.496,610,4.496,611,3.825,612,3.383,613,3.825,614,3.383,615,4.496,616,3.825,617,3.825,618,4.496,619,4.496]],["title/interfaces/IUser.html",[588,1.248,620,2.366]],["body/interfaces/IUser.html",[3,0.28,4,0.28,5,0.28,8,0.647,9,1.312,23,0.022,33,1.396,38,0.81,56,0.322,96,0.017,97,0.02,98,0.017,588,1.93,589,2.855,604,4.516,614,4.055,620,4.266,621,4.585]],["title/interfaces/IWeightHistory.html",[588,1.248,605,1.846]],["body/interfaces/IWeightHistory.html",[3,0.261,4,0.261,5,0.261,8,0.603,9,1.259,23,0.023,33,1.339,38,0.971,39,1.339,44,1.26,56,0.3,94,4.094,96,0.016,97,0.019,98,0.016,152,2.178,518,3.086,520,3.548,588,1.8,589,2.663,603,4.385,605,3.194,611,4.276,612,3.782,616,4.276,617,4.276,622,3.782,623,4.276,624,5.026,625,5.026]],["title/components/LineChartComponent.html",[79,0.524,181,1.175]],["body/components/LineChartComponent.html",[0,0.201,1,1.315,2,0.791,3,0.083,4,0.083,5,0.083,6,0.691,8,0.192,9,0.552,10,0.839,11,0.839,12,1.375,13,0.624,14,0.839,15,0.839,16,0.839,17,0.839,18,0.402,19,1.5,21,1.172,22,1.239,23,0.023,24,0.703,25,0.839,27,0.509,29,0.452,30,0.791,31,1.071,32,1.292,33,0.962,34,0.509,35,1.375,36,1.168,37,1.148,38,0.939,39,1.035,40,0.509,42,1.071,43,1.071,44,1.291,45,0.509,46,0.509,47,0.509,48,1.041,49,0.509,51,1.542,52,0.509,54,0.523,56,0.096,59,0.61,60,0.649,63,1.995,74,0.509,79,0.507,86,0.916,94,2.289,96,0.005,97,0.008,98,0.005,99,0.54,100,1.07,101,0.691,102,0.691,103,0.691,104,0.691,106,0.891,107,1.96,108,0.649,109,2.374,110,2.191,112,1.14,114,1.14,116,2.939,117,1.14,118,1.14,120,1.995,121,1.455,126,1.724,128,1.9,129,0.738,130,0.738,131,1.283,132,0.61,133,0.649,134,0.691,135,0.691,136,1.14,137,0.691,138,0.691,139,0.691,140,0.649,141,0.691,142,0.691,143,0.691,144,0.649,145,0.691,146,0.738,147,0.54,148,0.54,149,0.54,150,0.54,152,1.137,154,0.738,155,0.574,156,0.738,157,0.54,158,0.54,159,0.192,162,0.738,163,0.649,165,0.54,170,2.289,172,0.452,173,1.14,174,1.006,175,0.54,176,1.688,177,0.691,178,0.691,179,0.509,180,0.691,181,1.319,182,2.782,183,0.691,184,0.509,185,0.691,186,0.54,187,0.691,188,0.54,189,0.691,190,0.509,191,0.691,192,0.691,193,0.509,194,0.649,195,0.691,196,0.54,197,0.649,198,0.691,199,0.54,200,1.455,201,0.691,202,0.649,203,0.509,204,0.649,205,0.691,280,2.289,316,0.691,373,1.988,412,1.088,424,1.639,439,1.205,459,3.571,462,1.794,506,4.851,518,1.802,603,1.088,605,2.072,606,1.088,626,5.484,627,1.363,628,2.642,629,2.642,630,5.635,631,3.371,632,2.642,633,2.642,634,3.371,635,3.371,636,3.963,637,3.256,638,3.371,639,3.371,640,3.911,641,3.911,642,3.911,643,3.911,644,3.911,645,3.911,646,1.794,647,4.926,648,1.602,649,2.868,650,2.642,651,1.602,652,2.642,653,1.602,654,5.336,655,2.642,656,1.602,657,5.496,658,5.635,659,6.303,660,1.602,661,3.911,662,1.602,663,4.327,664,1.602,665,1.602,666,1.602,667,1.602,668,2.642,669,1.988,670,1.602,671,1.602,672,3.371,673,1.602,674,3.328,675,2.248,676,2.642,677,2.642,678,2.642,679,2.248,680,1.602,681,1.602,682,1.602,683,1.602,684,1.602,685,1.602,686,1.602,687,1.794,688,1.602,689,3.963,690,1.602,691,1.602,692,1.602,693,1.602,694,2.642,695,1.602,696,1.602,697,1.363,698,1.602,699,1.602,700,2.642,701,1.602,702,2.642,703,1.602,704,2.642,705,1.602,706,2.642,707,1.602,708,1.602,709,1.602,710,1.205,711,1.205,712,1.602,713,1.602,714,1.602,715,1.602,716,1.363,717,1.602,718,1.602,719,1.602,720,1.602,721,1.602,722,1.602,723,1.602,724,1.602,725,1.602,726,1.602,727,1.602,728,1.602,729,1.602,730,1.602,731,3.371,732,1.602,733,1.602,734,1.602,735,1.602,736,1.602,737,1.602,738,2.642,739,1.602,740,1.602,741,1.602,742,2.642,743,3.911,744,1.602,745,1.602,746,1.602,747,1.602,748,1.602,749,1.602,750,1.602,751,1.602,752,1.602,753,1.602,754,1.602,755,1.602,756,1.602,757,1.602,758,1.363,759,1.602,760,1.602,761,1.602,762,1.602,763,2.642,764,2.642,765,1.602,766,1.602,767,1.602,768,1.602,769,1.363,770,1.602,771,1.602,772,1.602,773,1.602,774,1.602,775,1.602,776,1.602,777,1.363,778,1.602,779,1.602,780,1.602,781,2.868,782,3.371,783,4.327,784,1.602,785,1.363,786,1.602,787,1.602,788,1.602,789,1.602,790,1.602]],["title/components/LoginComponent.html",[79,0.524,184,1.107]],["body/components/LoginComponent.html",[0,0.19,1,1.462,2,0.954,3,0.105,4,0.105,5,0.105,8,0.243,9,0.666,10,1.012,11,1.012,12,1.548,13,0.752,14,1.012,15,1.012,16,1.012,17,1.012,18,0.507,19,1.472,21,1.181,22,1.297,23,0.023,24,1.05,25,1.012,27,0.642,29,0.57,30,0.954,31,1.254,32,1.282,33,0.876,34,0.642,35,1.254,36,1.222,37,1.261,38,0.889,39,1.083,40,0.642,42,1.254,43,1.254,44,1.408,45,0.642,46,0.642,47,0.642,48,1.297,49,0.642,51,1.459,52,0.642,54,0.623,55,0.931,56,0.121,57,0.997,58,2.397,59,0.769,60,0.818,63,1.597,73,1.372,74,1.012,76,1.52,77,1.719,79,0.732,80,1.52,87,1.075,89,1.07,96,0.006,97,0.01,98,0.006,99,0.681,100,1.29,101,0.872,102,0.872,103,0.872,104,0.872,106,1.075,107,2.138,108,0.818,109,2.521,110,2.336,112,1.375,114,1.375,116,1.372,117,1.375,118,1.375,120,2.195,121,1.702,123,2.786,126,1.682,128,2.035,129,0.931,130,0.931,131,1.501,132,0.769,133,1.29,134,0.872,135,0.872,136,1.375,137,0.872,138,0.872,139,0.872,140,0.818,141,0.872,142,0.872,143,0.872,144,0.818,145,0.872,146,0.931,147,0.681,148,0.681,149,0.681,150,0.681,151,2.164,152,1.33,153,2.397,154,0.931,155,1.604,156,0.931,157,0.681,158,0.681,159,0.243,160,0.818,162,0.931,163,0.818,164,1.155,165,0.681,172,0.57,173,1.375,174,1.213,175,0.681,176,1.932,177,0.872,178,0.872,179,0.642,180,0.872,181,0.681,182,0.872,183,0.872,184,1.423,185,0.872,186,0.681,187,0.872,188,0.681,189,0.872,190,0.642,191,0.872,192,0.872,193,0.642,194,0.818,195,0.872,196,0.681,197,0.818,198,0.872,199,0.681,200,0.872,201,0.872,202,0.818,203,0.642,204,0.818,205,0.872,246,1.155,252,2.397,290,1.52,302,2.397,305,1.372,306,1.155,307,1.254,316,0.872,327,1.155,328,0.872,354,1.372,368,0.997,412,1.372,459,2.447,462,2.164,489,1.155,513,2.711,523,1.946,524,1.254,525,1.254,532,3.309,533,3.516,544,1.372,576,1.719,604,3.041,620,2.164,637,1.52,785,1.719,791,1.719,792,6.136,793,3.945,794,3.186,795,3.186,796,3.186,797,3.81,798,4.478,799,3.369,800,1.719,801,3.356,802,3.309,803,3.186,804,1.719,805,2.02,806,3.186,807,4.405,808,3.81,809,2.02,810,2.968,811,2.711,812,3.81,813,3.186,814,2.02,815,2.02,816,2.711,817,2.02,818,2.02,819,1.719,820,2.02,821,2.397,822,1.719,823,2.02,824,1.52,825,2.02,826,1.719,827,2.02,828,2.02,829,2.02,830,2.02,831,2.02,832,2.02,833,3.945,834,2.02,835,2.02,836,1.719,837,2.02,838,1.719,839,2.02,840,2.02,841,2.02,842,3.186,843,5.419,844,2.02,845,2.02,846,2.02,847,1.719,848,2.02,849,2.02,850,2.02,851,2.02,852,2.02,853,2.02,854,2.02,855,2.02,856,2.02,857,2.02,858,2.02,859,2.02,860,2.02,861,2.02,862,2.02,863,2.02,864,2.02,865,2.02,866,3.186,867,2.397,868,3.369,869,3.186,870,3.186,871,3.186,872,2.397,873,2.711,874,1.719,875,1.719,876,3.945,877,3.186,878,2.02,879,2.02,880,1.719,881,2.02,882,1.719]],["title/modules/MaterialModule.html",[206,0.927,477,2.162]],["body/modules/MaterialModule.html",[0,0.222,3,0.193,4,0.193,5,0.193,23,0.021,54,0.746,56,0.222,96,0.012,97,0.016,98,0.012,140,1.503,159,0.446,206,0.988,208,1.33,213,1.711,232,2.146,477,3.086,542,3.158,883,3.712,884,4.973,885,3.712,886,4.973,887,3.712,888,3.712,889,4.973,890,3.712,891,4.973,892,3.712,893,4.973,894,3.712,895,4.973,896,3.712,897,4.973,898,3.712,899,4.973,900,3.712,901,4.973,902,3.712,903,4.973,904,3.712,905,3.712,906,4.973,907,4.973,908,4.973,909,4.231,910,4.973,911,3.712,912,4.973,913,3.712,914,4.973,915,3.712,916,4.973,917,3.712,918,4.973,919,3.712,920,4.973,921,3.712,922,4.973,923,3.712,924,4.973,925,3.712,926,4.973,927,3.712,928,3.712,929,4.973,930,3.712,931,4.973,932,3.712,933,4.973,934,3.712,935,4.973,936,3.712,937,4.973,938,4.973,939,3.712,940,4.973,941,3.712,942,4.973,943,4.973,944,4.973,945,4.973,946,3.712,947,4.973,948,3.712,949,4.973,950,3.712,951,4.973,952,3.712,953,4.973,954,3.712,955,4.973,956,3.712,957,4.973,958,3.712,959,4.973,960,3.712,961,4.973,962,3.712,963,4.973,964,3.712,965,4.973,966,3.712,967,4.973,968,3.712,969,4.973,970,3.712,971,3.158]],["title/components/MessagesComponent.html",[79,0.524,186,1.175]],["body/components/MessagesComponent.html",[0,0.206,1,1.527,2,1.036,3,0.18,4,0.117,5,0.117,8,0.506,9,0.722,10,1.099,11,1.099,12,1.627,13,0.816,14,1.099,15,1.099,16,1.099,17,1.099,18,0.563,19,1.47,21,1.263,22,1.439,23,0.023,24,0.92,25,1.099,27,0.713,29,0.976,30,1.036,31,1.34,32,1.296,33,0.937,34,0.713,35,1.627,36,1.356,37,1.273,38,0.916,39,1.202,40,0.713,42,1.34,43,1.34,44,1.356,45,1.099,46,0.713,47,0.713,48,1.362,49,0.713,51,1.036,52,0.713,54,0.519,56,0.134,57,1.107,59,1.316,60,0.909,63,1.919,64,1.909,65,1.909,66,1.909,72,2.348,74,1.099,76,2.602,79,0.813,80,1.689,82,1.832,87,0.757,88,1.107,89,1.832,96,0.007,97,0.011,98,0.007,99,0.757,100,1.4,101,0.968,102,0.968,103,1.82,104,0.968,106,1.166,107,2.214,108,0.909,109,2.582,110,2.396,112,1.492,114,1.492,117,1.492,118,1.492,120,2.282,121,1.82,126,1.62,128,2.092,129,1.034,130,1.034,131,1.606,132,1.804,133,1.708,134,0.968,135,0.968,136,1.492,137,0.968,138,0.968,139,0.968,140,1.4,141,0.968,142,0.968,143,0.968,144,0.909,145,0.968,146,1.034,147,0.757,148,0.757,149,0.757,150,0.757,152,0.757,154,1.034,155,0.804,156,1.034,157,0.757,158,0.757,159,0.269,162,1.034,163,0.909,165,0.757,172,0.634,173,1.492,174,1.316,175,0.757,176,2.045,177,0.968,178,0.968,179,0.713,180,0.968,181,0.757,182,0.968,183,0.968,184,0.713,185,0.968,186,1.598,187,0.968,188,0.757,189,0.968,190,0.713,191,0.968,192,0.968,193,0.713,194,0.909,195,0.968,196,0.757,197,0.909,198,0.968,199,0.757,200,0.968,201,0.968,202,0.909,203,0.713,204,0.909,205,0.968,257,1.689,316,0.968,326,2.348,327,1.283,328,0.968,337,1.909,359,2.411,377,3.672,378,1.689,380,2.617,398,2.709,412,1.524,413,1.909,422,1.977,424,2.145,439,2.602,452,1.689,518,1.593,592,3.218,597,2.602,612,2.602,646,2.348,669,2.602,687,2.348,777,1.909,972,1.909,973,4.218,974,3.458,975,3.458,976,4.739,977,3.458,978,3.458,979,2.244,980,3.458,981,2.244,982,2.244,983,2.244,984,3.458,985,3.458,986,2.244,987,2.244,988,4.218,989,2.244,990,4.739,991,3.458,992,3.174,993,3.458,994,3.458,995,3.458,996,3.458,997,3.458,998,3.458,999,3.458,1000,1.909,1001,2.244,1002,2.244,1003,2.244,1004,2.244,1005,2.244,1006,2.244,1007,2.244,1008,2.244,1009,2.244,1010,2.244,1011,2.244,1012,2.244,1013,2.244,1014,2.244,1015,2.244,1016,2.244,1017,2.602,1018,2.244,1019,2.244,1020,2.244,1021,3.458,1022,4.739,1023,2.244,1024,2.244,1025,2.244,1026,4.218,1027,4.218,1028,3.174,1029,2.244,1030,2.244]],["title/injectables/MessagesService.html",[304,1.411,359,1.992]],["body/injectables/MessagesService.html",[0,0.15,1,1.741,3,0.235,4,0.131,5,0.131,8,0.303,9,0.789,10,1.2,11,1.2,12,1.439,13,0.892,14,1.2,15,1.2,16,1.2,17,1.2,18,1.136,19,1.477,21,1.357,22,1.434,23,0.024,24,1.205,25,1.599,27,0.801,29,1.066,30,1.131,31,1.439,32,1.35,33,1.522,34,0.801,35,2.053,36,1.575,37,1.312,38,0.991,39,1.396,40,0.801,42,1.439,43,1.439,44,1.47,45,0.801,46,0.801,47,0.801,48,1.205,49,0.801,51,1.131,52,0.801,54,0.547,55,1.161,56,0.15,57,1.243,74,1.2,79,0.568,82,3.108,87,1.697,96,0.008,97,0.012,98,0.008,106,1.274,111,1.335,126,1.614,128,1.908,133,1.529,147,0.85,148,0.85,149,0.85,150,0.85,157,0.85,158,0.85,159,0.303,165,0.85,304,1.529,308,1.564,359,2.159,367,2.842,377,4.707,398,3.646,401,3.408,403,2.144,422,3.448,452,1.896,457,1.564,592,2.565,593,2.565,868,2.842,1000,2.144,1031,2.144,1032,3.777,1033,3.777,1034,3.777,1035,5.031,1036,3.777,1037,3.777,1038,2.52,1039,4.813,1040,2.52,1041,2.52,1042,2.52,1043,3.777,1044,3.777,1045,3.777,1046,2.52,1047,2.52,1048,4.813,1049,4.539,1050,2.52,1051,2.52,1052,2.52,1053,2.52,1054,2.52,1055,2.52,1056,2.52,1057,2.52,1058,2.144,1059,2.52,1060,2.52,1061,2.52,1062,2.52,1063,2.52,1064,4.529,1065,2.52,1066,2.52,1067,2.52,1068,2.52,1069,2.52,1070,2.52,1071,2.52,1072,3.777,1073,2.52,1074,2.52,1075,2.52,1076,2.52,1077,2.52]],["title/injectables/MockDataService.html",[304,1.411,802,2.366]],["body/injectables/MockDataService.html",[0,0.212,1,1.892,3,0.185,4,0.185,5,0.285,8,0.427,9,1.01,10,1.536,11,1.536,12,1.745,13,1.142,14,1.536,15,1.536,16,1.536,17,1.536,18,0.893,19,1.489,21,1.644,22,1.638,23,0.023,24,1.287,25,1.131,27,1.131,29,1.005,30,1.448,31,1.745,32,1.327,33,1.308,34,1.131,35,1.745,36,1.544,37,1.286,38,0.954,39,1.368,40,1.131,42,1.745,43,1.745,44,1.629,45,1.131,46,1.131,47,1.131,48,1.461,49,1.131,51,1.448,52,1.131,54,0.598,56,0.212,57,1.756,69,2.209,73,2.418,87,1.201,96,0.011,97,0.015,98,0.011,106,1.631,111,1.886,128,2.142,147,1.201,148,1.201,149,1.201,150,1.201,157,1.201,158,1.201,159,0.427,163,1.442,165,1.201,246,2.035,304,1.958,308,2.209,327,2.035,328,1.536,341,2.209,354,3.728,368,1.756,457,2.209,802,3.283,810,2.679,811,3.029,824,4.431,1058,3.029,1078,5.01,1079,3.029,1080,4.835,1081,5.889,1082,3.56,1083,4.835,1084,3.56,1085,3.56,1086,3.56,1087,3.56,1088,3.56,1089,3.56,1090,3.56,1091,3.56,1092,3.56]],["title/components/NameWeightCardComponent.html",[79,0.524,188,1.175]],["body/components/NameWeightCardComponent.html",[0,0.217,1,1.568,2,1.091,3,0.125,4,0.125,5,0.125,6,1.036,8,0.288,9,0.761,10,1.157,11,1.157,12,1.677,13,0.86,14,1.157,15,1.157,16,1.157,17,1.157,18,1.103,19,1.504,21,1.318,22,1.404,23,0.023,24,0.969,25,1.157,27,0.763,29,0.678,30,1.091,31,1.398,32,1.296,33,1.172,34,0.763,35,1.398,36,1.231,37,1.414,38,0.948,39,1.091,40,0.763,42,1.398,43,1.398,44,1.392,45,0.763,46,0.763,47,0.763,48,1.306,49,0.763,51,1.091,52,0.763,54,0.37,56,0.143,59,0.914,60,0.973,63,1.781,74,0.763,79,0.661,86,1.373,96,0.008,97,0.012,98,0.008,99,0.81,100,1.475,101,1.036,102,1.036,103,1.036,104,1.036,106,1.228,107,2.262,108,0.973,109,2.619,110,2.433,112,1.572,114,1.572,117,1.572,118,1.572,120,2.337,121,1.898,126,1.663,128,2.127,129,1.107,130,1.107,131,1.674,132,0.914,133,0.973,134,1.036,135,1.036,136,1.572,137,1.036,138,1.036,139,1.036,140,0.973,141,1.036,142,1.036,143,1.036,144,0.973,145,1.036,146,1.107,147,0.81,148,0.81,149,0.81,150,0.81,152,2.371,154,1.107,155,0.86,156,1.107,157,0.81,158,0.81,159,0.288,162,1.107,165,0.81,169,1.807,170,1.631,172,0.678,173,1.572,174,1.386,175,0.81,176,2.119,177,1.036,178,1.036,179,0.763,180,1.036,181,0.81,182,1.036,183,1.036,184,0.763,185,1.036,186,0.81,187,1.036,188,1.656,189,1.036,190,0.763,191,1.036,192,1.036,193,0.763,194,0.973,195,1.036,196,0.81,197,0.973,198,1.036,199,0.81,200,1.036,201,1.036,202,0.973,203,0.763,204,0.973,205,1.036,316,1.036,416,3.098,440,2.043,503,4.58,514,3.098,518,1.678,520,2.601,532,1.631,533,2.987,536,2.043,537,2.043,538,2.043,539,2.043,540,2.043,541,2.043,544,1.631,604,2.473,613,2.043,614,1.807,646,2.473,687,3.583,872,1.807,873,2.043,874,2.043,875,2.043,880,2.043,1049,2.74,1093,5.178,1094,2.043,1095,4.399,1096,3.642,1097,4.909,1098,3.098,1099,3.642,1100,2.401,1101,2.401,1102,2.401,1103,2.401,1104,3.743,1105,2.401,1106,2.401,1107,3.098,1108,2.401,1109,2.401,1110,2.401,1111,2.401,1112,3.642,1113,3.642,1114,2.401,1115,2.401,1116,2.401,1117,2.401,1118,2.401]],["title/directives/NumbersonlyDirective.html",[175,1.175,203,1.107]],["body/directives/NumbersonlyDirective.html",[0,0.234,3,0.204,4,0.204,5,0.204,8,0.471,13,1.218,18,1.445,19,1.36,22,1.533,23,0.023,30,1.726,32,1.204,36,1.445,37,1.204,38,0.866,39,1.413,54,0.523,56,0.234,82,2.078,86,2.242,87,2.065,96,0.013,97,0.016,98,0.013,108,1.588,109,2.089,126,1.834,159,0.471,175,1.739,202,1.588,203,1.831,204,2.089,212,2.544,309,2.948,460,4.903,489,2.242,518,2.376,649,3.336,710,2.951,711,2.951,799,4.786,821,4.336,1119,3.336,1120,5.763,1121,3.922,1122,5.157,1123,3.922,1124,5.157,1125,5.157,1126,5.157,1127,3.922,1128,3.922,1129,3.922,1130,3.922,1131,3.922,1132,5.157,1133,3.922,1134,5.763,1135,3.922,1136,3.922,1137,5.157,1138,5.157,1139,3.922,1140,3.922,1141,3.922,1142,3.922,1143,3.922,1144,3.922,1145,3.922,1146,3.922,1147,3.922,1148,3.922,1149,3.922,1150,3.922,1151,3.922,1152,3.336,1153,3.922,1154,3.922,1155,3.336,1156,3.336,1157,3.922]],["title/components/PageNotFoundComponent.html",[79,0.524,190,1.107]],["body/components/PageNotFoundComponent.html",[0,0.238,3,0.207,4,0.207,5,0.207,8,0.479,13,1.231,18,1.457,19,1.159,23,0.023,32,0.833,37,1.287,54,0.405,56,0.238,79,0.873,96,0.013,97,0.017,98,0.013,99,1.345,100,2.112,101,1.721,102,1.721,103,1.721,104,1.721,108,1.615,109,2.855,110,2.669,112,2.251,114,2.251,120,2.496,126,1.562,152,1.345,159,0.479,172,1.126,173,2.251,174,1.985,175,1.345,176,2.66,177,1.721,178,1.721,179,1.268,180,1.721,181,1.345,182,1.721,183,1.721,184,1.268,185,1.721,186,1.345,187,1.721,188,1.345,189,1.721,190,1.958,191,2.985,192,1.721,193,1.268,194,1.615,195,1.721,196,1.345,197,1.615,198,1.721,199,1.345,200,1.721,201,1.721,202,1.615,203,1.268,204,1.615,205,1.721,277,3.946,309,2.981,316,2.508,1017,4.637,1158,4.944,1159,3.394,1160,5.811,1161,5.215,1162,3.989,1163,3.989,1164,5.215]],["title/injectables/PersonDetailsService.html",[304,1.411,1165,2.366]],["body/injectables/PersonDetailsService.html",[0,0.125,1,1.484,2,1.21,3,0.109,4,0.109,5,0.109,6,0.904,8,0.252,9,0.685,10,1.968,11,1.452,12,1.671,13,0.774,14,1.452,15,1.452,16,1.452,17,1.452,18,1.013,19,1.521,21,1.646,22,1.648,23,0.023,24,1.216,25,1.042,27,1.042,29,0.926,30,1.703,31,1.671,32,1.384,33,1.299,34,1.042,35,1.671,36,1.61,37,1.341,38,1.002,39,1.427,40,1.042,42,1.671,43,1.671,44,1.625,45,1.042,46,1.042,47,1.042,48,1.513,49,1.042,51,1.646,52,1.042,54,0.577,55,0.966,56,0.125,69,2.506,74,1.671,82,1.737,87,1.972,88,1.034,96,0.007,97,0.01,98,0.007,106,1.106,111,1.11,126,0.628,128,2.272,131,1.537,147,0.707,148,0.707,149,0.707,150,0.707,157,0.707,158,0.707,159,0.252,165,0.707,246,1.198,304,1.328,308,1.3,327,1.198,328,0.904,341,4.111,343,2.789,344,2.789,345,2.789,346,2.789,347,3.436,348,2.789,349,2.789,350,2.789,351,2.789,352,2.789,354,2.226,356,1.783,357,1.783,358,1.783,359,1.198,361,1.783,364,1.783,365,2.467,367,1.577,368,2.594,369,4.473,370,1.423,371,1.783,372,3.528,373,2.467,374,2.309,376,1.783,377,2.226,378,1.577,379,1.577,380,1.3,381,1.783,382,1.783,384,4.219,385,3.436,386,1.783,388,1.783,389,1.783,391,1.783,393,1.3,395,1.577,457,1.3,518,1.511,520,2.42,523,2.805,525,1.3,710,1.577,812,2.789,867,2.467,992,1.577,1165,2.226,1166,3.731,1167,1.783,1168,4.039,1169,3.279,1170,3.279,1171,2.095,1172,2.095,1173,2.095,1174,2.095,1175,3.279,1176,2.095,1177,2.095,1178,2.789,1179,2.095,1180,2.095,1181,2.095,1182,2.095,1183,2.095,1184,2.095,1185,2.095,1186,2.095,1187,2.095,1188,2.095,1189,2.095,1190,2.095,1191,2.095,1192,2.095,1193,2.095,1194,2.095,1195,1.783,1196,1.783,1197,1.783,1198,2.095,1199,2.095,1200,2.095,1201,2.095,1202,3.279,1203,4.039,1204,4.039,1205,4.039,1206,2.095,1207,2.095,1208,2.095,1209,2.095,1210,2.095,1211,2.095,1212,2.095]],["title/components/PersonalDashboardComponent.html",[79,0.524,193,1.107]],["body/components/PersonalDashboardComponent.html",[0,0.211,1,1.545,2,1.06,3,0.12,4,0.12,5,0.12,6,0.998,8,0.278,9,0.739,10,1.125,11,1.125,12,1.649,13,0.836,14,1.125,15,1.125,16,1.125,17,1.125,18,0.58,19,1.496,21,1.06,22,1.281,23,0.023,24,1.144,25,1.125,27,0.735,29,0.653,30,1.06,31,1.366,32,1.324,33,0.955,34,0.735,35,1.366,36,1.372,37,1.284,38,0.939,39,1.216,40,0.735,42,1.366,43,1.366,44,1.473,45,0.735,46,0.735,47,0.735,48,1.281,49,0.735,51,1.06,52,0.735,54,0.596,55,1.066,56,0.138,59,0.881,60,0.937,63,1.741,73,1.571,74,1.366,79,0.646,87,1.194,96,0.007,97,0.011,98,0.007,99,0.78,100,1.434,101,0.998,102,0.998,103,0.998,104,0.998,106,1.194,107,2.236,108,0.937,109,2.599,110,2.413,112,1.528,114,1.528,117,1.528,118,1.528,120,2.307,121,1.855,123,2.967,126,1.706,128,2.108,129,1.066,130,1.066,131,1.636,132,0.881,133,0.937,134,0.998,135,0.998,136,1.528,137,0.998,138,0.998,139,0.998,140,0.937,141,0.998,142,0.998,143,0.998,144,0.937,145,0.998,146,1.066,147,0.78,148,0.78,149,0.78,150,0.78,152,0.78,154,1.066,155,0.829,156,1.066,157,0.78,158,0.78,159,0.278,160,0.937,162,1.066,163,0.937,164,1.323,165,0.78,167,1.968,172,0.653,173,1.528,174,1.347,175,0.78,176,2.078,177,0.998,178,0.998,179,0.735,180,0.998,181,0.78,182,0.998,183,0.998,184,0.735,185,0.998,186,0.78,187,0.998,188,0.78,189,0.998,190,0.735,191,0.998,192,0.998,193,1.53,194,2.379,195,0.998,196,0.78,197,0.937,198,0.998,199,0.78,200,0.998,201,0.998,202,0.937,203,0.735,204,0.937,205,0.998,286,3.736,316,0.998,328,0.998,459,2.196,518,1.066,520,1.876,523,2.56,524,1.435,525,1.435,535,2.404,587,1.968,605,1.876,606,1.571,622,1.741,810,2.664,847,1.968,1165,3.524,1166,1.741,1213,4.089,1214,5.123,1215,1.968,1216,2.664,1217,4.299,1218,3.54,1219,3.54,1220,3.54,1221,3.012,1222,3.012,1223,4.299,1224,4.816,1225,2.314,1226,4.816,1227,2.314,1228,2.314,1229,2.314,1230,2.314,1231,2.314,1232,3.54,1233,3.54,1234,3.54,1235,2.314,1236,2.314,1237,2.314,1238,2.314,1239,2.314,1240,2.314,1241,2.314,1242,2.314,1243,2.314,1244,1.968,1245,2.314,1246,2.314,1247,2.314,1248,2.314,1249,2.314,1250,2.314,1251,2.314,1252,2.314,1253,3.54,1254,2.314,1255,2.314,1256,2.314,1257,2.314,1258,2.314,1259,2.314,1260,2.314,1261,2.314,1262,2.314,1263,2.314]],["title/modules/PersonalDashboardModule.html",[206,0.927,1264,2.366]],["body/modules/PersonalDashboardModule.html",[0,0.265,3,0.231,4,0.231,5,0.231,23,0.023,54,0.685,56,0.265,96,0.014,97,0.018,98,0.014,159,0.533,172,1.253,193,2.144,194,1.797,206,1.181,208,1.59,209,2.045,210,3.238,211,2.352,212,2.189,213,2.045,220,3.109,221,3.575,224,2.959,225,2.352,226,2.189,228,2.959,232,2.41,249,3.34,286,3.465,479,3.465,480,2.352,553,3.776,554,3.776,1213,3.014,1216,3.34,1264,4.833,1265,3.776,1266,3.776,1267,3.776,1268,4.186,1269,4.438,1270,3.776,1271,3.776]],["title/modules/PersonalDashboardRoutingModule.html",[206,0.927,1268,2.162]],["body/modules/PersonalDashboardRoutingModule.html",[0,0.297,3,0.259,4,0.259,5,0.259,23,0.023,54,0.677,56,0.297,79,0.748,96,0.016,97,0.019,98,0.016,159,0.598,160,2.016,193,1.905,208,1.783,232,2.587,272,3.746,273,3.426,274,3.38,279,3.38,280,3.38,286,3.719,294,3.719,296,3.38,297,3.38,299,3.746,520,2.638,556,4.235,557,4.235,558,4.235,559,4.235,1213,3.38,1216,3.746,1268,3.719,1270,4.235,1271,4.235]],["title/components/ProfileFormComponent.html",[79,0.524,196,1.175]],["body/components/ProfileFormComponent.html",[0,0.153,1,1.291,2,0.767,3,0.08,4,0.08,5,0.171,6,0.666,8,0.185,9,0.535,10,0.814,11,0.814,12,1.348,13,0.605,14,0.814,15,0.814,16,0.814,17,0.814,18,0.387,19,1.482,21,1.145,22,1.289,23,0.023,24,0.874,25,0.814,27,0.491,29,0.436,30,1.145,31,1.044,32,1.318,33,0.942,34,0.491,35,1.215,36,1.272,37,1.266,38,0.886,39,1.127,40,0.491,42,1.044,43,1.215,44,1.427,45,0.491,46,0.491,47,0.491,48,1.289,49,0.491,51,1.519,52,0.491,54,0.534,56,0.092,58,1.928,59,0.588,60,0.625,63,1.33,72,1.74,74,0.491,79,0.494,82,0.818,87,0.864,88,1.264,89,1.358,96,0.005,97,0.008,98,0.005,99,0.521,100,1.038,101,0.666,102,0.666,103,0.666,104,0.666,106,0.864,107,1.931,108,0.625,109,2.349,110,2.166,112,1.106,114,1.106,117,1.106,118,1.106,120,1.963,121,1.418,126,1.737,128,1.878,129,0.711,130,0.711,131,1.25,132,0.588,133,0.625,134,0.666,135,0.666,136,1.106,137,0.666,138,0.666,139,0.666,140,0.625,141,0.666,142,0.666,143,1.106,144,0.625,145,0.666,146,0.711,147,0.521,148,0.521,149,0.521,150,0.521,152,1.634,154,0.711,155,0.553,156,0.711,157,0.521,158,0.521,159,0.185,162,0.711,163,0.625,165,0.521,170,1.048,172,0.436,173,1.106,174,0.975,175,0.521,176,1.65,177,0.666,178,0.666,179,0.491,180,0.666,181,0.521,182,0.666,183,0.666,184,0.491,185,0.666,186,0.521,187,0.666,188,0.521,189,0.666,190,0.491,191,0.666,192,0.666,193,0.491,194,0.625,195,0.666,196,1.29,197,2.305,198,0.666,199,0.521,200,0.666,201,0.666,202,0.625,203,0.814,204,0.625,205,0.666,230,1.162,231,0.958,252,1.928,279,1.048,290,1.162,309,1.465,316,0.666,328,0.666,368,1.264,370,2.231,379,2.877,380,1.59,424,0.958,459,1.59,462,1.74,480,0.818,489,0.883,498,3.608,500,4.747,523,1.264,525,0.958,532,1.74,533,1.048,535,1.048,598,3.608,600,3.253,601,2.18,602,1.313,603,1.74,605,1.74,606,1.048,608,1.313,637,1.162,646,1.74,669,1.928,675,1.313,687,2.231,697,1.313,716,2.18,769,2.18,797,2.795,799,2.877,800,1.313,801,2.795,804,1.313,807,4.842,808,2.18,816,3.608,819,1.313,821,1.162,822,1.313,836,1.313,838,1.313,868,3.442,872,1.162,909,2.18,992,1.928,1028,1.162,1049,1.162,1098,2.18,1104,2.795,1107,2.18,1155,3.253,1156,3.253,1178,3.253,1195,1.313,1221,2.18,1222,2.18,1244,1.313,1272,5.367,1273,1.313,1274,3.285,1275,2.562,1276,2.562,1277,2.562,1278,2.562,1279,3.824,1280,3.824,1281,2.562,1282,3.824,1283,2.562,1284,3.824,1285,3.824,1286,5.263,1287,4.241,1288,2.562,1289,3.285,1290,2.562,1291,5.801,1292,5.263,1293,1.544,1294,2.562,1295,1.544,1296,1.544,1297,2.18,1298,4.574,1299,4.315,1300,1.544,1301,3.285,1302,2.562,1303,2.562,1304,1.544,1305,2.562,1306,2.562,1307,3.285,1308,1.544,1309,1.544,1310,2.562,1311,1.544,1312,1.544,1313,2.562,1314,1.544,1315,2.562,1316,3.285,1317,2.562,1318,1.544,1319,1.544,1320,1.544,1321,1.544,1322,1.544,1323,1.544,1324,1.544,1325,2.562,1326,1.544,1327,3.285,1328,1.544,1329,1.544,1330,1.544,1331,1.544,1332,1.544,1333,1.544,1334,1.544,1335,1.544,1336,1.544,1337,1.544,1338,1.544,1339,1.544,1340,1.544,1341,1.544,1342,1.544,1343,1.544,1344,1.544,1345,1.544,1346,1.544,1347,1.544,1348,1.544,1349,1.544,1350,1.544,1351,1.544,1352,4.241,1353,1.544,1354,1.544,1355,1.544,1356,1.544,1357,1.544,1358,1.544,1359,1.544,1360,1.544,1361,1.544,1362,1.544,1363,1.544,1364,1.544,1365,1.544,1366,1.544,1367,1.544,1368,2.562,1369,1.544,1370,1.544,1371,1.544,1372,1.544,1373,1.544,1374,1.544,1375,1.544,1376,1.544,1377,1.544,1378,1.544,1379,1.544,1380,1.544,1381,2.562,1382,1.544,1383,1.544,1384,1.544,1385,1.544,1386,1.544,1387,1.544,1388,1.544,1389,1.544,1390,1.544,1391,1.544,1392,1.544,1393,1.544,1394,1.544,1395,1.544,1396,1.544,1397,1.544,1398,1.544,1399,1.544,1400,1.544,1401,1.544,1402,1.544,1403,2.562,1404,1.544,1405,2.562,1406,1.544,1407,1.544,1408,1.544,1409,1.544,1410,1.544,1411,1.544,1412,1.544,1413,2.562,1414,2.18,1415,1.544,1416,1.544,1417,1.544,1418,1.544,1419,1.544,1420,1.544]],["title/interfaces/ServiceRequest.html",[372,2.162,588,1.248]],["body/interfaces/ServiceRequest.html",[0,0.3,3,0.261,4,0.261,5,0.261,8,0.603,9,1.259,23,0.022,33,1.339,38,0.971,44,1.679,48,1.604,56,0.3,96,0.016,97,0.019,98,0.016,257,3.782,365,4.86,368,2.479,370,4.547,372,3.74,393,3.118,588,1.8,589,2.663,592,3.413,1297,4.276,1421,4.276,1422,5.129,1423,5.026,1424,5.026,1425,5.026,1426,5.026,1427,4.276,1428,5.026,1429,5.026]],["title/interfaces/ServiceResponse.html",[374,1.992,588,1.248]],["body/interfaces/ServiceResponse.html",[3,0.322,4,0.238,5,0.238,8,0.549,9,1.189,23,0.023,32,1.189,33,1.588,38,1.002,44,1.553,48,1.515,56,0.273,88,2.257,89,2.424,96,0.015,97,0.018,98,0.015,368,3.056,374,3.254,393,2.838,422,3.254,588,1.638,589,2.424,593,4.403,711,4.283,1039,3.892,1422,4.842,1427,3.892,1430,3.892,1431,6.196,1432,6.196,1433,6.196,1434,4.575,1435,4.575,1436,4.575,1437,4.575,1438,4.575,1439,6.196,1440,4.575,1441,4.575,1442,4.575,1443,4.575]],["title/modules/SharedModule.html",[206,0.927,222,1.992]],["body/modules/SharedModule.html",[0,0.277,3,0.241,4,0.241,5,0.241,23,0.023,54,0.661,56,0.277,96,0.015,97,0.018,98,0.015,159,0.556,172,1.309,203,2.275,206,1.233,208,1.66,209,2.136,210,3.303,211,2.456,212,2.287,213,2.872,220,3.143,222,4.026,224,3.041,225,2.456,226,2.287,228,3.041,232,2.477,237,3.488,479,3.561,480,2.456,1444,3.944,1445,3.944,1446,4.635,1447,3.944,1448,4.635,1449,4.635]],["title/components/TopToolbarComponent.html",[79,0.524,199,1.175]],["body/components/TopToolbarComponent.html",[0,0.234,1,1.627,2,1.175,3,0.138,4,0.138,5,0.138,8,0.318,9,0.819,10,1.246,11,1.246,12,1.749,13,0.926,14,1.246,15,1.246,16,1.246,17,1.246,18,0.665,19,1.479,21,1.175,22,1.372,23,0.023,24,1.044,25,1.246,27,0.843,29,0.749,30,1.175,31,1.483,32,1.329,33,1.037,34,0.843,35,1.483,36,1.38,37,1.306,38,0.896,39,1.223,40,0.843,42,1.483,43,1.483,44,1.445,45,0.843,46,0.843,47,0.843,48,1.372,49,0.843,51,1.175,52,0.843,54,0.559,56,0.158,57,1.308,59,1.009,60,1.074,63,1.89,74,0.843,79,0.701,86,1.516,96,0.008,97,0.013,98,0.008,99,0.894,100,1.588,101,1.144,102,1.144,103,1.144,104,1.144,106,1.323,107,2.33,108,1.074,109,2.672,110,2.485,112,1.693,114,1.693,116,1.801,117,1.693,118,1.693,120,2.415,121,2.014,122,1.995,123,2.949,126,1.726,128,2.176,129,1.222,130,1.222,131,1.777,132,1.009,133,1.074,134,1.144,135,1.144,136,1.693,137,1.144,138,1.144,139,1.144,140,1.074,141,1.144,142,1.144,143,1.144,144,1.074,145,1.144,146,1.222,147,0.894,148,0.894,149,0.894,150,0.894,151,2.663,152,1.574,153,2.951,154,1.222,155,1.405,156,1.222,157,0.894,158,0.894,159,0.318,160,1.074,162,1.222,163,1.074,164,1.516,165,0.894,166,2.256,172,0.749,173,1.693,174,1.493,175,0.894,176,2.226,177,1.144,178,1.144,179,0.843,180,1.144,181,0.894,182,1.144,183,1.144,184,0.843,185,1.144,186,0.894,187,1.144,188,0.894,189,1.144,190,0.843,191,1.144,192,1.144,193,0.843,194,1.074,195,1.144,196,0.894,197,1.074,198,1.144,199,1.74,200,2.642,201,2.014,202,1.074,203,0.843,204,1.074,205,1.144,305,1.801,306,1.516,307,1.645,312,2.256,316,1.144,326,1.801,327,1.516,328,1.144,482,3.881,544,2.663,578,1.995,781,2.256,882,2.256,1450,4.388,1451,2.256,1452,4.668,1453,3.922,1454,5.763,1455,2.652,1456,2.652,1457,2.652,1458,2.652,1459,2.652,1460,3.922,1461,2.652,1462,2.652,1463,2.652,1464,2.652,1465,2.652,1466,2.652]],["title/coverage.html",[1467,4.053]],["body/coverage.html",[0,0.348,1,0.983,5,0.181,6,2.343,7,2.963,23,0.023,24,0.927,38,0.523,79,1.014,86,3.996,96,0.011,97,0.015,98,0.011,99,1.175,105,2.963,107,1.326,152,1.606,155,1.247,175,1.175,179,1.107,181,1.175,184,1.107,186,1.175,188,1.175,190,1.107,193,1.107,196,1.175,199,1.175,203,1.107,223,2.161,240,1.991,242,2.161,259,2.621,260,2.963,277,2.365,286,2.161,293,2.621,294,2.161,296,2.365,297,2.365,298,2.963,304,2.475,306,1.991,315,2.963,324,2.963,325,2.365,341,2.161,342,2.963,359,1.991,372,2.161,374,1.991,393,2.955,398,1.991,458,2.963,482,2.621,500,2.621,503,2.621,506,2.621,510,2.963,523,1.718,524,2.161,560,2.963,562,2.963,563,2.963,588,2.259,590,2.963,597,2.621,599,2.963,605,1.846,620,2.365,621,2.963,622,2.621,623,2.963,626,2.963,627,2.963,674,2.963,679,4.052,791,2.963,802,2.365,824,2.621,972,2.963,1028,4.391,1031,2.963,1078,2.963,1079,2.963,1093,2.963,1094,2.963,1119,2.963,1158,2.963,1159,2.963,1165,2.365,1166,2.621,1167,2.963,1213,2.365,1214,2.963,1215,2.963,1272,2.963,1273,2.963,1421,2.963,1430,2.963,1450,2.963,1451,2.963,1467,2.963,1468,3.483,1469,3.483,1470,5.836,1471,4.763,1472,3.483,1473,3.483,1474,3.483,1475,3.483,1476,3.483,1477,5.428,1478,3.483,1479,4.763,1480,3.483,1481,3.483,1482,5.428,1483,3.483,1484,4.763,1485,3.483,1486,3.483,1487,3.483,1488,3.483,1489,3.483,1490,3.483,1491,3.483,1492,5.428,1493,4.763,1494,3.483,1495,3.483,1496,3.483,1497,3.483,1498,3.483,1499,3.483,1500,2.963,1501,4.052,1502,5.836,1503,2.963,1504,4.052,1505,2.963,1506,2.963,1507,3.483,1508,3.483]],["title/dependencies.html",[209,1.932,1509,2.905]],["body/dependencies.html",[23,0.023,55,2.288,96,0.016,97,0.019,98,0.016,159,0.596,160,2.011,174,1.89,209,2.288,230,4.504,231,3.714,480,2.631,489,2.839,689,4.225,1510,4.966,1511,7.074,1512,4.966,1513,4.966,1514,4.225,1515,4.966,1516,4.966,1517,4.966,1518,4.966,1519,4.966,1520,4.966,1521,4.966,1522,4.966,1523,4.966,1524,4.966,1525,4.966,1526,4.966,1527,4.966,1528,4.966]],["title/miscellaneous/enumerations.html",[1529,1.973,1530,3.567]],["body/miscellaneous/enumerations.html",[3,0.3,8,0.563,22,1.907,23,0.023,29,1.323,96,0.015,97,0.018,98,0.015,197,1.898,368,2.85,401,4.348,402,3.988,404,4.916,422,3.581,593,3.183,826,4.916,867,3.527,1017,3.527,1196,4.916,1197,3.988,1414,3.988,1529,3.183,1530,3.988,1531,4.688,1532,4.688,1533,5.778,1534,4.688,1535,5.778,1536,4.688,1537,5.778,1538,4.688,1539,4.688,1540,4.688,1541,4.688,1542,4.688,1543,4.688,1544,4.688,1545,4.688,1546,4.688,1547,4.688,1548,4.688,1549,4.688,1550,4.688,1551,4.688,1552,4.688,1553,5.778,1554,5.778]],["title/index.html",[8,0.349,1555,2.905,1556,2.905]],["body/index.html",[4,0.237,23,0.018,24,1.212,29,1.286,37,0.951,72,3.855,79,0.929,96,0.015,97,0.018,98,0.015,110,1.734,132,2.354,151,4.677,226,2.247,266,3.875,380,2.826,758,5.507,971,5.261,1048,5.667,1299,3.875,1514,3.875,1557,4.555,1558,5.676,1559,4.555,1560,6.184,1561,4.555,1562,4.555,1563,5.676,1564,6.66,1565,4.555,1566,4.555,1567,4.555,1568,4.555,1569,4.555,1570,4.555,1571,4.555,1572,4.555,1573,4.555,1574,6.184,1575,4.555,1576,4.555,1577,4.555,1578,4.555,1579,4.555,1580,4.555,1581,3.875,1582,5.676,1583,5.676,1584,6.473,1585,4.555,1586,5.676,1587,4.555,1588,4.555,1589,4.555,1590,6.184,1591,4.555,1592,4.555,1593,4.555]],["title/modules.html",[208,1.706]],["body/modules.html",[23,0.019,96,0.016,97,0.019,98,0.016,207,3.43,208,1.809,219,3.133,220,2.327,221,2.676,222,2.887,231,4.319,477,3.133,546,3.43,550,3.133,636,5.922,1264,3.43,1268,3.133,1594,6.961,1595,7.178,1596,6.707,1597,6.707]],["title/overview.html",[1598,4.053]],["body/overview.html",[2,1.023,23,0.023,96,0.011,97,0.015,98,0.011,99,2.167,100,1.383,172,0.964,175,1.152,179,1.707,181,2.167,184,2.042,186,1.812,188,2.167,190,1.707,193,1.707,196,2.167,199,2.167,203,2.042,206,0.909,207,4.734,208,1.223,209,1.574,210,1.809,211,1.809,212,1.684,213,1.574,214,2.905,215,2.905,216,2.905,217,2.905,218,2.905,219,3.333,220,3.273,221,3.74,222,3.797,223,3.333,224,2.49,225,1.809,226,1.684,273,1.952,293,2.57,457,2.119,473,2.905,474,2.905,475,2.905,476,2.905,477,3.986,493,2.905,494,2.905,496,2.905,546,4.564,547,2.905,548,2.905,549,2.905,550,3.333,578,3.536,589,1.809,1152,2.905,1264,4.564,1265,2.905,1266,2.905,1267,2.905,1268,3.333,1444,2.905,1445,2.905,1447,2.905,1598,2.905,1599,4.699,1600,3.415,1601,3.415,1602,3.415]],["title/routes.html",[273,2.723]],["body/routes.html",[23,0.021,96,0.018,97,0.021,98,0.018,273,3.248]],["title/miscellaneous/variables.html",[1529,1.973,1603,3.567]],["body/miscellaneous/variables.html",[8,0.605,21,1.936,22,1.72,23,0.023,38,1.007,51,1.808,88,2.978,89,2.669,96,0.016,97,0.019,98,0.016,1500,4.286,1501,5.702,1503,4.286,1504,4.286,1505,5.136,1506,5.136,1529,3.421,1581,5.136,1603,4.286,1604,6.037,1605,5.038,1606,5.038,1607,5.038,1608,5.038,1609,5.038]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LineChartComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1024,"title":{},"body":{"components/MessagesComponent.html":{}}}],["0.5px",{"_index":788,"title":{},"body":{"components/LineChartComponent.html":{}}}],["0/1",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":784,"title":{},"body":{"components/LineChartComponent.html":{}}}],["1",{"_index":578,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["1.25.0",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["1.5px",{"_index":790,"title":{},"body":{"components/LineChartComponent.html":{}}}],["1.7.2",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1599,"title":{},"body":{"overview.html":{}}}],["11/16",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["12/32",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["13/29",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["16/27",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["2.4.1",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":674,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["23/37",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":677,"title":{},"body":{"components/LineChartComponent.html":{}}}],["35",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1601,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1600,"title":{},"body":{"overview.html":{}}}],["5.15.0",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":679,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["500",{"_index":705,"title":{},"body":{"components/LineChartComponent.html":{}}}],["50em",{"_index":755,"title":{},"body":{"components/LineChartComponent.html":{}}}],["59",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1602,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["6/16",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["6/17",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":753,"title":{},"body":{"components/LineChartComponent.html":{}}}],["8/18",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["8/20",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1152,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"overview.html":{}}}],["9.0.0",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1514,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/18",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":751,"title":{},"body":{"components/LineChartComponent.html":{}}}],["900",{"_index":701,"title":{},"body":{"components/LineChartComponent.html":{}}}],["_destory",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_destroy",{"_index":11,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_destroy$=new",{"_index":81,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["_editprofilepic",{"_index":1276,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_editprofilepic:\"disabled\"|null=null",{"_index":1339,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_http",{"_index":343,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_http:httpclient",{"_index":406,"title":{},"body":{"classes/BaseService.html":{}}}],["_httpoptions",{"_index":344,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_httpoptions={headers:new",{"_index":409,"title":{},"body":{"classes/BaseService.html":{}}}],["_id",{"_index":1219,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_id:number",{"_index":1245,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_imgsrc",{"_index":1277,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_imgsrc:string",{"_index":1336,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_injector",{"_index":461,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["_injector:injector",{"_index":468,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["_invaliduser",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["_invaliduser:boolean=false",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["_isloggedin",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_isloggedin:boolean",{"_index":330,"title":{},"body":{"classes/BaseComponent.html":{}}}],["_iweights",{"_index":1220,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_iweights:iweighthistory",{"_index":1246,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["_jsonurl",{"_index":1080,"title":{},"body":{"injectables/MockDataService.html":{}}}],["_jsonurl='assets/data/users.json",{"_index":1090,"title":{},"body":{"injectables/MockDataService.html":{}}}],["_loginform",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["_loginform:formgroup",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["_messages",{"_index":978,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_messages:imessage",{"_index":1002,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_msgservice",{"_index":345,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_msgservice:messagesservice",{"_index":407,"title":{},"body":{"classes/BaseService.html":{}}}],["_msgsubject",{"_index":1032,"title":{},"body":{"injectables/MessagesService.html":{}}}],["_msgsubject$=new",{"_index":1059,"title":{},"body":{"injectables/MessagesService.html":{}}}],["_persondetails",{"_index":1221,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["_persondetails:ipersondetails",{"_index":1244,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["_profileform",{"_index":1278,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_profileform:formgroup",{"_index":1329,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["_rest_url",{"_index":346,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["_rest_url=\"/weightwatchers/api",{"_index":408,"title":{},"body":{"classes/BaseService.html":{}}}],["_showmsg",{"_index":975,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_showmsg:boolean=false",{"_index":1003,"title":{},"body":{"components/MessagesComponent.html":{}}}],["_storageservice",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["_storageservice:sessionstorageservice",{"_index":329,"title":{},"body":{"classes/BaseComponent.html":{}}}],["_users",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["_users$:observable",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["_users:ipersondetails",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["_weights",{"_index":633,"title":{},"body":{"components/LineChartComponent.html":{}}}],["_weights:iweighthistory",{"_index":698,"title":{},"body":{"components/LineChartComponent.html":{}}}],["a11ymodule",{"_index":884,"title":{},"body":{"modules/MaterialModule.html":{}}}],["absolute",{"_index":538,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["abstract",{"_index":57,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil",{"_index":1,"title":{"classes/AbstractBaseUtil.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["abstractbaseutil:10",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:21",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:31",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:41",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:55",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["abstractbaseutil:7",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["accessors",{"_index":462,"title":{},"body":{"injectables/CoreInjectorService.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["actions",{"_index":1418,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["activated",{"_index":1232,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["activatedroute",{"_index":1226,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["activatedroute:activatedroute",{"_index":1242,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["actual_component",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["add",{"_index":59,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["added",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["again",{"_index":997,"title":{},"body":{"components/MessagesComponent.html":{}}}],["age",{"_index":600,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["age:new",{"_index":1354,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["age:number",{"_index":615,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["alert",{"_index":1022,"title":{},"body":{"components/MessagesComponent.html":{}}}],["align",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["allowed",{"_index":1156,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{}}}],["allows",{"_index":990,"title":{},"body":{"components/MessagesComponent.html":{}}}],["allusers",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["already",{"_index":1346,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["always",{"_index":1306,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["anchor",{"_index":757,"title":{},"body":{"components/LineChartComponent.html":{}}}],["angular",{"_index":971,"title":{},"body":{"modules/MaterialModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":885,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":887,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":890,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":892,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":894,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":896,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":898,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":480,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseService.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["angular/compiler",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":489,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/LoginComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":900,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/badge",{"_index":902,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":904,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":907,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":911,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":913,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":915,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":939,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":919,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":921,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":923,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":925,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":927,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":930,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":932,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":934,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":936,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":941,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":943,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":948,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":950,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":952,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":956,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":954,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":958,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":960,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":917,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":962,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":964,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":966,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":968,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":970,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileFormComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/TopToolbarComponent.html":{},"dependencies.html":{}}}],["app",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["app.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":99,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append('g",{"_index":730,"title":{},"body":{"components/LineChartComponent.html":{}}}],["append('text",{"_index":749,"title":{},"body":{"components/LineChartComponent.html":{}}}],["appmodule",{"_index":207,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnumbersonly",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["apppage",{"_index":259,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":219,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":35,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["array.isarray(data",{"_index":84,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["artifacts",{"_index":1576,"title":{},"body":{"index.html":{}}}],["assets",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets/data/user.json",{"_index":1089,"title":{},"body":{"injectables/MockDataService.html":{}}}],["assets/data/users.json",{"_index":1086,"title":{},"body":{"injectables/MockDataService.html":{}}}],["assuming",{"_index":625,"title":{},"body":{"interfaces/IWeightHistory.html":{}}}],["attr('class",{"_index":743,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('d",{"_index":772,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('dy",{"_index":754,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('transform",{"_index":731,"title":{},"body":{"components/LineChartComponent.html":{}}}],["attr('y",{"_index":752,"title":{},"body":{"components/LineChartComponent.html":{}}}],["authguardservice",{"_index":294,"title":{"guards/AuthGuardService.html":{}},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["auto",{"_index":1466,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["automatically",{"_index":1569,"title":{},"body":{"index.html":{}}}],["available",{"_index":1597,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":413,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{}}}],["axis",{"_index":659,"title":{},"body":{"components/LineChartComponent.html":{}}}],["bar",{"_index":944,"title":{},"body":{"modules/MaterialModule.html":{}}}],["base",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/MessagesComponent.html":{},"interfaces/ServiceRequest.html":{}}}],["base.util",{"_index":323,"title":{},"body":{"classes/BaseComponent.html":{},"classes/BaseService.html":{}}}],["base/base.component",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["base/base.component.ts",{"_index":315,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["base/base.component.ts:10",{"_index":319,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:11",{"_index":318,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:20",{"_index":322,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:24",{"_index":320,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.component.ts:38",{"_index":321,"title":{},"body":{"classes/BaseComponent.html":{}}}],["base/base.service",{"_index":1199,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["base/base.service.ts",{"_index":342,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["base/base.service.ts:117",{"_index":366,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:121",{"_index":363,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:16",{"_index":355,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:17",{"_index":360,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:18",{"_index":362,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:19",{"_index":353,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:33",{"_index":387,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:51",{"_index":383,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:70",{"_index":390,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.service.ts:93",{"_index":375,"title":{},"body":{"classes/BaseService.html":{}}}],["base/base.util",{"_index":1058,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/MockDataService.html":{}}}],["base/base.util.ts",{"_index":7,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"coverage.html":{}}}],["base/base.util.ts:10",{"_index":20,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:21",{"_index":53,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:31",{"_index":50,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:41",{"_index":41,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:55",{"_index":28,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["base/base.util.ts:7",{"_index":26,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["basecomponent",{"_index":107,"title":{"classes/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["basecomponent:10",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:11",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:20",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:24",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["basecomponent:38",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["based",{"_index":379,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["baseservice",{"_index":341,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["baseservice:10",{"_index":1193,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:117",{"_index":1180,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:121",{"_index":1179,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:16",{"_index":1189,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:17",{"_index":1191,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:18",{"_index":1192,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:19",{"_index":1190,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:21",{"_index":1188,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:31",{"_index":1187,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:33",{"_index":1183,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:41",{"_index":1186,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:51",{"_index":1182,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:55",{"_index":1185,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:7",{"_index":1194,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:70",{"_index":1184,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["baseservice:93",{"_index":1181,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["black",{"_index":787,"title":{},"body":{"components/LineChartComponent.html":{}}}],["block",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["body:data",{"_index":585,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["boolean",{"_index":48,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["bootstrap",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["bottom",{"_index":676,"title":{},"body":{"components/LineChartComponent.html":{}}}],["bottom:0.25em",{"_index":1417,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["bottom:10px",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom:30px",{"_index":1114,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["brand",{"_index":1461,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["break",{"_index":1405,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["browse",{"_index":1595,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ProfileFormComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":267,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1048,"title":{},"body":{"injectables/MessagesService.html":{},"index.html":{}}}],["builderrorresponse",{"_index":347,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildmessages",{"_index":1033,"title":{},"body":{"injectables/MessagesService.html":{}}}],["buildmessages(type",{"_index":1038,"title":{},"body":{"injectables/MessagesService.html":{}}}],["buildmessages(type:msgtypeenum",{"_index":1069,"title":{},"body":{"injectables/MessagesService.html":{}}}],["builds",{"_index":367,"title":{},"body":{"classes/BaseService.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildservicerequest",{"_index":348,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildservicerequest(url",{"_index":364,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["buildservicerequest(url:string,data:any=null,handlemessages:boolean=true",{"_index":454,"title":{},"body":{"classes/BaseService.html":{}}}],["button",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["call",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["call(d3axis.axisbottom(this.xaxis",{"_index":747,"title":{},"body":{"components/LineChartComponent.html":{}}}],["call(d3axis.axisleft(this.yaxis",{"_index":748,"title":{},"body":{"components/LineChartComponent.html":{}}}],["called",{"_index":775,"title":{},"body":{"components/LineChartComponent.html":{}}}],["caller",{"_index":425,"title":{},"body":{"classes/BaseService.html":{}}}],["canactivate",{"_index":299,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["card",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["card'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["card.component",{"_index":504,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["card.component.html",{"_index":1096,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.scss",{"_index":1095,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts",{"_index":1094,"title":{},"body":{"components/NameWeightCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":1101,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:15",{"_index":1103,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:16",{"_index":1100,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:17",{"_index":1102,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:18",{"_index":1099,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:24",{"_index":1105,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card.component.ts:31",{"_index":1106,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["card/name",{"_index":503,"title":{},"body":{"modules/FeaturesModule.html":{},"components/NameWeightCardComponent.html":{},"coverage.html":{}}}],["cardclicked",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["cardclicked(id",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["cardclicked(id:number",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["cardclicked=new",{"_index":1110,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["case",{"_index":1403,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["cast",{"_index":1073,"title":{},"body":{"injectables/MessagesService.html":{}}}],["catcherror",{"_index":397,"title":{},"body":{"classes/BaseService.html":{}}}],["catcherror((err",{"_index":427,"title":{},"body":{"classes/BaseService.html":{}}}],["cdksteppermodule",{"_index":893,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":895,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":897,"title":{},"body":{"modules/MaterialModule.html":{}}}],["center",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["change",{"_index":1299,"title":{},"body":{"components/ProfileFormComponent.html":{},"index.html":{}}}],["changed",{"_index":992,"title":{},"body":{"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["changefieldstate",{"_index":1279,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["chart",{"_index":630,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["chart.component",{"_index":507,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["chart.component.html",{"_index":632,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.scss",{"_index":631,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts",{"_index":627,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:103",{"_index":656,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:127",{"_index":653,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:139",{"_index":665,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:19",{"_index":682,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:21",{"_index":680,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:22",{"_index":683,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:23",{"_index":671,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:24",{"_index":684,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:25",{"_index":685,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:26",{"_index":681,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:27",{"_index":673,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:28",{"_index":670,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:29",{"_index":650,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:38",{"_index":652,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:59",{"_index":666,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:67",{"_index":662,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:80",{"_index":667,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:86",{"_index":660,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart.component.ts:94",{"_index":664,"title":{},"body":{"components/LineChartComponent.html":{}}}],["chart/line",{"_index":506,"title":{},"body":{"modules/FeaturesModule.html":{},"components/LineChartComponent.html":{},"coverage.html":{}}}],["check",{"_index":29,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["checked",{"_index":1014,"title":{},"body":{"components/MessagesComponent.html":{}}}],["checkformode",{"_index":1280,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["checks",{"_index":42,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["child",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["childroutes",{"_index":557,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractBaseUtil.html":{},"classes/AppPage.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["clear",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["cli",{"_index":1560,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":473,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":474,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":476,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":475,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_featuresmodule",{"_index":493,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_declarations",{"_index":494,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_exports",{"_index":496,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_imports",{"_index":495,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["cluster_homemodule",{"_index":547,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":548,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":549,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_personaldashboardmodule",{"_index":1265,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"overview.html":{}}}],["cluster_personaldashboardmodule_declarations",{"_index":1266,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"overview.html":{}}}],["cluster_personaldashboardmodule_imports",{"_index":1267,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1444,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1445,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1447,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1446,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":1572,"title":{},"body":{"index.html":{}}}],["color:blue;//todo",{"_index":1030,"title":{},"body":{"components/MessagesComponent.html":{}}}],["color:green",{"_index":1029,"title":{},"body":{"components/MessagesComponent.html":{}}}],["color:red",{"_index":1025,"title":{},"body":{"components/MessagesComponent.html":{}}}],["combination",{"_index":448,"title":{},"body":{"classes/BaseService.html":{}}}],["commonmodule",{"_index":479,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{}}}],["compliementory",{"_index":68,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["component",{"_index":79,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:pagenotfoundcomponent",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["components/home/home.component",{"_index":552,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["components/line",{"_index":505,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["components/login/login.component",{"_index":486,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/messages/messages.component",{"_index":485,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/name",{"_index":502,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["components/page",{"_index":487,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/personal",{"_index":1270,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["components/profile",{"_index":499,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["components/top",{"_index":481,"title":{},"body":{"modules/CoreModule.html":{}}}],["concat(this._msgservice.buildmessages(msgtypeenum.info,response.infomsgs",{"_index":451,"title":{},"body":{"classes/BaseService.html":{}}}],["concat(this._msgservice.buildmessages(msgtypeenum.success,response.successmsgs",{"_index":450,"title":{},"body":{"classes/BaseService.html":{}}}],["concatmap",{"_index":1240,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["concatmap((id:number",{"_index":1249,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["console",{"_index":1013,"title":{},"body":{"components/MessagesComponent.html":{}}}],["console.log(\"ngdestroy",{"_index":774,"title":{},"body":{"components/LineChartComponent.html":{}}}],["const",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(activatedroute",{"_index":1225,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["constructor(eleref",{"_index":648,"title":{},"body":{"components/LineChartComponent.html":{}}}],["constructor(fb",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["constructor(http",{"_index":1082,"title":{},"body":{"injectables/MockDataService.html":{}}}],["constructor(injector:injector",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(msgservice",{"_index":979,"title":{},"body":{"components/MessagesComponent.html":{}}}],["constructor(private",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MockDataService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(storageservice",{"_index":300,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/HttpMockInterceptor.html":{}}}],["content",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":1505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{}}}],["controls",{"_index":1328,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["convert",{"_index":716,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["core",{"_index":491,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/abstract",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["core/components/login/login.component",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/components/page",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/core.module",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["core/interceptor/http",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/core",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["coreinjectorservice",{"_index":240,"title":{"injectables/CoreInjectorService.html":{}},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["coreinjectorservice.injector=injector",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":220,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":78,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["coverage",{"_index":1467,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["createformgroup",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["createformgroup():void",{"_index":1349,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["creating",{"_index":994,"title":{},"body":{"components/MessagesComponent.html":{}}}],["crispedges",{"_index":786,"title":{},"body":{"components/LineChartComponent.html":{}}}],["current",{"_index":1302,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["current_user",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d",{"_index":764,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d.lastupdated",{"_index":739,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d.weight",{"_index":741,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3",{"_index":689,"title":{},"body":{"components/LineChartComponent.html":{},"dependencies.html":{}}}],["d3.select(this.hostelement).append('svg').attr(\"height\",\"500\").attr(\"width\",\"900",{"_index":729,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3.select(this.hostelement).select('svg').remove",{"_index":778,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3.selectall(\"svg",{"_index":776,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3array",{"_index":695,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3axis",{"_index":696,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3scale",{"_index":691,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3scale.scalelinear().range([this.height",{"_index":736,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3scale.scaletime().range([0",{"_index":734,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3shape",{"_index":693,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d3shape.line",{"_index":672,"title":{},"body":{"components/LineChartComponent.html":{}}}],["d:iweighthistory",{"_index":738,"title":{},"body":{"components/LineChartComponent.html":{}}}],["dashboard",{"_index":1216,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["dashboard.component",{"_index":1271,"title":{},"body":{"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["dashboard.component.html",{"_index":1218,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":1217,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1215,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:16",{"_index":1227,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:24",{"_index":1238,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:25",{"_index":1236,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:26",{"_index":1237,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:28",{"_index":1235,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:35",{"_index":1231,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:51",{"_index":1230,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.component.ts:62",{"_index":1229,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["dashboard.module').then(mod=>mod.personaldashboardmodule",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dashboard.module.ts",{"_index":1269,"title":{},"body":{"modules/PersonalDashboardModule.html":{}}}],["dashboard/components/personal",{"_index":1214,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["dashboard/personal",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["data",{"_index":44,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["data!=\"undefined",{"_index":92,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["data.length",{"_index":85,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["data.service",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.service.ts",{"_index":1079,"title":{},"body":{"injectables/MockDataService.html":{},"coverage.html":{}}}],["data.service.ts:12",{"_index":1083,"title":{},"body":{"injectables/MockDataService.html":{}}}],["data.service.ts:19",{"_index":1085,"title":{},"body":{"injectables/MockDataService.html":{}}}],["data.trim().length",{"_index":95,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["data/mock",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"coverage.html":{}}}],["data:t",{"_index":1427,"title":{},"body":{"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{}}}],["datachanged",{"_index":1222,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["datachanged(ipersondetails",{"_index":1228,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["datachanged(ipersondetails:ipersondetails",{"_index":1260,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["datachanged=new",{"_index":1332,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["date",{"_index":94,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{}}}],["date(),\"mm/dd/yyyy",{"_index":1388,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["date(iw.lastupdated",{"_index":718,"title":{},"body":{"components/LineChartComponent.html":{}}}],["datepipe",{"_index":498,"title":{},"body":{"modules/FeaturesModule.html":{},"components/ProfileFormComponent.html":{}}}],["datepipe:datepipe",{"_index":1341,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["datum(this._weights",{"_index":771,"title":{},"body":{"components/LineChartComponent.html":{}}}],["declarations",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["delay",{"_index":326,"title":{},"body":{"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/MessagesComponent.html":{},"components/TopToolbarComponent.html":{}}}],["delay(0",{"_index":334,"title":{},"body":{"classes/BaseComponent.html":{}}}],["delay(0),//added",{"_index":1012,"title":{},"body":{"components/MessagesComponent.html":{}}}],["delegate",{"_index":1297,"title":{},"body":{"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{}}}],["delete",{"_index":440,"title":{},"body":{"classes/BaseService.html":{},"components/NameWeightCardComponent.html":{}}}],["delete_forever",{"_index":1113,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["delete_user",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteuser",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demo",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["dependencies",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":492,"title":{},"body":{"modules/CoreModule.html":{}}}],["destoryed",{"_index":1010,"title":{},"body":{"components/MessagesComponent.html":{}}}],["destroy",{"_index":61,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["destroyed",{"_index":80,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{}}}],["details",{"_index":608,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["details.interface",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["details.interface.ts",{"_index":599,"title":{},"body":{"interfaces/IPersonDetails.html":{},"coverage.html":{}}}],["details.service",{"_index":1241,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["details.service.ts",{"_index":1167,"title":{},"body":{"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:14",{"_index":1171,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:25",{"_index":1172,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:41",{"_index":1174,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["details.service.ts:60",{"_index":1177,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["determine",{"_index":1301,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["dev",{"_index":1566,"title":{},"body":{"index.html":{}}}],["development",{"_index":1562,"title":{},"body":{"index.html":{}}}],["directive",{"_index":175,"title":{"directives/NumbersonlyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["directives/numbersonly/numbersonly.directive",{"_index":1449,"title":{},"body":{"modules/SharedModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1575,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1579,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1310,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disable)?this._profileform.controls.age.disable():this._profileform.controls.age.enable",{"_index":1409,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disable)?this._profileform.controls.name.disable():this._profileform.controls.name.enable",{"_index":1408,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disable)?this._profileform.controls.weight.disable():this._profileform.controls.weight.enable",{"_index":1410,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["disabled",{"_index":1307,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["display",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["dist",{"_index":1578,"title":{},"body":{"index.html":{}}}],["document",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1087,"title":{},"body":{"injectables/MockDataService.html":{}}}],["dom",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["dome",{"_index":996,"title":{},"body":{"components/MessagesComponent.html":{}}}],["domsanitizer",{"_index":1289,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["domsanitzer",{"_index":1288,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["domsanitzer:domsanitizer",{"_index":1340,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["dragdropmodule",{"_index":886,"title":{},"body":{"modules/MaterialModule.html":{}}}],["draw",{"_index":654,"title":{},"body":{"components/LineChartComponent.html":{}}}],["drawlinechart",{"_index":640,"title":{},"body":{"components/LineChartComponent.html":{}}}],["drawxandyaxis",{"_index":641,"title":{},"body":{"components/LineChartComponent.html":{}}}],["drop",{"_index":888,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1588,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":260,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":265,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":1291,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["effect",{"_index":436,"title":{},"body":{"classes/BaseService.html":{}}}],["element",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"dependencies.html":{}}}],["element(by.css('app",{"_index":268,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":649,"title":{},"body":{"components/LineChartComponent.html":{},"directives/NumbersonlyDirective.html":{}}}],["eleref",{"_index":651,"title":{},"body":{"components/LineChartComponent.html":{}}}],["eleref:elementref",{"_index":699,"title":{},"body":{"components/LineChartComponent.html":{}}}],["emit",{"_index":1049,"title":{},"body":{"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["emitmessages",{"_index":1034,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emitmessages(msgs",{"_index":1041,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emitmessages(msgs:imessage[]|imessage",{"_index":1060,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emits",{"_index":1043,"title":{},"body":{"injectables/MessagesService.html":{}}}],["emitted",{"_index":984,"title":{},"body":{"components/MessagesComponent.html":{}}}],["empty",{"_index":31,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["enable",{"_index":1337,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["enableordisableformfields",{"_index":1281,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["enableordisableformfields(disable",{"_index":1308,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["enableordisableformfields(disable:boolean",{"_index":1407,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["encapsulation",{"_index":628,"title":{},"body":{"components/LineChartComponent.html":{}}}],["end",{"_index":758,"title":{},"body":{"components/LineChartComponent.html":{},"index.html":{}}}],["ensure",{"_index":710,"title":{},"body":{"components/LineChartComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{}}}],["entered",{"_index":1138,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["enum",{"_index":1207,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["enumerations",{"_index":1530,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/msg",{"_index":1057,"title":{},"body":{"injectables/MessagesService.html":{}}}],["enums/storage",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":422,"title":{},"body":{"classes/BaseService.html":{},"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/enumerations.html":{}}}],["error(messages",{"_index":1046,"title":{},"body":{"injectables/MessagesService.html":{}}}],["error(messages:string[]|string",{"_index":1063,"title":{},"body":{"injectables/MessagesService.html":{}}}],["errormsgs",{"_index":1431,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["errormsgs:string[]|string",{"_index":1440,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["errors",{"_index":430,"title":{},"body":{"classes/BaseService.html":{}}}],["event",{"_index":1317,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["eventemitter",{"_index":1104,"title":{},"body":{"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["exception",{"_index":431,"title":{},"body":{"classes/BaseService.html":{}}}],["execute",{"_index":1586,"title":{},"body":{"index.html":{}}}],["exists",{"_index":711,"title":{},"body":{"components/LineChartComponent.html":{},"directives/NumbersonlyDirective.html":{},"interfaces/ServiceResponse.html":{}}}],["export",{"_index":56,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{}}}],["exports",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["exports:[profileformcomponent,nameweightcardcomponent,linechartcomponent",{"_index":508,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["exports:[routermodule",{"_index":559,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["exports:[toptoolbarcomponent,materialmodule,logincomponent",{"_index":490,"title":{},"body":{"modules/CoreModule.html":{}}}],["extend",{"_index":1088,"title":{},"body":{"injectables/MockDataService.html":{}}}],["extends",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["false",{"_index":89,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["fb:formbuilder",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["features/features.module",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["featuresmodule",{"_index":221,"title":{"modules/FeaturesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["field",{"_index":598,"title":{},"body":{"interfaces/IMessage.html":{},"components/ProfileFormComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["file]=$event.target.files",{"_index":1374,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader",{"_index":1373,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader.onload",{"_index":1376,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader.readasdataurl(file",{"_index":1375,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filereader=new",{"_index":1372,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["files",{"_index":1571,"title":{},"body":{"index.html":{}}}],["fill",{"_index":781,"title":{},"body":{"components/LineChartComponent.html":{},"components/TopToolbarComponent.html":{}}}],["filteritem=weights.filter((iw:iweighthistory)=>{return",{"_index":1396,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["filteritem[0].weight=weight",{"_index":1399,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["flag",{"_index":380,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"index.html":{}}}],["flex",{"_index":1465,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["float:right",{"_index":1416,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["fn",{"_index":1130,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["font",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/TopToolbarComponent.html":{}}}],["forkjoin",{"_index":1239,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["form",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["form'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["form.component",{"_index":501,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["form.component.html",{"_index":1275,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.scss",{"_index":1274,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts",{"_index":1273,"title":{},"body":{"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:107",{"_index":1314,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:124",{"_index":1312,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:133",{"_index":1318,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:165",{"_index":1296,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:179",{"_index":1309,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:20",{"_index":1322,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:22",{"_index":1321,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:28",{"_index":1293,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:32",{"_index":1295,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:35",{"_index":1320,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:38",{"_index":1290,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:47",{"_index":1294,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:53",{"_index":1311,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:62",{"_index":1304,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:75",{"_index":1319,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:91",{"_index":1324,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form.component.ts:98",{"_index":1300,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["form/profile",{"_index":500,"title":{},"body":{"modules/FeaturesModule.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["formcontrol",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{}}}],["formcontrol({value:\"\",disabled:false},[validators.required,validators.maxlength(50",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol({value:(this.hasvalue(this.persondetails",{"_index":1352,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["formcontrol):validationerrors|null",{"_index":1141,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["formcontrols",{"_index":1325,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["formgroup",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["found",{"_index":1017,"title":{},"body":{"components/MessagesComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["found'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["found.component",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.html",{"_index":1161,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1160,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1159,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1163,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1162,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["function",{"_index":1131,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["further",{"_index":1589,"title":{},"body":{"index.html":{}}}],["games",{"_index":1460,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["generate",{"_index":1574,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1559,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1424,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["get_all_users",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_user",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["getallusers",{"_index":1168,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getallusers():observable",{"_index":1200,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getformcontrol",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["getidfromroute",{"_index":1223,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["getidfromroute():observable",{"_index":1254,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["getinjector",{"_index":464,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["getnullforemtpy",{"_index":14,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["getnullforemtpy(value",{"_index":27,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["getting",{"_index":1555,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":261,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserbyid",{"_index":1169,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getuserbyid(id",{"_index":1173,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["getuserbyid(id:number):observable",{"_index":1206,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["given",{"_index":43,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["global",{"_index":1008,"title":{},"body":{"components/MessagesComponent.html":{}}}],["go",{"_index":1592,"title":{},"body":{"index.html":{}}}],["gobal",{"_index":1027,"title":{},"body":{"components/MessagesComponent.html":{}}}],["gohome",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1596,"title":{},"body":{"modules.html":{}}}],["group",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["guard",{"_index":293,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":556,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["guard.service.ts",{"_index":298,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":303,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:8",{"_index":301,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard/auth",{"_index":297,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["guards",{"_index":295,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["h1",{"_index":1115,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["handle",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["handleerror",{"_index":423,"title":{},"body":{"classes/BaseService.html":{}}}],["handlemessages",{"_index":365,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceRequest.html":{}}}],["handlemessages:boolean",{"_index":1429,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["handlemessagesfromresponse",{"_index":349,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["handlemessagesfromresponse(request",{"_index":371,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["handlemessagesfromresponse(request:servicerequest",{"_index":442,"title":{},"body":{"classes/BaseService.html":{}}}],["handling",{"_index":1428,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["hasvalue",{"_index":15,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["hasvalue(data",{"_index":40,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["header",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["headers:new",{"_index":356,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["height",{"_index":634,"title":{},"body":{"components/LineChartComponent.html":{}}}],["height:30vh",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["height:40px",{"_index":1420,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["help",{"_index":1590,"title":{},"body":{"index.html":{}}}],["history",{"_index":601,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["history.interface",{"_index":606,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/LineChartComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["history.interface.ts",{"_index":623,"title":{},"body":{"interfaces/IWeightHistory.html":{},"coverage.html":{}}}],["history:iweighthistory",{"_index":619,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["historydata.lastupdated=lastupdated",{"_index":1391,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["historydata.weight=weight",{"_index":1390,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["historydata:iweighthistory=new",{"_index":1389,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["histry",{"_index":609,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["hold",{"_index":1334,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["holder",{"_index":1426,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["holds",{"_index":607,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["home",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["home'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["home.component.html",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":179,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":546,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":550,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["horizontal",{"_index":745,"title":{},"body":{"components/LineChartComponent.html":{}}}],["hostelement",{"_index":635,"title":{},"body":{"components/LineChartComponent.html":{}}}],["hostlistener",{"_index":1139,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["http",{"_index":1084,"title":{},"body":{"injectables/MockDataService.html":{}}}],["http://localhost:4200",{"_index":1568,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1091,"title":{},"body":{"injectables/MockDataService.html":{}}}],["http_interceptors",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":354,"title":{},"body":{"classes/BaseService.html":{},"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["httpclientmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":573,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httphandler",{"_index":569,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpheaders",{"_index":392,"title":{},"body":{"classes/BaseService.html":{}}}],["httpheaders({'content",{"_index":357,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["httpinterceptor",{"_index":572,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpmockinterceptor",{"_index":223,"title":{"interceptors/HttpMockInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpMockInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httprequest",{"_index":567,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpresponse",{"_index":574,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["httpresponse({status:200",{"_index":584,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["i.e",{"_index":46,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon",{"_index":536,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["icons",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["id:number",{"_index":1109,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["id:number;//assuming",{"_index":610,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["id?:number",{"_index":624,"title":{},"body":{"interfaces/IWeightHistory.html":{}}}],["identifier",{"_index":597,"title":{},"body":{"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"coverage.html":{}}}],["if(!this.svg",{"_index":721,"title":{},"body":{"components/LineChartComponent.html":{}}}],["if(!value",{"_index":1148,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["if($event.target.files.length>0",{"_index":1371,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(data!=null",{"_index":91,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"interceptors/HttpMockInterceptor.html":{}}}],["if(disable",{"_index":1411,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(req.url.indexof(\".json",{"_index":577,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["if(request",{"_index":444,"title":{},"body":{"classes/BaseService.html":{}}}],["if(response",{"_index":446,"title":{},"body":{"classes/BaseService.html":{}}}],["if(response!=null",{"_index":1204,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["if(this._imgsrc",{"_index":1367,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.hasvalue(msgs",{"_index":1076,"title":{},"body":{"injectables/MessagesService.html":{}}}],["if(this.hasvalue(this._persondetails",{"_index":1361,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.isvalidarraywithdata(data",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isvalidarraywithdata(filteritem",{"_index":1398,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["if(this.isvalidarraywithdata(ip",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isvalidarraywithdata(msgs",{"_index":452,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{}}}],["if(this.isvalidarraywithdata(this._users",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.isvalidarraywithdata(weights",{"_index":712,"title":{},"body":{"components/LineChartComponent.html":{}}}],["if(weight!=this._persondetails.weight",{"_index":1386,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["image",{"_index":1316,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["imessage",{"_index":398,"title":{"interfaces/IMessage.html":{}},"body":{"classes/BaseService.html":{},"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["imgs=this._imgsrc.repeat(1",{"_index":1378,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["imgsrc",{"_index":602,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/ProfileFormComponent.html":{}}}],["imgsrc:string",{"_index":618,"title":{},"body":{"interfaces/IPersonDetails.html":{}}}],["implement",{"_index":668,"title":{},"body":{"components/LineChartComponent.html":{}}}],["implements",{"_index":309,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileFormComponent.html":{}}}],["import",{"_index":54,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IPersonDetails.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{}}}],["imports",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{}}}],["imports:[routermodule.forchild(childroutes",{"_index":558,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["improves",{"_index":998,"title":{},"body":{"components/MessagesComponent.html":{}}}],["including",{"_index":1330,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["incorrect",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info(messages",{"_index":1050,"title":{},"body":{"injectables/MessagesService.html":{}}}],["info(messages:string[]|string",{"_index":1068,"title":{},"body":{"injectables/MessagesService.html":{}}}],["infomsgs",{"_index":1432,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["infomsgs:string[]|string",{"_index":1442,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["information",{"_index":1175,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["inherited",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["initalize",{"_index":663,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initalized3svgobject",{"_index":642,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initialize",{"_index":661,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initializechart",{"_index":643,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initializexandyaxis",{"_index":644,"title":{},"body":{"components/LineChartComponent.html":{}}}],["initiated",{"_index":1347,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["injectable",{"_index":304,"title":{"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/CoreInjectorService.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["injectables",{"_index":457,"title":{},"body":{"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"overview.html":{}}}],["injection",{"_index":411,"title":{},"body":{"classes/BaseService.html":{}}}],["injector",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/CoreInjectorService.html":{}}}],["injector():injector",{"_index":471,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector(injector:injector",{"_index":469,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector.service",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{}}}],["injector.service.ts",{"_index":458,"title":{},"body":{"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["injector.service.ts:11",{"_index":467,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector.service.ts:15",{"_index":465,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector.service.ts:8",{"_index":463,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["injector/core",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["input",{"_index":687,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["inputs",{"_index":646,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["insance",{"_index":415,"title":{},"body":{"classes/BaseService.html":{}}}],["inside",{"_index":70,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["instance",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["int",{"_index":381,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["intercept",{"_index":564,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["intercept(req",{"_index":566,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["interceptor",{"_index":560,"title":{"interceptors/HttpMockInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":561,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["interface",{"_index":588,"title":{"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{}},"body":{"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":589,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"overview.html":{}}}],["invalid",{"_index":93,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["invoke",{"_index":384,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeget",{"_index":350,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeget(request",{"_index":382,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeget(request:servicerequest):observable",{"_index":433,"title":{},"body":{"classes/BaseService.html":{}}}],["invokepost",{"_index":351,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokepost(request",{"_index":386,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokepost(request:servicerequest):observable",{"_index":419,"title":{},"body":{"classes/BaseService.html":{}}}],["invokeput",{"_index":352,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeput(request",{"_index":389,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["invokeput(request:servicerequest):observable",{"_index":437,"title":{},"body":{"classes/BaseService.html":{}}}],["ip:ipersondetails[]=this._users.filter((p:ipersondetails)=>{return",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["ipersondetails",{"_index":523,"title":{"interfaces/IPersonDetails.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["irrespective",{"_index":1435,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["isvalid)?{numbersonly:\"only",{"_index":1154,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["isvalid=regexnumber.test(value",{"_index":1153,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["isvalidarray",{"_index":16,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["isvalidarray(data",{"_index":49,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["isvalidarray(data:any",{"_index":90,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["isvalidarraywithdata",{"_index":17,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["isvalidarraywithdata(data",{"_index":52,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["item",{"_index":988,"title":{},"body":{"components/MessagesComponent.html":{}}}],["item.message",{"_index":1007,"title":{},"body":{"components/MessagesComponent.html":{}}}],["itself",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["iuser",{"_index":620,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["iw.lastupdated===lastupdated",{"_index":1397,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["iweighthistory",{"_index":605,"title":{"interfaces/IWeightHistory.html":{}},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["karma",{"_index":1587,"title":{},"body":{"index.html":{}}}],["key",{"_index":591,"title":{},"body":{"interfaces/IMessage.html":{}}}],["key?:string;//unique",{"_index":596,"title":{},"body":{"interfaces/IMessage.html":{}}}],["keys.enum",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["keys.enum.ts",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":761,"title":{},"body":{"components/LineChartComponent.html":{}}}],["last",{"_index":1327,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["lastupdated",{"_index":603,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["lastupdated:date|string",{"_index":617,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{}}}],["lastupdated:new",{"_index":1358,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["lastupdated:string=this.datepipe.transform(new",{"_index":1387,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["lbs",{"_index":1112,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["lbs)');//weight",{"_index":760,"title":{},"body":{"components/LineChartComponent.html":{}}}],["leaks",{"_index":66,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{}}}],["left",{"_index":678,"title":{},"body":{"components/LineChartComponent.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["line",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["linechart",{"_index":655,"title":{},"body":{"components/LineChartComponent.html":{}}}],["linechartcomponent",{"_index":181,"title":{"components/LineChartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["list",{"_index":928,"title":{},"body":{"modules/MaterialModule.html":{}}}],["listen",{"_index":76,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{}}}],["listentomessagesstream",{"_index":976,"title":{},"body":{"components/MessagesComponent.html":{}}}],["listentomsgsstream",{"_index":1035,"title":{},"body":{"injectables/MessagesService.html":{}}}],["listetoisloggedinstream",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["literal",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"components/PersonalDashboardComponent.html":{}}}],["loadchildren:()=>\"import('./pages/home/home.module').then(mod=>mod.homemodule",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadchildren:()=>\"import('./pages/personal",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadpersondetails",{"_index":1224,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["loadusers",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadusersfromassets",{"_index":1081,"title":{},"body":{"injectables/MockDataService.html":{}}}],["loadusersfromsesssion",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["local",{"_index":1333,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["log",{"_index":429,"title":{},"body":{"classes/BaseService.html":{}}}],["logger",{"_index":428,"title":{},"body":{"classes/BaseService.html":{}}}],["login",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["login.component.html",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":184,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":1454,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["manually",{"_index":410,"title":{},"body":{"classes/BaseService.html":{}}}],["map",{"_index":327,"title":{},"body":{"classes/BaseComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"components/TopToolbarComponent.html":{}}}],["map((data:any",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["map((isloggedin:boolean",{"_index":335,"title":{},"body":{"classes/BaseComponent.html":{}}}],["map((msgs:imessage",{"_index":1015,"title":{},"body":{"components/MessagesComponent.html":{}}}],["map((response:serviceresponse",{"_index":1203,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["margin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/LineChartComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["margin:auto",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["mat",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["matautocompletemodule",{"_index":899,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":901,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":903,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":906,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":908,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":910,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":912,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":97,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":914,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":918,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":920,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":922,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":542,"title":{},"body":{"components/HomeComponent.html":{},"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":484,"title":{},"body":{"modules/CoreModule.html":{}}}],["materialmodule",{"_index":477,"title":{"modules/MaterialModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":924,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":926,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":929,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":931,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":933,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":935,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":937,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":940,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":942,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":945,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":947,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":938,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":949,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":951,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":953,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":955,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":957,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":959,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":916,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":961,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":963,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":965,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":967,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":969,"title":{},"body":{"modules/MaterialModule.html":{}}}],["memory",{"_index":65,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{}}}],["message",{"_index":592,"title":{},"body":{"interfaces/IMessage.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"interfaces/ServiceRequest.html":{}}}],["message(s",{"_index":1439,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["message:string",{"_index":595,"title":{},"body":{"interfaces/IMessage.html":{}}}],["messageenum",{"_index":404,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/enumerations.html":{}}}],["messages",{"_index":377,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{}}}],["messages'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["messages.component.html",{"_index":974,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":973,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.push({\"type\":type,message:(msgs",{"_index":1077,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages.push({\"type\":type,message:msg",{"_index":1075,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages=new",{"_index":1072,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages=null",{"_index":1071,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messagescomponent",{"_index":186,"title":{"components/MessagesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messageservice",{"_index":985,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagesservice",{"_index":359,"title":{"injectables/MessagesService.html":{}},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{},"coverage.html":{}}}],["metadata",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["method",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["min",{"_index":1419,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["miscellaneous",{"_index":1529,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{}}}],["mock.interceptor",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.interceptor.ts",{"_index":563,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"coverage.html":{}}}],["mock.interceptor.ts:11",{"_index":565,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["mock.interceptor.ts:15",{"_index":570,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["mockdata",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["mockdataservice",{"_index":802,"title":{"injectables/MockDataService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"coverage.html":{}}}],["mockdataservice:mockdataservice",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["mocked",{"_index":611,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{}}}],["mode",{"_index":1286,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["mode:'edit'|'readonly'='edit",{"_index":1331,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["mode=='readonly",{"_index":1303,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["models/message.interface",{"_index":1000,"title":{},"body":{"components/MessagesComponent.html":{},"injectables/MessagesService.html":{}}}],["models/person",{"_index":1195,"title":{},"body":{"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["models/service",{"_index":575,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["models/user.interface",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["models/weight",{"_index":697,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["module",{"_index":206,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":208,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1591,"title":{},"body":{"index.html":{}}}],["msg.type}}{{msg.message",{"_index":1021,"title":{},"body":{"components/MessagesComponent.html":{}}}],["msgs",{"_index":1039,"title":{},"body":{"injectables/MessagesService.html":{},"interfaces/ServiceResponse.html":{}}}],["msgs).foreach((msg:string",{"_index":1074,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msgs.concat(this._msgservice.buildmessages(msgtypeenum.error,response.errormsgs",{"_index":449,"title":{},"body":{"classes/BaseService.html":{}}}],["msgs:imessage[]=new",{"_index":447,"title":{},"body":{"classes/BaseService.html":{}}}],["msgs:string[]|string",{"_index":1070,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msgservice",{"_index":981,"title":{},"body":{"components/MessagesComponent.html":{}}}],["msgservice:messagesservice",{"_index":1004,"title":{},"body":{"components/MessagesComponent.html":{}}}],["msgtypeenum",{"_index":401,"title":{},"body":{"classes/BaseService.html":{},"injectables/MessagesService.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":1045,"title":{},"body":{"injectables/MessagesService.html":{}}}],["name",{"_index":37,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IPersonDetails.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["name:new",{"_index":1351,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["name:string",{"_index":613,"title":{},"body":{"interfaces/IPersonDetails.html":{},"components/NameWeightCardComponent.html":{}}}],["nameweightcardcomponent",{"_index":188,"title":{"components/NameWeightCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1567,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":262,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["needed",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":24,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":568,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["next.handle(req",{"_index":579,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["ng",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["ng_validators",{"_index":1122,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["ngmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":63,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ngoninit",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ngweightwatchers",{"_index":1557,"title":{},"body":{"index.html":{}}}],["no_url_found",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["none",{"_index":782,"title":{},"body":{"components/LineChartComponent.html":{}}}],["null",{"_index":30,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["number",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{}}}],["number(params['id']).valueof():null",{"_index":1258,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["numbers",{"_index":1155,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"components/ProfileFormComponent.html":{}}}],["numbersonlydirective",{"_index":203,"title":{"directives/NumbersonlyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbersonlydirective.validatenumbersonly(control",{"_index":1142,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["object",{"_index":51,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":74,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["observable(observer",{"_index":1255,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["observable>(observer",{"_index":580,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["observer",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["observer.complete",{"_index":587,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"components/PersonalDashboardComponent.html":{}}}],["observer.next(response",{"_index":586,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["observer.next(this._id",{"_index":1259,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["occured",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["of(this.builderrorresponse",{"_index":432,"title":{},"body":{"classes/BaseService.html":{}}}],["once",{"_index":62,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["onclick",{"_index":1097,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["ondestroy",{"_index":317,"title":{},"body":{"classes/BaseComponent.html":{}}}],["onedit",{"_index":1282,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["onfileinput",{"_index":1283,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["onfileinput($event",{"_index":1313,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["oninit",{"_index":316,"title":{},"body":{"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["onsave",{"_index":1284,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["operation",{"_index":385,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["otherwise",{"_index":1434,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["out",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1107,"title":{},"body":{"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["outputs",{"_index":1098,"title":{},"body":{"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["override",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["overview",{"_index":1598,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.username==username",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1509,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1023,"title":{},"body":{"components/MessagesComponent.html":{}}}],["padding:0.25rem",{"_index":1117,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["padding:0.35em",{"_index":1462,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["padding:1em",{"_index":534,"title":{},"body":{"components/HomeComponent.html":{}}}],["page",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["pagenotfoundcomponent",{"_index":190,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages/dashboard",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/home",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/login",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["param",{"_index":82,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["parent",{"_index":416,"title":{},"body":{"classes/BaseService.html":{},"components/NameWeightCardComponent.html":{}}}],["passed",{"_index":34,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["passing",{"_index":414,"title":{},"body":{"classes/BaseService.html":{}}}],["password",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["password=this._loginform.controls.password.value",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["patch",{"_index":441,"title":{},"body":{"classes/BaseService.html":{}}}],["path",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"components/LineChartComponent.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["pathmatch",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1443,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["performance",{"_index":999,"title":{},"body":{"components/MessagesComponent.html":{}}}],["person",{"_index":535,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["person_add",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["personal",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["personaldashboardcomponent",{"_index":193,"title":{"components/PersonalDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["personaldashboardmodule",{"_index":1264,"title":{"modules/PersonalDashboardModule.html":{}},"body":{"modules/PersonalDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["personaldashboardroutingmodule",{"_index":1268,"title":{"modules/PersonalDashboardRoutingModule.html":{}},"body":{"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["persondetails",{"_index":1287,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["persondetails(persondetails:ipersondetails",{"_index":1342,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["persondetailsservice",{"_index":1165,"title":{"injectables/PersonDetailsService.html":{}},"body":{"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["persondetailsservice:persondetailsservice",{"_index":1243,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["pic",{"_index":1338,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["picture",{"_index":1335,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["pipe",{"_index":71,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["place",{"_index":1425,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["plot",{"_index":767,"title":{},"body":{"components/LineChartComponent.html":{}}}],["points",{"_index":768,"title":{},"body":{"components/LineChartComponent.html":{}}}],["pool",{"_index":1009,"title":{},"body":{"components/MessagesComponent.html":{}}}],["portalmodule",{"_index":889,"title":{},"body":{"modules/MaterialModule.html":{}}}],["position",{"_index":537,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["possibility",{"_index":1345,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["post",{"_index":388,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["prevent",{"_index":64,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{}}}],["private",{"_index":459,"title":{},"body":{"injectables/CoreInjectorService.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["prod",{"_index":1580,"title":{},"body":{"index.html":{}}}],["production",{"_index":1581,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["profile_updated",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profileformcomponent",{"_index":196,"title":{"components/ProfileFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1558,"title":{},"body":{"index.html":{}}}],["promise",{"_index":264,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["protected",{"_index":10,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["protractor",{"_index":266,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":1121,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["provide:http_interceptors,useclass:httpmockinterceptor,multi:true",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:ng_validators,useexisting:numbersonlydirective",{"_index":1140,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["provided",{"_index":769,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["providedin",{"_index":308,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["providers",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"directives/NumbersonlyDirective.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providers:[datepipe",{"_index":509,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["pull",{"_index":1415,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["purpose",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["put",{"_index":391,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["re",{"_index":993,"title":{},"body":{"components/MessagesComponent.html":{}}}],["reactive",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":488,"title":{},"body":{"modules/CoreModule.html":{},"modules/FeaturesModule.html":{}}}],["readme",{"_index":1593,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1292,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["reative",{"_index":1305,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["redirectto",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regexnumber:regexp=new",{"_index":1150,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["regexp",{"_index":1151,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["register",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["registeronvalidatorchange",{"_index":1124,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["registeronvalidatorchange(fn",{"_index":1128,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["registeronvalidatorchange?(fn",{"_index":1143,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["reload",{"_index":1570,"title":{},"body":{"index.html":{}}}],["remove",{"_index":777,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{}}}],["rendering",{"_index":785,"title":{},"body":{"components/LineChartComponent.html":{},"components/LoginComponent.html":{}}}],["req",{"_index":571,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["request",{"_index":369,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["request.handlemessages",{"_index":445,"title":{},"body":{"classes/BaseService.html":{}}}],["request.interface",{"_index":394,"title":{},"body":{"classes/BaseService.html":{}}}],["request.interface.ts",{"_index":1421,"title":{},"body":{"interfaces/ServiceRequest.html":{},"coverage.html":{}}}],["request=this.buildservicerequest(serviceurls.get_all_users,null",{"_index":1201,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["request=this.buildservicerequest(serviceurls.save_user,ipersondetails",{"_index":1211,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["request=this.buildservicerequest(userurl",{"_index":1209,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["requested",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["require",{"_index":1506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/ProfileFormComponent.html":{}}}],["reset",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["response",{"_index":373,"title":{},"body":{"classes/BaseService.html":{},"components/LineChartComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["response.data",{"_index":1205,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["response.interface",{"_index":395,"title":{},"body":{"classes/BaseService.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/PersonDetailsService.html":{}}}],["response.interface.ts",{"_index":1430,"title":{},"body":{"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["response:httpresponse",{"_index":581,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["response:serviceresponse",{"_index":443,"title":{},"body":{"classes/BaseService.html":{}}}],["response=new",{"_index":583,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["result",{"_index":96,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":98,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["returns",{"_index":32,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["returs",{"_index":1438,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["right",{"_index":675,"title":{},"body":{"components/LineChartComponent.html":{},"components/ProfileFormComponent.html":{}}}],["right:0px",{"_index":540,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["root",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuardService.html":{},"injectables/CoreInjectorService.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["root'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["rotate",{"_index":750,"title":{},"body":{"components/LineChartComponent.html":{}}}],["route",{"_index":1233,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["router",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/TopToolbarComponent.html":{}}}],["router:router",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/TopToolbarComponent.html":{}}}],["routermodule",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":273,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{}}}],["routing.module.ts",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{}}}],["run",{"_index":1564,"title":{},"body":{"index.html":{}}}],["running",{"_index":1582,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":55,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":328,"title":{},"body":{"classes/BaseComponent.html":{},"classes/BaseService.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sass",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1178,"title":{},"body":{"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{}}}],["save_user",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["savechanges",{"_index":1170,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["savechanges(ipersondetails",{"_index":1176,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["savechanges(ipersondetails:ipersondetails",{"_index":1210,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["saveuser",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffolding",{"_index":1573,"title":{},"body":{"index.html":{}}}],["scale",{"_index":692,"title":{},"body":{"components/LineChartComponent.html":{}}}],["scrollingmodule",{"_index":891,"title":{},"body":{"modules/MaterialModule.html":{}}}],["scss",{"_index":1026,"title":{},"body":{"components/MessagesComponent.html":{}}}],["section",{"_index":378,"title":{},"body":{"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["selection",{"_index":690,"title":{},"body":{"components/LineChartComponent.html":{}}}],["selector",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["serve",{"_index":1565,"title":{},"body":{"index.html":{}}}],["server",{"_index":1563,"title":{},"body":{"index.html":{}}}],["service",{"_index":368,"title":{},"body":{"classes/BaseService.html":{},"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/enumerations.html":{}}}],["service_failire",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["servicerequest",{"_index":372,"title":{"interfaces/ServiceRequest.html":{}},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceRequest.html":{},"coverage.html":{}}}],["serviceresponse",{"_index":374,"title":{"interfaces/ServiceResponse.html":{}},"body":{"classes/BaseService.html":{},"interceptors/HttpMockInterceptor.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["services",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["services/messages/messages.service",{"_index":1001,"title":{},"body":{"components/MessagesComponent.html":{}}}],["services/mock",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/session",{"_index":305,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["serviceurls",{"_index":1196,"title":{},"body":{"injectables/PersonDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["session",{"_index":1234,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["sessionstorageservice",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["set",{"_index":424,"title":{},"body":{"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{}}}],["setinjector(injector",{"_index":466,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["setpersondetails(persondetails",{"_index":1323,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["setweights(weights",{"_index":686,"title":{},"body":{"components/LineChartComponent.html":{}}}],["shape",{"_index":694,"title":{},"body":{"components/LineChartComponent.html":{}}}],["shared/shared.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["sharedmodule",{"_index":222,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":905,"title":{},"body":{"modules/MaterialModule.html":{}}}],["show",{"_index":376,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["showmessages",{"_index":1036,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showmessages(messages",{"_index":1053,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showmessages(messages:imessage",{"_index":1066,"title":{},"body":{"injectables/MessagesService.html":{}}}],["shown",{"_index":762,"title":{},"body":{"components/LineChartComponent.html":{}}}],["single",{"_index":1044,"title":{},"body":{"injectables/MessagesService.html":{}}}],["size:18px",{"_index":1118,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["size:20px",{"_index":1463,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["size:34px",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"modules/SharedModule.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["space",{"_index":1464,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["span",{"_index":541,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["span')).gettext",{"_index":270,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":946,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../environment.prod.ts",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../messages.enum.ts",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../msg",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../service",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../storage",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/abstract",{"_index":6,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/core/components/login/login.component.ts",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/core/components/login/login.component.ts:22",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:23",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:24",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:33",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:42",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:52",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:59",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/login/login.component.ts:79",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts",{"_index":972,"title":{},"body":{"components/MessagesComponent.html":{},"coverage.html":{}}}],["src/app/core/components/messages/messages.component.ts:16",{"_index":982,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:20",{"_index":980,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:26",{"_index":986,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:37",{"_index":989,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/messages/messages.component.ts:44",{"_index":983,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/core/components/page",{"_index":1158,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/components/top",{"_index":1450,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module",{"_index":554,"title":{},"body":{"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{}}}],["src/app/core/core.module.ts",{"_index":478,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/enums/messages.enum",{"_index":405,"title":{},"body":{"classes/BaseService.html":{}}}],["src/app/core/enums/messages.enum.ts",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/enums/msg",{"_index":402,"title":{},"body":{"classes/BaseService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/enums/service",{"_index":1197,"title":{},"body":{"injectables/PersonDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/enums/storage",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/guards/auth",{"_index":296,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/HomeRoutingModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["src/app/core/interceptor/http",{"_index":562,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"coverage.html":{}}}],["src/app/core/material/material.module.ts",{"_index":883,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/core/models/message.interface",{"_index":399,"title":{},"body":{"classes/BaseService.html":{}}}],["src/app/core/models/message.interface.ts",{"_index":590,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{}}}],["src/app/core/models/service",{"_index":393,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"coverage.html":{}}}],["src/app/core/models/user.interface.ts",{"_index":621,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/core/services/core",{"_index":325,"title":{},"body":{"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"coverage.html":{}}}],["src/app/core/services/messages/messages.service",{"_index":400,"title":{},"body":{"classes/BaseService.html":{}}}],["src/app/core/services/messages/messages.service.ts",{"_index":1031,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/app/core/services/messages/messages.service.ts:13",{"_index":1037,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:23",{"_index":1042,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:30",{"_index":1052,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:38",{"_index":1047,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:46",{"_index":1056,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:54",{"_index":1054,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:62",{"_index":1051,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/messages/messages.service.ts:74",{"_index":1040,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/core/services/mock",{"_index":1078,"title":{},"body":{"injectables/MockDataService.html":{},"coverage.html":{}}}],["src/app/core/services/session",{"_index":324,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["src/app/features/components/line",{"_index":626,"title":{},"body":{"components/LineChartComponent.html":{},"coverage.html":{}}}],["src/app/features/components/name",{"_index":1093,"title":{},"body":{"components/NameWeightCardComponent.html":{},"coverage.html":{}}}],["src/app/features/components/profile",{"_index":1272,"title":{},"body":{"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/features/features.module",{"_index":553,"title":{},"body":{"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{}}}],["src/app/features/features.module.ts",{"_index":497,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["src/app/features/models/person",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["src/app/features/models/weight",{"_index":622,"title":{},"body":{"interfaces/IWeightHistory.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["src/app/features/services/person",{"_index":1166,"title":{},"body":{"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/components/home/home.component.ts",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/components/home/home.component.ts:16",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:22",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:27",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/components/home/home.component.ts:35",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home",{"_index":555,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":551,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/pages/personal",{"_index":1213,"title":{},"body":{"components/PersonalDashboardComponent.html":{},"modules/PersonalDashboardModule.html":{},"modules/PersonalDashboardRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive",{"_index":1326,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts",{"_index":1119,"title":{},"body":{"directives/NumbersonlyDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:10",{"_index":1127,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:16",{"_index":1133,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:19",{"_index":1129,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/directives/numbersonly/numbersonly.directive.ts:28",{"_index":1136,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1448,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1556,"title":{"index.html":{}},"body":{}}],["state",{"_index":1298,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["statements",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":460,"title":{},"body":{"injectables/CoreInjectorService.html":{},"directives/NumbersonlyDirective.html":{}}}],["steelblue",{"_index":789,"title":{},"body":{"components/LineChartComponent.html":{}}}],["storage.service",{"_index":307,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["storage.service.ts",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["storage/session",{"_index":306,"title":{},"body":{"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["storagekeys",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["storageservice",{"_index":302,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{}}}],["storageservice:sessionstorageservice",{"_index":576,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{},"components/LoginComponent.html":{}}}],["storageservice:sessionstorageservice,private",{"_index":310,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["stored",{"_index":1577,"title":{},"body":{"index.html":{}}}],["stream",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["streams",{"_index":75,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{}}}],["stroke",{"_index":783,"title":{},"body":{"components/LineChartComponent.html":{}}}],["style('text",{"_index":756,"title":{},"body":{"components/LineChartComponent.html":{}}}],["styles",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["styleurls",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subject",{"_index":25,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subscribe",{"_index":337,"title":{},"body":{"classes/BaseComponent.html":{},"components/MessagesComponent.html":{}}}],["subscribe(((users:ipersondetails",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((data:ipersondetails",{"_index":1251,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["subscriptions",{"_index":60,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subscriptons",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subsink",{"_index":12,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["subsink=new",{"_index":67,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["succesmsgs",{"_index":1436,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["success",{"_index":593,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/MessagesService.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/enumerations.html":{}}}],["success(messages",{"_index":1055,"title":{},"body":{"injectables/MessagesService.html":{}}}],["success(messages:string[]|string",{"_index":1065,"title":{},"body":{"injectables/MessagesService.html":{}}}],["success:boolean",{"_index":1437,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["success:false,errormsgs:messageenum.service_failire",{"_index":456,"title":{},"body":{"classes/BaseService.html":{}}}],["successmsgs",{"_index":1433,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["successmsgs:string[]|string",{"_index":1441,"title":{},"body":{"interfaces/ServiceResponse.html":{}}}],["suffix",{"_index":1116,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["super",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["super.ngondestory",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["super.ngondestroy",{"_index":773,"title":{},"body":{"components/LineChartComponent.html":{}}}],["super.ngoninit",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/TopToolbarComponent.html":{}}}],["support",{"_index":1594,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":636,"title":{},"body":{"components/LineChartComponent.html":{},"modules.html":{}}}],["switch(this.mode",{"_index":1402,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["t",{"_index":1422,"title":{},"body":{"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{}}}],["table",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":73,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"injectables/MockDataService.html":{},"components/PersonalDashboardComponent.html":{}}}],["takeuntil(this._destroy",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{},"components/PersonalDashboardComponent.html":{}}}],["tap",{"_index":396,"title":{},"body":{"classes/BaseService.html":{}}}],["tap((response:serviceresponse",{"_index":421,"title":{},"body":{"classes/BaseService.html":{}}}],["tap((response:serviceresponse)=>{//side",{"_index":435,"title":{},"body":{"classes/BaseService.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["templateurl",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["test",{"_index":1585,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1584,"title":{},"body":{"index.html":{}}}],["text",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["text('weight",{"_index":759,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this._destroy$.complete",{"_index":340,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._destroy$.next",{"_index":339,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._editprofilepic=\"disabled",{"_index":1368,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._editprofilepic=null",{"_index":1412,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._http.get>(this._rest_url+request.url).pipe",{"_index":434,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http.post>(this._rest_url+request.url,request.data,this._httpoptions).pipe",{"_index":420,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http.put>(this._rest_url+request.url,request.data,this._httpoptions).pipe",{"_index":438,"title":{},"body":{"classes/BaseService.html":{}}}],["this._http=coreinjectorservice.injector.get(httpclient",{"_index":417,"title":{},"body":{"classes/BaseService.html":{}}}],["this._id=!isnan(params['id'])?new",{"_index":1257,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._imgsrc=filereader.result",{"_index":1377,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._imgsrc=this._persondetails.imgsrc",{"_index":1366,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._injector",{"_index":472,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["this._injector=injector",{"_index":470,"title":{},"body":{"injectables/CoreInjectorService.html":{}}}],["this._invaliduser=true",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._isloggedin=isloggedin",{"_index":336,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._iweights=[...this._persondetails.history",{"_index":1253,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._iweights=null",{"_index":1262,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._loginform.controls",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._loginform=this.fb.group",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._messages=msgs",{"_index":1016,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._messages=null",{"_index":1019,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._msgservice.showmessages(msgs",{"_index":453,"title":{},"body":{"classes/BaseService.html":{}}}],["this._msgservice=coreinjectorservice.injector.get(messagesservice",{"_index":418,"title":{},"body":{"classes/BaseService.html":{}}}],["this._msgsubject$.asobservable",{"_index":1062,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._msgsubject$.next(msgs",{"_index":1061,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this._persondetails.age=this._profileform.controls.age.value",{"_index":1384,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.imgsrc=imgs",{"_index":1379,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.lastupdated=lastupdated",{"_index":1394,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.name=this._profileform.controls.name.value",{"_index":1383,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails.weight=weight",{"_index":1393,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._persondetails=data",{"_index":1252,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._persondetails=ipersondetails",{"_index":1261,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this._persondetails=persondetails",{"_index":1343,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls",{"_index":1369,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.age.setvalue(this._persondetails.age",{"_index":1363,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.lastupdated.setvalue(lastupdated",{"_index":1392,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.lastupdated.setvalue(this._persondetails.lastupdated",{"_index":1365,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.name.setvalue(this._persondetails.name",{"_index":1362,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform.controls.weight.setvalue(this._persondetails.weight",{"_index":1364,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._profileform=this.fb.group",{"_index":1350,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this._showmsg=false",{"_index":1020,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._showmsg=true",{"_index":1018,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this._storageservice.clearall",{"_index":1458,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this._storageservice.emitisloggedin(false",{"_index":1459,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this._storageservice.emitisloggedin(true",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._storageservice.setdatainsessionstroageforkey(storagekeys.current_user,user",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._storageservice=coreinjectorservice.injector.get(sessionstorageservice",{"_index":331,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this._users$=this._storageservice.getusersfromsession",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._users=users",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._weights.push(w",{"_index":720,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this._weights=new",{"_index":713,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.cardclicked.emit(this.id",{"_index":1111,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["this.changefieldstate",{"_index":1381,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.createformgroup",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["this.datachanged.emit(this._persondetails",{"_index":1401,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.drawlinechart",{"_index":727,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.drawxandyaxis",{"_index":726,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.emitmessages(messages",{"_index":1067,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.emitmessages(this.buildmessages(msgtypeenum.error,messages",{"_index":1064,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.enableordisableformfields(false",{"_index":1404,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.enableordisableformfields(true",{"_index":1406,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.getidfromroute().pipe",{"_index":1248,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.handlemessagesfromresponse(request,response",{"_index":426,"title":{},"body":{"classes/BaseService.html":{}}}],["this.hasvalue(this.persondetails.age))?this.persondetails.age:\"\",disabled:this.checkformode()},[numbersonlydirective.validatenumbersonly,validators.maxlength(3",{"_index":1355,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.imgsrc))?this.persondetails.imgsrc:\"\",disabled:false",{"_index":1360,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.lastupdated))?this.persondetails.lastupdated:\"\",disabled:true",{"_index":1359,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.name))?this.persondetails.name:\"\",disabled:this.checkformode()},[validators.required,validators.maxlength(100",{"_index":1353,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.hasvalue(this.persondetails.weight))?this.persondetails.weight:\"\",disabled:this.checkformode()},[numbersonlydirective.validatenumbersonly,validators.maxlength(3",{"_index":1357,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.height",{"_index":704,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.hostelement=this.eleref.nativeelement",{"_index":708,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.http.get(this._jsonurl",{"_index":1092,"title":{},"body":{"injectables/MockDataService.html":{}}}],["this.initalized3svgobject",{"_index":724,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.initializechart",{"_index":722,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.initializexandyaxis",{"_index":725,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.invokeget(request).pipe",{"_index":1202,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["this.invokepost(request).pipe",{"_index":1212,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["this.line",{"_index":763,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.listentomessagesstream",{"_index":1005,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this.listetoisloggedinstream",{"_index":332,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.loadpersondetails",{"_index":1247,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.loadusers",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loadusersfromsesssion",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.margin.bottom",{"_index":707,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.margin.left",{"_index":702,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.margin.right",{"_index":703,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.margin.top",{"_index":706,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.mockdataservice.loadusersfromassets().pipe",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode=\"edit",{"_index":1380,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.mode=\"readonly",{"_index":1382,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.mode==='readonly'?true:false",{"_index":1370,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.persondetailsservice.getuserbyid(id",{"_index":1250,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.persondetailsservice.savechanges(this._persondetails).subscribe((data",{"_index":1263,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.router.navigatebyurl(\"/pages/home",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(\"pages/dashboard/\"+id",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigatebyurl(\"pages/home",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalDashboardComponent.html":{}}}],["this.router.navigatebyurl(\"pages/login",{"_index":312,"title":{},"body":{"guards/AuthGuardService.html":{},"components/TopToolbarComponent.html":{}}}],["this.storageservice.clearall",{"_index":313,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.storageservice.emitisloggedin(true",{"_index":314,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.storageservice.isuserloggedin",{"_index":311,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.storageservice.processrequestbyurl(req.url,req.body).pipe(delay(0)).subscribe((data:serviceresponse",{"_index":582,"title":{},"body":{"interceptors/HttpMockInterceptor.html":{}}}],["this.storageservice.setdatainsessionstroageforkey(storagekeys.user_profiles,users",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subsink.add(this._storageservice.listentoislogged().pipe",{"_index":333,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.subsink.add(this.activatedroute.params.subscribe(params",{"_index":1256,"title":{},"body":{"components/PersonalDashboardComponent.html":{}}}],["this.subsink.add(this.msgservice.listentomsgsstream().pipe",{"_index":1011,"title":{},"body":{"components/MessagesComponent.html":{}}}],["this.subsink.unsubscribe",{"_index":338,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.svg",{"_index":728,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg.append('g",{"_index":742,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg.append('path",{"_index":770,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg.selectall(\"*\").remove",{"_index":779,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.svg=null",{"_index":780,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.updatechart",{"_index":723,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.updateformgroup",{"_index":1348,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["this.width",{"_index":700,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.xaxis",{"_index":733,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.xaxis(d.lastupdated",{"_index":765,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.xaxis.domain(d3array.extent(this._weights",{"_index":737,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.yaxis",{"_index":735,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.yaxis(d.weight",{"_index":766,"title":{},"body":{"components/LineChartComponent.html":{}}}],["this.yaxis.domain(d3array.extent(this._weights",{"_index":740,"title":{},"body":{"components/LineChartComponent.html":{}}}],["title",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["todo",{"_index":439,"title":{},"body":{"classes/BaseService.html":{},"components/LineChartComponent.html":{},"components/MessagesComponent.html":{}}}],["toggle",{"_index":909,"title":{},"body":{"modules/MaterialModule.html":{},"components/ProfileFormComponent.html":{}}}],["toolbar",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar.component",{"_index":483,"title":{},"body":{"modules/CoreModule.html":{}}}],["toolbar.component.html",{"_index":1453,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":1452,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":1451,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:12",{"_index":1455,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:18",{"_index":1457,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:24",{"_index":1456,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":482,"title":{},"body":{"modules/CoreModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["top:0px",{"_index":539,"title":{},"body":{"components/HomeComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["toptoolbarcomponent",{"_index":199,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":991,"title":{},"body":{"components/MessagesComponent.html":{}}}],["trackbymsg",{"_index":977,"title":{},"body":{"components/MessagesComponent.html":{}}}],["trackbymsg(index",{"_index":987,"title":{},"body":{"components/MessagesComponent.html":{}}}],["trackbymsg(index:number,item:imessage",{"_index":1006,"title":{},"body":{"components/MessagesComponent.html":{}}}],["transform",{"_index":744,"title":{},"body":{"components/LineChartComponent.html":{}}}],["translate",{"_index":732,"title":{},"body":{"components/LineChartComponent.html":{}}}],["translate(0",{"_index":746,"title":{},"body":{"components/LineChartComponent.html":{}}}],["tree",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["triggered",{"_index":1147,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["true",{"_index":88,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"guards/AuthGuardService.html":{},"classes/BaseService.html":{},"components/MessagesComponent.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceResponse.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"interceptors/HttpMockInterceptor.html":{},"interfaces/IMessage.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{},"interfaces/ServiceResponse.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":358,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["type.enum",{"_index":403,"title":{},"body":{"classes/BaseService.html":{},"injectables/MessagesService.html":{}}}],["type.enum.ts",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type:'error'|'success'|'info",{"_index":594,"title":{},"body":{"interfaces/IMessage.html":{}}}],["typeof",{"_index":83,"title":{},"body":{"classes/AbstractBaseUtil.html":{}}}],["undefined",{"_index":47,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["unexpected",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unique",{"_index":612,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/MessagesComponent.html":{}}}],["unit",{"_index":1583,"title":{},"body":{"index.html":{}}}],["unless",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["until",{"_index":77,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{}}}],["update",{"_index":669,"title":{},"body":{"components/LineChartComponent.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{}}}],["updatechart",{"_index":645,"title":{},"body":{"components/LineChartComponent.html":{}}}],["updated",{"_index":1414,"title":{},"body":{"components/ProfileFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updateformgroup",{"_index":1285,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["upload",{"_index":1413,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["uploaded",{"_index":1315,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["url",{"_index":370,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{},"components/ProfileFormComponent.html":{},"interfaces/ServiceRequest.html":{}}}],["url.enum",{"_index":1198,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["url.enum.ts",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url:string",{"_index":1423,"title":{},"body":{"interfaces/ServiceRequest.html":{}}}],["url:url,data:data,handlemessages:handlemessages",{"_index":455,"title":{},"body":{"classes/BaseService.html":{}}}],["use",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["used",{"_index":69,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"modules/AppModule.html":{},"classes/BaseService.html":{},"injectables/MockDataService.html":{},"injectables/PersonDetailsService.html":{}}}],["useexisting",{"_index":1123,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["user",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["user.username=username",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.username}}/12345",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["user:iuser=new",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["user_profiles",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["username",{"_index":604,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{}}}],["username/password",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["username:new",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["username:string",{"_index":614,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IUser.html":{},"components/NameWeightCardComponent.html":{}}}],["username:string=this._loginform.controls.username.value",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["users",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PersonDetailsService.html":{}}}],["users:ipersondetails[]=null",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["users=data",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["userurl=serviceurls.get_user.repeat(1)+\"/\"+id",{"_index":1208,"title":{},"body":{"injectables/PersonDetailsService.html":{}}}],["using",{"_index":412,"title":{},"body":{"classes/BaseService.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{}}}],["utility",{"_index":58,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["valid",{"_index":45,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["validate",{"_index":1125,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validate(control",{"_index":1132,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validatenumbersonly",{"_index":1126,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validatenumbersonly(control",{"_index":1135,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validatenumbersonly(control:formcontrol):validationerrors",{"_index":1144,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validates",{"_index":1137,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validation",{"_index":1146,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validationerrors",{"_index":1134,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validationerrors:null",{"_index":1157,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validator",{"_index":1120,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["validators",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"injectables/MockDataService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length==0",{"_index":1149,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["value=control.value",{"_index":1145,"title":{},"body":{"directives/NumbersonlyDirective.html":{}}}],["values",{"_index":1344,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["var",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["variable",{"_index":1028,"title":{},"body":{"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1603,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1561,"title":{},"body":{"index.html":{}}}],["via",{"_index":72,"title":{},"body":{"classes/AbstractBaseUtil.html":{},"components/MessagesComponent.html":{},"components/ProfileFormComponent.html":{},"index.html":{}}}],["viewencapsulation",{"_index":688,"title":{},"body":{"components/LineChartComponent.html":{}}}],["viewencapsulation.none",{"_index":629,"title":{},"body":{"components/LineChartComponent.html":{}}}],["void",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"classes/BaseService.html":{},"injectables/CoreInjectorService.html":{},"components/HomeComponent.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"injectables/MessagesService.html":{},"components/NameWeightCardComponent.html":{},"directives/NumbersonlyDirective.html":{},"components/PageNotFoundComponent.html":{},"injectables/PersonDetailsService.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{}}}],["w.lastupdated=new",{"_index":717,"title":{},"body":{"components/LineChartComponent.html":{}}}],["w.weight=iw.weight",{"_index":719,"title":{},"body":{"components/LineChartComponent.html":{}}}],["w:iweighthistory=new",{"_index":715,"title":{},"body":{"components/LineChartComponent.html":{}}}],["watchers",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["weight",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/FeaturesModule.html":{},"components/HomeComponent.html":{},"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{},"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/MessagesComponent.html":{},"components/NameWeightCardComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonalDashboardComponent.html":{},"components/ProfileFormComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["weight:bold",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["weight:new",{"_index":1356,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weight:number",{"_index":616,"title":{},"body":{"interfaces/IPersonDetails.html":{},"interfaces/IWeightHistory.html":{}}}],["weight:number=0",{"_index":1108,"title":{},"body":{"components/NameWeightCardComponent.html":{}}}],["weight=this._profileform.controls.weight.value",{"_index":1385,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weights",{"_index":647,"title":{},"body":{"components/LineChartComponent.html":{}}}],["weights(weights:iweighthistory",{"_index":709,"title":{},"body":{"components/LineChartComponent.html":{}}}],["weights.foreach((iw:iweighthistory",{"_index":714,"title":{},"body":{"components/LineChartComponent.html":{}}}],["weights.push(historydata",{"_index":1400,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weights:iweighthistory[]=this.isvalidarraywithdata(this._persondetails.history)?this._persondetails.history:new",{"_index":1395,"title":{},"body":{"components/ProfileFormComponent.html":{}}}],["weightwatchers/api",{"_index":361,"title":{},"body":{"classes/BaseService.html":{},"injectables/PersonDetailsService.html":{}}}],["whole",{"_index":995,"title":{},"body":{"components/MessagesComponent.html":{}}}],["width",{"_index":637,"title":{},"body":{"components/LineChartComponent.html":{},"components/LoginComponent.html":{},"components/ProfileFormComponent.html":{}}}],["width:100",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:300px",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{},"components/NameWeightCardComponent.html":{},"components/ProfileFormComponent.html":{}}}],["works",{"_index":1164,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["x",{"_index":657,"title":{},"body":{"components/LineChartComponent.html":{}}}],["xaxis",{"_index":638,"title":{},"body":{"components/LineChartComponent.html":{}}}],["y",{"_index":658,"title":{},"body":{"components/LineChartComponent.html":{}}}],["yaxis",{"_index":639,"title":{},"body":{"components/LineChartComponent.html":{}}}],["zone.js",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/FeaturesModule.html":{},"modules/HomeModule.html":{},"modules/PersonalDashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractBaseUtil.html":{"url":"classes/AbstractBaseUtil.html","title":"class - AbstractBaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractBaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstract-base/base.util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/abstract-base/base.util.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.util.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.util.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:55\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:41\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:31\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.util.ts:21\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {SubSink} from 'subsink';\nimport { Subject } from 'rxjs';\n\nexport abstract class AbstractBaseUtil{\n\n    //Utility to add all subscriptions and destroy at once in ngOnDestroy to prevent any memory leaks\n    subsink=new SubSink();\n\n    //Compliementory to subsink to be used to inside rxjs pipe via takeUntil so that observable streams listen until the corresponding component is destroyed.\n    protected _destroy$=new Subject();\n\n\n    constructor(){\n        \n    }\n\n    /**\n   * Checks if the given object is an array with data\n   * @param data\n   */\n  isValidArrayWithData(data: any) {\n    if (data != null && typeof data != \"undefined\" && Array.isArray(data) && data.length > 0) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks if the given object is an array with data\n   * @param data\n   */\n  isValidArray(data:any){\n    if(data!=null && typeof data!=\"undefined\" && Array.isArray(data)){\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks if the given data is valid i.e., not null, undefined and no empty string\n   * @param data\n   */\n  hasValue(data: any) {\n    if (data == null || data == undefined || data == \"undefined\" || data == \"null\" || data == 'Invalid Date') {\n      return false\n    }\n    if (data != null && typeof data === \"string\" && data.trim().length == 0) {\n      return false\n    }\n    return true\n  }\n  /**\n   * Check if value is null or empty and returns empty string.\n   * passed may be an array or string\n   * @param value\n   */\n  getNullForEmtpy(value: any) {\n    if (value != null && typeof value != \"undefined\") {\n      return value;\n    }\n    return \"\";\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goHome\n                        \n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ng-weight-watchers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseComponent } from './core/abstract-base/base.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent extends BaseComponent{\n  title = 'ng-weight-watchers';\n\n  constructor(private router:Router){\n      super();\n  }\n  ngOnInit(){\n    super.ngOnInit();\n  }\n  goHome(){\n    this.router.navigateByUrl(\"pages/home\");\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n        home\n     \n      \n    \n    \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                button{\n    margin-bottom:10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          home                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nAppModule -->\n\nFeaturesModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHttpMockInterceptor\n\nHttpMockInterceptor\n\nAppModule -->\n\nHttpMockInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpMockInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FeaturesModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { FeaturesModule } from './features/features.module';\nimport { CoreInjectorService } from './core/services/core-injector/core-injector.service';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpMockInterceptor } from './core/interceptor/http-mock.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    FeaturesModule,\n    AppRoutingModule,\n    HttpClientModule,\n    \n\n  ],\n  providers: [{provide:HTTP_INTERCEPTORS,useClass:HttpMockInterceptor,multi:true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(injector:Injector){\n    //used to create runtime instance of the services as needed for base classes.\n    CoreInjectorService.injector=injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule} from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from './core/components/login/login.component';\nimport { PageNotFoundComponent } from './core/components/page-not-found/page-not-found.component';\n\n\nconst routes: Routes = [\n \n  {\n    path: \"pages/login\",\n    component: LoginComponent,\n  },\n  \n  {\n    path: \"pages/home\",\n    loadChildren:()=>\"import('./pages/home/home.module').then(mod=>mod.HomeModule)\"\n  },\n  {\n    path: \"pages/dashboard\",\n    loadChildren:()=>\"import('./pages/personal-dashboard/personal-dashboard.module').then(mod=>mod.PersonalDashboardModule)\"\n  },\n  { path: \"\", redirectTo: \"pages/login\", pathMatch: \"full\" },\n  { path: \"**\", component:PageNotFoundComponent }\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth-guard/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: SessionStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth-guard/auth-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth-guard/auth-guard.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { SessionStorageService } from '../../services/session-storage/session-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n \n  constructor(private storageService:SessionStorageService,private router:Router) { }\n\n\n  canActivate(): boolean {\n    if (!this.storageService.isUserLoggedIn()) {\n      this.router.navigateByUrl(\"pages/login\");\n      this.storageService.clearAll();\n      return false;\n    }\n    this.storageService.emitIsLoggedin(true);\n    return true;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstract-base/base.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/abstract-base/base.component.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.component.ts:38\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.component.ts:20\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { AbstractBaseUtil } from './base.util';\nimport { SessionStorageService } from 'src/app/core/services/session-storage/session-storage.service';\nimport { CoreInjectorService } from 'src/app/core/services/core-injector/core-injector.service';\nimport { delay, map } from 'rxjs/operators';\n\nexport abstract class BaseComponent extends AbstractBaseUtil implements OnInit, OnDestroy{\n   \n    \n    _storageService:SessionStorageService;\n    _isLoggedIn:boolean;\n    constructor(){\n        super();\n        this._storageService=CoreInjectorService.injector.get(SessionStorageService);\n    }\n\n    /**\n     * Child classes may override\n     */\n    ngOnInit(): void {\n       this.listeToIsLoggedInStream();\n    }\n\n    listeToIsLoggedInStream(){\n        this.subsink.add(this._storageService.listenToisLogged().pipe(\n        delay(0),\n        map((isLoggedIn:boolean)=>{\n          this._isLoggedIn=isLoggedIn;\n        })\n        ).subscribe())\n      }\n\n    /**\n     * Child classes may use subsink to add any observable stream subscriptons.\n     * When method is override by child class, may call super.ngOnDestory() to clear all subscriptions \n     * added to subsink or _destory$ subject unless need to handle by itself. \n     */\n    ngOnDestroy(): void {\n        this.subsink.unsubscribe();\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstract-base/base.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _http\n                            \n                            \n                                    Protected\n                                _httpOptions\n                            \n                            \n                                    Protected\n                                _msgService\n                            \n                            \n                                    Protected\n                                _REST_URL\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildErrorResponse\n                            \n                            \n                                buildServiceRequest\n                            \n                            \n                                handleMessagesFromResponse\n                            \n                            \n                                invokeGet\n                            \n                            \n                                invokePost\n                            \n                            \n                                invokePut\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/abstract-base/base.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers:new HttpHeaders({'content-type':'application/json'})}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _msgService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessagesService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _REST_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/weightwatchers/api/\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/abstract-base/base.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nbuildErrorResponse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildServiceRequest\n                        \n                        \n                    \n                \n            \n            \n                \nbuildServiceRequest(url: string, data: any, handleMessages: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:117\n                \n            \n\n\n            \n                \n                    Builds the service request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    handleMessages\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessagesFromResponse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessagesFromResponse(request: ServiceRequest, response: ServiceResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:93\n                \n            \n\n\n            \n                \n                    To show messages is messages section based on the flag int by the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                ServiceResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokeGet\n                        \n                        \n                    \n                \n            \n            \n                \ninvokeGet(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:51\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke get operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePost\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePost(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:33\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke post operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePut\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePut(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/abstract-base/base.service.ts:70\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke put operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CoreInjectorService } from 'src/app/core/services/core-injector/core-injector.service';\nimport { ServiceRequest } from 'src/app/core/models/service-request.interface';\nimport { Type } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ServiceResponse } from 'src/app/core/models/service-response.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { AbstractBaseUtil } from './base.util';\nimport { IMessage } from 'src/app/core/models/message.interface';\nimport { MessagesService } from 'src/app/core/services/messages/messages.service';\nimport { MsgTypeEnum } from 'src/app/core/enums/msg-type.enum';\nimport { MessageEnum } from 'src/app/core/enums/messages.enum';\n\nexport abstract class BaseService extends AbstractBaseUtil{\n\n    protected _http:HttpClient;\n    protected _msgService:MessagesService;\n    protected _REST_URL=\"/weightwatchers/api/\"\n    protected _httpOptions={headers:new HttpHeaders({'content-type':'application/json'})};\n    constructor(){\n        super();\n        //manually injection of using CoreInjectorService to avoid every child class passing an insance to parent.\n        this._http=CoreInjectorService.injector.get(HttpClient);\n        this._msgService=CoreInjectorService.injector.get(MessagesService);\n        \n    }\n\n    /**\n     * Used by child service classes to invoke post operation\n     * @param url \n     * @param data \n     */\n    invokePost(request:ServiceRequest):Observable>{\n        return this._http.post>(this._REST_URL+request.url,request.data,this._httpOptions).pipe(\n            tap((response:ServiceResponse)=>{\n                 //handle any error messages from service based on the handleError flag set by the caller.\n                 this.handleMessagesFromResponse(request,response);                \n            }),\n            catchError((err)=>{\n                //use logger service to log errors\n                //return service error exception\n                return of(this.buildErrorResponse());\n               })\n        );\n    }\n\n    /**\n     * Used by child service classes to invoke get operation\n     * @param url \n     */\n    invokeGet(request:ServiceRequest):Observable>{\n        return this._http.get>(this._REST_URL+request.url).pipe(\n            tap((response:ServiceResponse)=>{//side effect\n                 //handle any error messages from service based on the handleError flag set by the caller.\n                this.handleMessagesFromResponse(request,response);\n            }),\n            catchError((err)=>{\n                //use logger service to log errors\n                //return service error exception\n                return of(this.buildErrorResponse());\n               })\n        );\n    }\n\n    /**\n     * Used by child service classes to invoke put operation\n     * @param url \n     * @param data \n     */\n    invokePut(request:ServiceRequest):Observable>{\n        return this._http.put>(this._REST_URL+request.url,request.data,this._httpOptions).pipe(\n            tap((response:ServiceResponse)=>{//side effect\n                //handle any error messages from service based on the handleError flag set by the caller.\n               this.handleMessagesFromResponse(request,response);\n           }),\n           catchError((err)=>{\n            //use logger service to log errors\n            //return service error exception\n            return of(this.buildErrorResponse());\n           })\n        );\n    }\n\n\n    //TODO: Add for Delete\n    //TODO: Add for Patch\n\n    /**\n     * To show messages is messages section based on the flag int by the request object\n     * @param request \n     * @param response \n     */\n    handleMessagesFromResponse(request:ServiceRequest, response:ServiceResponse){\n        if(request && request.handleMessages){\n            if(response){\n                let msgs:IMessage[]=new Array() as IMessage[];\n                //service may return combination of messages\n                msgs.concat(this._msgService.buildMessages(MsgTypeEnum.ERROR,response.errorMsgs))\n                    .concat(this._msgService.buildMessages(MsgTypeEnum.SUCCESS,response.successMsgs))\n                    .concat(this._msgService.buildMessages(MsgTypeEnum.INFO,response.infoMsgs))\n                \n                if(this.isValidArrayWithData(msgs)){\n                    this._msgService.showMessages(msgs);\n                }\n            }\n        }\n\n\n    }\n\n    /**\n     * Builds the service request object\n     * @param url \n     * @param data \n     * @param handleMessages \n     */\n    buildServiceRequest(url:string,data:any=null,handleMessages:boolean=true){\n        return {url:url,data:data,handleMessages:handleMessages} as ServiceRequest;\n    }\n\n    buildErrorResponse(){\n        return {success:false,errorMsgs:MessageEnum.SERVICE_FAILIRE} as ServiceResponse;\n    }\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreInjectorService.html":{"url":"injectables/CoreInjectorService.html","title":"injectable - CoreInjectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoreInjectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/core-injector/core-injector.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _injector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    injector\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/core-injector/core-injector.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        injector\n                    \n                \n\n                \n                    \n                        getinjector()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/core-injector/core-injector.service.ts:15\n                                \n                            \n\n                \n                    \n                        setinjector(injector)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/core-injector/core-injector.service.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            injector\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreInjectorService {\n\n  private static _injector:Injector;\n  \n  \n  static set injector(injector:Injector){\n    this._injector=injector;\n  }\n\n  static get injector():Injector{\n    return this._injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLoginComponent->CoreModule\n\n\n\n\n\nMessagesComponent\n\nMessagesComponent\n\nCoreModule -->\n\nMessagesComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nCoreModule -->\n\nTopToolbarComponent->CoreModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nCoreModule->LoginComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nTopToolbarComponent \n\nTopToolbarComponent \n\nTopToolbarComponent  -->\n\nCoreModule->TopToolbarComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MessagesComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TopToolbarComponent } from './components/top-toolbar/top-toolbar.component';\nimport { MaterialModule } from './material/material.module';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [TopToolbarComponent, MessagesComponent, LoginComponent, PageNotFoundComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  exports:[TopToolbarComponent,MaterialModule,LoginComponent]\n})\n\n//Core module should not dependency with any other modules\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesModule.html":{"url":"modules/FeaturesModule.html","title":"module - FeaturesModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_FeaturesModule_exports\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nLineChartComponent->FeaturesModule\n\n\n\n\n\nNameWeightCardComponent\n\nNameWeightCardComponent\n\nFeaturesModule -->\n\nNameWeightCardComponent->FeaturesModule\n\n\n\n\n\nProfileFormComponent\n\nProfileFormComponent\n\nFeaturesModule -->\n\nProfileFormComponent->FeaturesModule\n\n\n\n\n\nLineChartComponent \n\nLineChartComponent \n\nLineChartComponent  -->\n\nFeaturesModule->LineChartComponent \n\n\n\n\n\nNameWeightCardComponent \n\nNameWeightCardComponent \n\nNameWeightCardComponent  -->\n\nFeaturesModule->NameWeightCardComponent \n\n\n\n\n\nProfileFormComponent \n\nProfileFormComponent \n\nProfileFormComponent  -->\n\nFeaturesModule->ProfileFormComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nFeaturesModule -->\n\nCoreModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineChartComponent\n                        \n                        \n                            NameWeightCardComponent\n                        \n                        \n                            ProfileFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineChartComponent\n                        \n                        \n                            NameWeightCardComponent\n                        \n                        \n                            ProfileFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { ProfileFormComponent } from './components/profile-form/profile-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { CoreModule } from '../core/core.module';\nimport { NameWeightCardComponent } from './components/name-weight-card/name-weight-card.component';\nimport { RouterModule } from '@angular/router';\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\n\n\n\n\n@NgModule({\n  declarations: [ProfileFormComponent, NameWeightCardComponent, LineChartComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CoreModule,\n    SharedModule,\n   \n  ],\n  exports:[ProfileFormComponent,NameWeightCardComponent,LineChartComponent],\n  providers:[DatePipe]\n})\nexport class FeaturesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/components/home/home.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _users$\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cardClicked\n                            \n                            \n                                loadUsersFromSesssion\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/components/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cardClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncardClicked(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUsersFromSesssion\n                        \n                        \n                    \n                \n            \n            \n                \nloadUsersFromSesssion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/components/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _users$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/components/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { IPersonDetails } from 'src/app/features/models/person-details.interface';\nimport { Router } from '@angular/router';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent extends BaseComponent{\n\n\n  _users$:Observable;\n  constructor(private router:Router) {\n    super();\n   }\n\n\n  ngOnInit(): void {\n    this.loadUsersFromSesssion();\n  }\n\n\n  loadUsersFromSesssion(){\n    this._users$=this._storageService.getUsersFromSession();\n  }\n\n\n  /**\n   * \n   */\n  cardClicked(id:number){\n    this.router.navigateByUrl(\"pages/dashboard/\"+id);\n  }\n}\n\n    \n\n    \n        \n    person_add\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .mat-card{\n    padding:1em;\n    button{\n        &.add-person-icon{\n            position: absolute;\n            top:0px;\n            right:0px;\n            span{\n                &.material-icons{\n                    font-size:34px;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    person_add                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nHomeModule -->\n\nFeaturesModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            FeaturesModule\n                        \n                        \n                            HomeRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './components/home/home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { FeaturesModule } from 'src/app/features/features.module';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    FeaturesModule,\n    CoreModule,\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthGuardService } from 'src/app/core/guards/auth-guard/auth-guard.service';\n\n\n\n\nconst childRoutes: Routes=[\n  {\n    path: \"\",\n    component: HomeComponent,\n    canActivate: [AuthGuardService] \n  }\n];\n@NgModule({\n  imports:[RouterModule.forChild(childRoutes)],\n  exports:[RouterModule]\n})\nexport class HomeRoutingModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpMockInterceptor.html":{"url":"interceptors/HttpMockInterceptor.html","title":"interceptor - HttpMockInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpMockInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptor/http-mock.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: SessionStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptor/http-mock.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptor/http-mock.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ServiceResponse } from '../models/service-response.interface';\nimport { SessionStorageService } from '../services/session-storage/session-storage.service';\nimport { delay } from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class HttpMockInterceptor implements HttpInterceptor{\n    constructor(private storageService:SessionStorageService){\n\n    }\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n       \n      if(req.url.indexOf(\".json\")>-1){\n        return next.handle(req);\n      } else{\n      return new Observable>(observer=>{\n        let response:HttpResponse;\n        this.storageService.processRequestByUrl(req.url,req.body).pipe(delay(0)).subscribe((data:ServiceResponse)=>{\n          if(data!=null){\n            response=new HttpResponse({status:200, body:data});\n          }\n          observer.next(response);\n          observer.complete();\n          \n        });\n       });   \n      } \n    }\n    \n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                        message\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"error\" | \"success\" | \"info\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"error\" | \"success\" | \"info\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMessage{\n    type:'error'|'success'|'info';\n    message:string;\n    key?:string;//unique identifier for message, its an optional field.\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPersonDetails.html":{"url":"interfaces/IPersonDetails.html","title":"interface - IPersonDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPersonDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/models/person-details.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        history\n                                \n                                \n                                        id\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                        lastUpdated\n                                \n                                \n                                        name\n                                \n                                \n                                        username\n                                \n                                \n                                        weight\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:         IWeightHistory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeightHistory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdated\n                                    \n                                \n                                \n                                    \n                                        lastUpdated:     Date | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IWeightHistory } from './weight-history.interface';\n//Holds person details and weight histry details\nexport interface IPersonDetails{\n    id:number;//assuming mocked data will have unique id\n    name:string;\n    username:string;\n    age:number;\n    weight:number;\n    lastUpdated:Date|string;\n    imgSrc:string;\n    history:IWeightHistory[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser{\n    username:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeightHistory.html":{"url":"interfaces/IWeightHistory.html","title":"interface - IWeightHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeightHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/models/weight-history.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        lastUpdated\n                                \n                                \n                                        weight\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdated\n                                    \n                                \n                                \n                                    \n                                        lastUpdated:     Date | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWeightHistory{\n    id?:number; //assuming mocked data will have unique id\n    weight:number;\n    lastUpdated:Date|string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineChartComponent.html":{"url":"components/LineChartComponent.html","title":"component - LineChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/components/line-chart/line-chart.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-line-chart\n            \n\n            \n                styleUrls\n                ./line-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./line-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _weights\n                            \n                            \n                                height\n                            \n                            \n                                hostElement\n                            \n                            \n                                line\n                            \n                            \n                                margin\n                            \n                            \n                                svg\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                            \n                                xAxis\n                            \n                            \n                                yAxis\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawLineChart\n                            \n                            \n                                    Private\n                                drawXandYAxis\n                            \n                            \n                                    Private\n                                initalizeD3SvgObject\n                            \n                            \n                                initializeChart\n                            \n                            \n                                    Private\n                                initializeXandYAxis\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateChart\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weights\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    weights\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eleRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/components/line-chart/line-chart.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eleRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weights\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawLineChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawLineChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:127\n                \n            \n\n\n            \n                \n                    Draw linechart\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawXandYAxis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawXandYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:103\n                \n            \n\n\n            \n                \n                    draw x and y axis\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initalizeD3SvgObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initalizeD3SvgObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:86\n                \n            \n\n\n            \n                \n                    //initialize SVG object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeChart\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:67\n                \n            \n\n\n            \n                \n                    initalize chart.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeXandYAxis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeXandYAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:94\n                \n            \n\n\n            \n                \n                    //initalize x and y axis\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateChart\n                        \n                        \n                    \n                \n            \n            \n                \nupdateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/line-chart/line-chart.component.ts:80\n                \n            \n\n\n            \n                \n                    implement response update to the chart\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _weights\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IWeightHistory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostElement\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     d3Shape.Line<>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            margin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {top: 20, right: 20, bottom: 30, left: 50}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            svg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Line Chart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xAxis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yAxis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        weights\n                    \n                \n\n\n                \n                    \n                        setweights(weights: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/components/line-chart/line-chart.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            weights\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ViewEncapsulation, ElementRef } from '@angular/core';\n\nimport * as d3 from 'd3-selection';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Shape from 'd3-shape';\nimport * as d3Array from 'd3-array';\nimport * as d3Axis from 'd3-axis';\nimport { IWeightHistory } from '../../models/weight-history.interface';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LineChartComponent extends BaseComponent{\n\n    title = 'Line Chart';\n\n     margin = {top: 20, right: 20, bottom: 30, left: 50};\n     width: number;\n     height: number;\n     xAxis: any;\n     yAxis: any;\n     svg: any;\n     line: d3Shape.Line;\n     _weights:IWeightHistory[];\n     hostElement;\n    \n    constructor(private eleRef:ElementRef) {\n        super();\n        this.width = 900 - this.margin.left - this.margin.right;\n        this.height = 500 - this.margin.top - this.margin.bottom;\n        this.hostElement=this.eleRef.nativeElement;\n    }\n    @Input()\n    set weights(weights:IWeightHistory[]){\n     //Ensure weights data exists.\n      if(this.isValidArrayWithData(weights)){\n        this._weights=new Array() as IWeightHistory[];\n      \n        weights.forEach((iw:IWeightHistory)=>{\n          let w:IWeightHistory=new Object() as IWeightHistory;\n          //convert the date string to Date Object.\n          w.lastUpdated=new Date(iw.lastUpdated);\n          w.weight=iw.weight;\n          this._weights.push(w);\n        });\n        if(!this.svg){\n       //initialize line chart.\n        this.initializeChart();\n      }else{\n        this.updateChart();\n      }\n      }\n    }\n\n    ngOnInit() {\n     \n       \n    }\n\n    /**\n     * initalize chart.\n     */\n    initializeChart(){\n      //initialize SVG object\n      this.initalizeD3SvgObject();\n      //initalize x and y axis\n      this.initializeXandYAxis();\n      //draw x and y axis\n      this.drawXandYAxis();\n      //draw line path\n      this.drawLineChart();\n    }\n    /**\n     * implement response update to the chart\n     */\n    updateChart(){\n      //TODO:\n    }\n    /**\n     *  //initialize SVG object\n     */\n    private initalizeD3SvgObject() {\n        this.svg = d3.select(this.hostElement).append('svg').attr(\"height\",\"500\").attr(\"width\",\"900\")\n            .append('g')\n            .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n    }\n    /**\n     *  //initalize x and y axis\n     */\n    private initializeXandYAxis() {\n        this.xAxis = d3Scale.scaleTime().range([0, this.width]);\n        this.yAxis = d3Scale.scaleLinear().range([this.height, 0]);\n        this.xAxis.domain(d3Array.extent(this._weights, (d:IWeightHistory) => d.lastUpdated ));\n        this.yAxis.domain(d3Array.extent(this._weights, (d:IWeightHistory) => d.weight ));\n    }\n    /**\n     * draw x and y axis\n     */\n    private drawXandYAxis() {\n        //draw x axis line\n        this.svg.append('g')\n            //set class\n            .attr('class', 'axis x--axis')\n            //transform to horizontal line\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(d3Axis.axisBottom(this.xAxis));\n        //draw y axis line\n        this.svg.append('g')\n            .attr('class', 'axis y--axis')\n            .call(d3Axis.axisLeft(this.yAxis))\n            .append('text')\n            .attr('class', 'axis-title')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 8)\n            .attr('dy', '.50em')\n            .style('text-anchor', 'end')\n            .text('Weight (lbs)');//weight label to be shown on y-axis\n    }\n\n    /**\n     * Draw linechart\n     */\n    private drawLineChart() {\n        //draw the line with x with lastUpdated date and y-axis with weights.\n        this.line = d3Shape.line()\n            .x( (d: any) => this.xAxis(d.lastUpdated) )\n            .y( (d: any) => this.yAxis(d.weight) );\n        //to plot path using the data points provided\n        this.svg.append('path')\n            .datum(this._weights)\n            .attr('class', 'line')\n            .attr('d', this.line);\n    }\n\n    ngOnDestroy(){\n      super.ngOnDestroy();\n      console.log(\"ngDestroy called\");\n      d3.selectAll(\"svg > *\").remove();\n      d3.select(this.hostElement).select('svg').remove();\n      this.svg.selectAll(\"*\").remove();\n      //this.svg=null;\n    }\n\n}\n\n    \n\n    \n        Weight Chart\n -->\n    \n\n    \n                \n                    ./line-chart.component.scss\n                \n                  \n\n\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n.axis-title {\n    fill: none;\n    stroke: black;\n    stroke-width: 0.5px;\n}\n\n\n\n.line {\n    fill: none;\n    stroke: steelblue;\n    stroke-width: 1.5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Weight Chart -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/login/login.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _invalidUser\n                            \n                            \n                                _loginForm\n                            \n                            \n                                _users\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                loadUsers\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, mockDataService: MockDataService, storageService: SessionStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockDataService\n                                                  \n                                                        \n                                                                        MockDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:42\n                \n            \n\n\n            \n                \n                    To create reactive form group object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUsers\n                        \n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:59\n                \n            \n\n\n            \n                \n                    Load mock data users from assets\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _invalidUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/login/login.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/components/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                utility to get form control from form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IPersonDetails } from 'src/app/features/models/person-details.interface';\nimport { MockDataService } from '../../services/mock-data/mock-data.service';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { SessionStorageService } from '../../services/session-storage/session-storage.service';\nimport { StorageKeys } from '../../enums/storage-keys.enum';\nimport { Router } from '@angular/router';\nimport { BaseComponent } from '../../abstract-base/base.component';\nimport { IUser } from '../../models/user.interface';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseComponent {\n\n  _loginForm:FormGroup;\n  _users:IPersonDetails[];\n  _invalidUser:boolean=false;\n  //For demo purpose only using mockData service to load users while login component is rendering\n  constructor(private fb:FormBuilder,\n              private mockDataService:MockDataService,\n              private storageService:SessionStorageService,\n              private router:Router) { \n    super();\n  }\n\n  ngOnInit(): void {\n    this.createFormGroup();\n    this.loadUsers();\n  }\n\n\n  /**\n   * To create reactive form group object\n   */\n  createFormGroup(){\n    this._loginForm=this.fb.group({\n      username:new FormControl({value:\"\",disabled:false},[Validators.required,Validators.maxLength(50)]),\n      password: new FormControl({value:\"\",disabled:false},[Validators.required,Validators.maxLength(50)])\n    \n    });\n  }\n  /**\n   * utility to get form control from form group\n   */\n  get formControl(){\n    return this._loginForm.controls;\n  }\n\n  /**\n   * Load mock data users from assets\n   */\n  loadUsers(){\n  //\n    this.mockDataService.loadUsersFromAssets().pipe(  \n      //listen to this observer stream until component is destroyed. \n      takeUntil(this._destroy$),        \n      map((data:any)=>{\n        let users:IPersonDetails[]=null;\n        if(this.isValidArrayWithData(data)){\n          users=data as IPersonDetails[];\n          this.storageService.setDataInSessionStroageForKey(StorageKeys.USER_PROFILES,users);\n        } \n        return users;    \n      })\n    ).subscribe(((users:IPersonDetails[])=>{\n      this._users=users;\n    })); \n  \n   \n  }\n\n  login(){\n    let userName:string=this._loginForm.controls.username.value;\n    let password=this._loginForm.controls.password.value;\n    if(this.isValidArrayWithData(this._users)){\n      let ip:IPersonDetails[]=this._users.filter((p:IPersonDetails)=>{return p.username==userName});\n        if(this.isValidArrayWithData(ip)){\n          let user:IUser=new Object() as IUser;\n          user.username=userName;\n          this._storageService.setDataInSessionStroageForKey(StorageKeys.CURRENT_USER,user);\n          this.router.navigateByUrl(\"/pages/home\");\n          this._storageService.emitIsLoggedin(true);\n        }else{\n          this._invalidUser=true; \n        }\n    }else{\n      this._invalidUser=true; \n    }\n      \n  }\n\n}\n\n    \n\n    \n        \n    \n      Login\n      ng-weight-watchers\n    \n    \n     \n        \n            \n              User Name\n              \n              \n                Username is required.\n                            \n            \n          \n          \n            \n              Password\n              \n              \n                Password is required.\n                            \n            \n            \n              Username or password is incorrect\n              \n           \n          \n     \n    \n    \n      Login\n    \n  \n\n  \n    \n      Demo\n      username/password\n    \n    \n      \n         {{user.username}}/12345        \n       \n    \n  \n    \n\n    \n                \n                    ./login.component.scss\n                \n                .full-width{\n    width:300px;\n}\n.login-card{\n    text-align: center;\n}\n.mat-card-header{\n    width:100%;\n    display: block;\n    .mat-card-header-text{\n        width:100%;\n    }\n}\n.mat-card{\n    width:300px;\n    margin:auto;\n    height:30vh;\n}\n\n.mat-card-header .mat-card-title{\n    \n    font-weight:bold;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login      ng-weight-watchers                                               User Name                                            Username is required.                                                                                      Password                                            Password is required.                                                                  Username or password is incorrect                                                      Login                  Demo      username/password                       {{user.username}}/12345                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n//added Angular Material module\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/messages/messages.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                styleUrls\n                ./messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _showMsg\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listenToMessagesStream\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackBymsg\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                _messages\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(msgService: MessagesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/messages/messages.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msgService\n                                                  \n                                                        \n                                                                        MessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        _messages\n                    \n                \n                \n                    \n                        Type :         IMessage[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/messages/messages.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToMessagesStream\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToMessagesStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/messages/messages.component.ts:44\n                \n            \n\n\n            \n                \n                    Listen to message stream emitted via MessageService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/messages/messages.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackBymsg\n                        \n                        \n                    \n                \n            \n            \n                \ntrackBymsg(index: number, item: IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/messages/messages.component.ts:37\n                \n            \n\n\n            \n                \n                    Allows to track the message array by unique identifier which allows to update only dom changed rather than re-creating whole dome again.\nImproves performance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _showMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/messages/messages.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { IMessage } from '../../models/message.interface';\nimport { MessagesService } from '../../services/messages/messages.service';\nimport { delay, map } from 'rxjs/operators';\nimport { BaseComponent } from '../../abstract-base/base.component';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent extends BaseComponent {\n\n\n  @Input() _messages:IMessage[];\n\n  \n  //Flag to add or remove the messages section\n  _showMsg:boolean=false;\n\n  constructor(private msgService:MessagesService) {\n    super();\n   }\n\n  ngOnInit(): void {\n    this.listenToMessagesStream();\n  }\n\n\n  /**\n   * Allows to track the message array by unique identifier which allows to update only dom changed rather than re-creating whole dome again.\n   * Improves performance\n   * @param index \n   * @param item \n   */\n  trackBymsg(index:number,item:IMessage){\n    return item.message;\n  }\n\n  /**\n   * Listen to message stream emitted via MessageService\n   */\n  listenToMessagesStream(){\n    //Added to global observable pool as it can be destoryed when component destroyed using base component ngOnDestroy() to prevent memory leaks.\n    this.subsink.add(this.msgService.listenToMsgsStream().pipe(\n      delay(0),//added some delay to avoid console error messages like value changed after component is checked\n      map((msgs:IMessage[])=>{\n        if(this.isValidArrayWithData(msgs)){\n          this._messages=msgs;\n          //set the flag to true if the valid messages are found\n          this._showMsg=true;\n\n        }else{\n          this._messages=null;\n          //set the flag to false if no messages are found\n          this._showMsg=false;\n        }\n      })\n      ).subscribe());\n  }\n\n\n\n}\n\n    \n\n    \n        \n    \n    {{msg.type}}{{msg.message}}\n    \n\n  \n  \n    \n\n    \n                \n                    ./messages.component.scss\n                \n                .alert{\n    padding: 0.25rem;\n    &.alert-error{\n        color:red; //TODO: use scss gobal variable\n    }\n    &.alert-check{\n        color:green; //TODO: use scss gobal variable\n    }\n    &.alert-info{\n        color:blue;//TODO: use scss gobal variable\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{msg.type}}{{msg.message}}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/messages/messages.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _msgSubject$\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildMessages\n                            \n                            \n                                emitMessages\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                listenToMsgsStream\n                            \n                            \n                                showMessages\n                            \n                            \n                                success\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/messages/messages.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildMessages\n                        \n                        \n                    \n                \n            \n            \n                \nbuildMessages(type: MsgTypeEnum, msgs: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:74\n                \n            \n\n\n            \n                \n                    Builds the messages required by the Message Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MsgTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    msgs\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitMessages\n                        \n                        \n                    \n                \n            \n            \n                \nemitMessages(msgs: IMessage[] | IMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:23\n                \n            \n\n\n            \n                \n                    Emits single or multiple messages\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msgs\n                                    \n                                                IMessage[] | IMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(messages: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:38\n                \n            \n\n\n            \n                \n                    Build error messages array and emit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(messages: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:62\n                \n            \n\n\n            \n                \n                    Build error messages array and emit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToMsgsStream\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToMsgsStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:30\n                \n            \n\n\n            \n                \n                    Return messages stream observable\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMessages\n                        \n                        \n                    \n                \n            \n            \n                \nshowMessages(messages: IMessage[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:54\n                \n            \n\n\n            \n                \n                    Emit messages\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                                IMessage[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(messages: string[] | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/messages/messages.service.ts:46\n                \n            \n\n\n            \n                \n                    Build error messages array and emit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                            string[] | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _msgSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/messages/messages.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MsgTypeEnum } from '../../enums/msg-type.enum';\nimport { IMessage } from '../../models/message.interface';\nimport { AbstractBaseUtil } from '../../abstract-base/base.util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService extends AbstractBaseUtil{\n\n  _msgSubject$=new Subject();\n  \n  constructor() {\n    super();\n   }\n\n  /**\n   * Emits single or multiple messages\n   * @param msgs \n   */\n  emitMessages(msgs:IMessage[]|IMessage){\n    this._msgSubject$.next(msgs);\n  }\n\n  /**\n   * Return messages stream observable\n   */\n  listenToMsgsStream(){\n    return this._msgSubject$.asObservable();\n  }\n\n  /**\n   * Build error messages array and emit\n   * @param messages \n   */\n  error(messages:string[]|string){\n    this.emitMessages(this.buildMessages(MsgTypeEnum.ERROR,messages));\n  }\n\n  /**\n   * Build error messages array and emit\n   * @param messages \n   */\n  success(messages:string[]|string){\n    this.emitMessages(this.buildMessages(MsgTypeEnum.ERROR,messages));\n  }\n\n  /**\n   * Emit messages\n   * @param messages \n   */\n  showMessages(messages:IMessage[]){\n    this.emitMessages(messages);\n  }\n\n  /**\n   * Build error messages array and emit\n   * @param messages \n   */\n  info(messages:string[]|string){\n    this.emitMessages(this.buildMessages(MsgTypeEnum.ERROR,messages));\n  }\n\n\n\n\n  /**\n   * Builds the messages required by the Message Component\n   * @param type \n   * @param msgs \n   */\n  buildMessages(type:MsgTypeEnum, msgs:string[]|string){\n    let messages=null;\n    //to check if msgs are of type array and has data in it\n    if(this.isValidArrayWithData(msgs)){\n      messages=new Array() as IMessage[];\n      //type cast to string[]\n      (msgs).forEach((msg:string)=>{\n        messages.push({\"type\":type,message:msg} as IMessage);\n      });\n    }\n    else if(this.hasValue(msgs)){\n      messages=new Array() as IMessage[];\n      messages.push({\"type\":type,message:(msgs)} as IMessage);\n    }\n    return messages;\n  }\n  \n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockDataService.html":{"url":"injectables/MockDataService.html","title":"injectable - MockDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/mock-data/mock-data.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseUtil\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _jsonUrl\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadUsersFromAssets\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/mock-data/mock-data.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUsersFromAssets\n                        \n                        \n                    \n                \n            \n            \n                \nloadUsersFromAssets()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/mock-data/mock-data.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _jsonUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/data/users.json'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/mock-data/mock-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { AbstractBaseUtil } from '../../abstract-base/base.util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataService extends AbstractBaseUtil{\n//This service doesn't extend the BaseService as it is used to load mock data file from /assets/data/user.json file\n _jsonUrl='assets/data/users.json';\n\n  constructor(private http:HttpClient) {\n    super();\n   }\n\n\n  loadUsersFromAssets(){\n   return this.http.get(this._jsonUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameWeightCardComponent.html":{"url":"components/NameWeightCardComponent.html","title":"component - NameWeightCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameWeightCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/components/name-weight-card/name-weight-card.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-name-weight-card\n            \n\n            \n                styleUrls\n                ./name-weight-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-weight-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                userName\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cardClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/name-weight-card/name-weight-card.component.ts:31\n                \n            \n\n\n            \n                \n                    emit id to the parent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\n\n\n\n@Component({\n  selector: 'app-name-weight-card',\n  templateUrl: './name-weight-card.component.html',\n  styleUrls: ['./name-weight-card.component.scss']\n})\nexport class NameWeightCardComponent extends BaseComponent {\n\n\n  @Input() name:string;\n  @Input() weight:number=0;\n  @Input() id:number;\n  @Input() userName:string;\n  @Output() cardClicked=new EventEmitter();\n\n  constructor() { \n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * emit id to the parent.\n   * \n   */\n  onClick(){\n    this.cardClicked.emit(this.id);\n  }\n\n}\n\n    \n\n    \n            \n    {{name}}\n    {{weight}} lbs\n    delete_forever\n\n    \n\n    \n                \n                    ./name-weight-card.component.scss\n                \n                .mat-card{\n    width:300px;\n    margin:auto;\n    text-align: center;\n    margin-bottom:30px;\n\n    h1{\n        span{\n            .suffix{\n                padding:0.25rem;\n                font-size:18px;\n            }\n        }\n    }\n    button{\n        &.delete-icon{\n            position: absolute;\n            top:0px;\n            right:0px;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{name}}    {{weight}} lbs    delete_forever'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameWeightCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumbersonlyDirective.html":{"url":"directives/NumbersonlyDirective.html","title":"directive - NumbersonlyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumbersonlyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/numbersonly/numbersonly.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: NumbersonlyDirective }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appNumbersonly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                    Static\n                                validateNumbersOnly\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            registerOnValidatorChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            validateNumbersOnly\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateNumbersOnly(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/numbersonly/numbersonly.directive.ts:28\n                \n            \n\n\n            \n                \n                    Validates if the entered value is a number or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationErrors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { FormControl, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appNumbersonly]',\n  providers:[\n    {provide:NG_VALIDATORS,useExisting:NumbersonlyDirective}\n  ]\n})\nexport class NumbersonlyDirective  implements Validator{\n \n\n  constructor() { }\n\n  \n  validate(control: FormControl):ValidationErrors|null {\n    return NumbersonlyDirective.validateNumbersOnly(control);\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    return null;\n  }\n\n\n  /**\n   * Validates if the entered value is a number or not.\n   * @param control \n   */\n  static validateNumbersOnly(control:FormControl):ValidationErrors{\n   \n    let value=control.value;\n    //Ensure that this validation is triggered only if value exists\n    if(!value || value.length==0){\n      return null;\n    }\n\n    let regexNumber:RegExp=new RegExp(/^[+ 0-9]/);\n    let isValid=regexNumber.test(value);\n    \n    return (!isValid)?{numbersonly:\"Only numbers are allowed\"} as ValidationErrors:null;\n\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        page-not-found works!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'page-not-found works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonDetailsService.html":{"url":"injectables/PersonDetailsService.html","title":"injectable - PersonDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersonDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/services/person-details.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _http\n                            \n                            \n                                    Protected\n                                _httpOptions\n                            \n                            \n                                    Protected\n                                _msgService\n                            \n                            \n                                    Protected\n                                _REST_URL\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUsers\n                            \n                            \n                                getUserById\n                            \n                            \n                                saveChanges\n                            \n                            \n                                buildErrorResponse\n                            \n                            \n                                buildServiceRequest\n                            \n                            \n                                handleMessagesFromResponse\n                            \n                            \n                                invokeGet\n                            \n                            \n                                invokePost\n                            \n                            \n                                invokePut\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/services/person-details.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:25\n                \n            \n\n\n            \n                \n                    Get all users\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:41\n                \n            \n\n\n            \n                \n                    Get User information by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveChanges\n                        \n                        \n                    \n                \n            \n            \n                \nsaveChanges(iPersonDetails: IPersonDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/services/person-details.service.ts:60\n                \n            \n\n\n            \n                \n                    invoke service to save data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iPersonDetails\n                                    \n                                                IPersonDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nbuildErrorResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildServiceRequest\n                        \n                        \n                    \n                \n            \n            \n                \nbuildServiceRequest(url: string, data: any, handleMessages: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:117\n\n                \n            \n\n\n            \n                \n                    Builds the service request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    handleMessages\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessagesFromResponse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessagesFromResponse(request: ServiceRequest, response: ServiceResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n                    To show messages is messages section based on the flag int by the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                ServiceResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokeGet\n                        \n                        \n                    \n                \n            \n            \n                \ninvokeGet(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:51\n\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke get operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePost\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePost(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:33\n\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke post operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invokePut\n                        \n                        \n                    \n                \n            \n            \n                \ninvokePut(request: ServiceRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n                    Used by child service classes to invoke put operation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ServiceRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers:new HttpHeaders({'content-type':'application/json'})}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _msgService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessagesService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _REST_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/weightwatchers/api/\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { IPersonDetails } from '../models/person-details.interface';\nimport { ServiceUrls } from 'src/app/core/enums/service-url.enum';\nimport { ServiceResponse } from 'src/app/core/models/service-response.interface';\nimport {map} from 'rxjs/operators';\nimport { BaseService } from 'src/app/core/abstract-base/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonDetailsService extends BaseService{\n\n  constructor() {\n    super();\n   }\n\n  \n\n  /**\n   * Get all users\n   */\n  getAllUsers():Observable{\n    let request=this.buildServiceRequest(ServiceUrls.GET_ALL_USERS,null);\n    return this.invokeGet(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails[];\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Get User information by id\n   * @param id \n   */\n  getUserById(id:number):Observable{\n    //To ensure that enum value is not changed\n    let userURL=ServiceUrls.GET_USER.repeat(1)+\"/\"+id;\n    let request=this.buildServiceRequest(userURL);\n    return this.invokeGet(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails;\n        }\n        return null;\n      })\n    );\n\n  }\n\n  /**\n   * invoke service to save data\n   * @param iPersonDetails \n   */\n  saveChanges(iPersonDetails:IPersonDetails){\n    let request=this.buildServiceRequest(ServiceUrls.SAVE_USER,iPersonDetails);\n    return this.invokePost(request).pipe(\n      map((response:ServiceResponse)=>{\n        if(response!=null){\n          return response.data as IPersonDetails;\n        }\n        return null;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalDashboardComponent.html":{"url":"components/PersonalDashboardComponent.html","title":"component - PersonalDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonalDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-dashboard\n            \n\n            \n                styleUrls\n                ./personal-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./personal-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _iweights\n                            \n                            \n                                _personDetails\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataChanged\n                            \n                            \n                                getIdFromRoute\n                            \n                            \n                                loadPersonDetails\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, personDetailsService: PersonDetailsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personDetailsService\n                                                  \n                                                        \n                                                                        PersonDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dataChanged\n                        \n                        \n                    \n                \n            \n            \n                \ndataChanged(ipersonDetails: IPersonDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ipersonDetails\n                                    \n                                                IPersonDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIdFromRoute\n                        \n                        \n                    \n                \n            \n            \n                \ngetIdFromRoute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPersonDetails\n                        \n                        \n                    \n                \n            \n            \n                \nloadPersonDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:35\n                \n            \n\n\n            \n                \n                    get person Id from activated route and load data from session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _iweights\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IWeightHistory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _personDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\nimport { IPersonDetails } from 'src/app/features/models/person-details.interface';\nimport { takeUntil, concatMap } from 'rxjs/operators';\nimport { PersonDetailsService } from 'src/app/features/services/person-details.service';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\nimport { IWeightHistory } from 'src/app/features/models/weight-history.interface';\n\n@Component({\n  selector: 'app-personal-dashboard',\n  templateUrl: './personal-dashboard.component.html',\n  styleUrls: ['./personal-dashboard.component.scss']\n})\nexport class PersonalDashboardComponent extends BaseComponent {\n\n  constructor(private activatedRoute:ActivatedRoute,\n    private personDetailsService:PersonDetailsService,\n    private router:Router) { \n    super();\n  }\n\n _personDetails:IPersonDetails;\n  _id:number;\n  _iweights:IWeightHistory[];\n  \n  ngOnInit(): void {\n    this.loadPersonDetails();\n  }\n\n  /**\n   * get person Id from activated route and load data from session\n   */\n  loadPersonDetails(){\n    this.getIdFromRoute().pipe(\n      takeUntil(this._destroy$),\n      concatMap((id:number)=>{\n        return this.personDetailsService.getUserById(id);\n      })).subscribe((data:IPersonDetails)=>{\n        this._personDetails=data;\n        this._iweights=[...this._personDetails.history];\n\n      });\n\n      \n\n\n  }\n\n  getIdFromRoute():Observable{\n    return new Observable(observer=>{\n      this.subsink.add(this.activatedRoute.params.subscribe(params=>{\n        this._id=!isNaN(params['id'])?new Number(params['id']).valueOf():null;\n        observer.next(this._id);\n        observer.complete();\n      }));\n    });\n  }\n\n\n  dataChanged(ipersonDetails:IPersonDetails){\n    this._personDetails=ipersonDetails;\n    this._iweights=null;\n    this._iweights=[...this._personDetails.history];\n    this.personDetailsService.saveChanges(this._personDetails).subscribe((data)=>{\n      this.router.navigateByUrl(\"pages/home\");\n    });\n\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n    \n                \n                    ./personal-dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'PersonalDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonalDashboardModule.html":{"url":"modules/PersonalDashboardModule.html","title":"module - PersonalDashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonalDashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PersonalDashboardModule\n\n\n\ncluster_PersonalDashboardModule_declarations\n\n\n\ncluster_PersonalDashboardModule_imports\n\n\n\n\nPersonalDashboardComponent\n\nPersonalDashboardComponent\n\n\n\nPersonalDashboardModule\n\nPersonalDashboardModule\n\nPersonalDashboardModule -->\n\nPersonalDashboardComponent->PersonalDashboardModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nPersonalDashboardModule -->\n\nCoreModule->PersonalDashboardModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nPersonalDashboardModule -->\n\nFeaturesModule->PersonalDashboardModule\n\n\n\n\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardModule -->\n\nPersonalDashboardRoutingModule->PersonalDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/personal-dashboard/personal-dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PersonalDashboardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            FeaturesModule\n                        \n                        \n                            PersonalDashboardRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PersonalDashboardComponent } from './components/personal-dashboard/personal-dashboard.component';\nimport { PersonalDashboardRoutingModule } from './personal-dashboard-routing.module';\nimport { FeaturesModule } from 'src/app/features/features.module';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n\n@NgModule({\n  declarations: [PersonalDashboardComponent],\n  imports: [\n    CommonModule,\n    PersonalDashboardRoutingModule,\n    FeaturesModule,\n    CoreModule,\n  ]\n})\nexport class PersonalDashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonalDashboardRoutingModule.html":{"url":"modules/PersonalDashboardRoutingModule.html","title":"module - PersonalDashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonalDashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/personal-dashboard/personal-dashboard-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { PersonalDashboardComponent } from './components/personal-dashboard/personal-dashboard.component';\nimport { AuthGuardService } from 'src/app/core/guards/auth-guard/auth-guard.service';\n\n\n\n\nconst childRoutes: Routes=[\n  {\n    path: \":id\",\n    component: PersonalDashboardComponent,\n    canActivate: [AuthGuardService] \n  }\n];\n@NgModule({\n  imports:[RouterModule.forChild(childRoutes)],\n  exports:[RouterModule]\n})\nexport class PersonalDashboardRoutingModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileFormComponent.html":{"url":"components/ProfileFormComponent.html","title":"component - ProfileFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/components/profile-form/profile-form.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-form\n            \n\n            \n                styleUrls\n                ./profile-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _editProfilePic\n                            \n                            \n                                _imgSrc\n                            \n                            \n                                _personDetails\n                            \n                            \n                                _profileForm\n                            \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeFieldState\n                            \n                            \n                                checkForMode\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                enableOrDisableFormFields\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEdit\n                            \n                            \n                                onFileInput\n                            \n                            \n                                onSave\n                            \n                            \n                                updateFormGroup\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                personDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChanged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    personDetails\n                                \n                                \n                                    formControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, domSanitzer: DomSanitizer, datePipe: DatePipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/components/profile-form/profile-form.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitzer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     \"edit\" | \"readonly\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        personDetails\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:47\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeFieldState\n                        \n                        \n                    \n                \n            \n            \n                \nchangeFieldState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:165\n                \n            \n\n\n            \n                \n                    Delegate toggle field state change based  on the mode (edit or readonly)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkForMode\n                        \n                        \n                    \n                \n            \n            \n                \ncheckForMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:98\n                \n            \n\n\n            \n                \n                    To determine the current state of the form\nif mode=='readonly' returns true else false\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:62\n                \n            \n\n\n            \n                \n                    Create the reative form group object\nlastUpdated is always disabled. (readonly)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableOrDisableFormFields\n                        \n                        \n                    \n                \n            \n            \n                \nenableOrDisableFormFields(disable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:179\n                \n            \n\n\n            \n                \n                    implements the field state change based on the flag provided.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \nonEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:124\n                \n            \n\n\n            \n                \n                    change the form mode to edit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileInput\n                        \n                        \n                    \n                \n            \n            \n                \nonFileInput($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:107\n                \n            \n\n\n            \n                \n                    Convert uploaded file to image data url;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:133\n                \n            \n\n\n            \n                \n                    Save data via service and change the mode to readonly\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/components/profile-form/profile-form.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _editProfilePic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"disabled\" | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _personDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPersonDetails\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _profileForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        personDetails\n                    \n                \n\n\n                \n                    \n                        setpersonDetails(personDetails)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            personDetails\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/components/profile-form/profile-form.component.ts:91\n                                \n                            \n                    \n                        \n                                utility to get formcontrols from formGroup object\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IPersonDetails } from '../../models/person-details.interface';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nimport { NumbersonlyDirective } from 'src/app/shared/directives/numbersonly/numbersonly.directive';\nimport { BaseComponent } from 'src/app/core/abstract-base/base.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DatePipe } from '@angular/common';\nimport { IWeightHistory } from '../../models/weight-history.interface';\nimport { last } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile-form',\n  templateUrl: './profile-form.component.html',\n  styleUrls: ['./profile-form.component.scss']\n})\nexport class ProfileFormComponent extends BaseComponent {\n\n  //form controls for a given form\n  _profileForm:FormGroup;\n  //person details including weight history\n  _personDetails:IPersonDetails;\n  \n  \n \n\n  //mode to determine edit or readonly\n  @Input() mode:'edit'|'readonly'='edit';\n\n\n  //emit data changed\n  @Output() dataChanged=new EventEmitter();\n   \n  //local variable to hold profile picture image data url\n  _imgSrc:string;\n\n  //to enable or disable edit profile pic\n  _editProfilePic:\"disabled\"|null=null;\n\n  constructor(private fb:FormBuilder,\n    private domSanitzer:DomSanitizer,\n    private datePipe:DatePipe) {\n    super();\n   }\n\n   @Input()\n   set personDetails(personDetails:IPersonDetails){\n    this._personDetails=personDetails;\n    //need to update the form control with values as there is a possibility formGroup is already initiated.\n    this.updateFormGroup();\n   }\n\n  ngOnInit(): void {\n    this.createFormGroup();\n  }\n\n\n  /**\n   * Create the reative form group object\n   * lastUpdated is always disabled. (readonly)\n   */\n  createFormGroup():void{\n    this._profileForm=this.fb.group({\n      name:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.name))?this.personDetails.name:\"\",disabled:this.checkForMode()},[Validators.required,Validators.maxLength(100)]),\n      age:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.age))?this.personDetails.age:\"\",disabled:this.checkForMode()},[NumbersonlyDirective.validateNumbersOnly,Validators.maxLength(3)]),\n      weight:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.weight))?this.personDetails.weight:\"\",disabled:this.checkForMode()},[NumbersonlyDirective.validateNumbersOnly,Validators.maxLength(3)]),\n      lastUpdated:new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.lastUpdated))?this.personDetails.lastUpdated:\"\",disabled:true},[]),\n      imgSrc: new FormControl({value:(this.hasValue(this.personDetails) && this.hasValue(this.personDetails.imgSrc))?this.personDetails.imgSrc:\"\",disabled:false},[])\n    });\n  }\n\n  /**\n   * \n   */\n  updateFormGroup(){\n    if(this.hasValue(this._personDetails)){\n      this._profileForm.controls.name.setValue(this._personDetails.name);\n      this._profileForm.controls.age.setValue(this._personDetails.age);\n      this._profileForm.controls.weight.setValue(this._personDetails.weight);\n      this._profileForm.controls.lastUpdated.setValue(this._personDetails.lastUpdated);\n      this._imgSrc=this._personDetails.imgSrc+\"\";\n      if(this._imgSrc){\n        this._editProfilePic=\"disabled\";\n      }\n    }\n  }\n\n  /**\n   * utility to get formcontrols from formGroup object\n   */\n  get formControl(){\n    return this._profileForm.controls;\n  }\n  /**\n   * To determine the current state of the form\n   * if mode=='readonly' returns true else false\n   */\n  checkForMode(){\n    return this.mode==='readonly'?true:false;\n  }\n\n\n  /**\n   * Convert uploaded file to image data url;\n   * @param $event \n   */\n  onFileInput($event){\n    if($event.target.files.length>0){\n      let fileReader=new FileReader();\n      const [file]=$event.target.files;\n      fileReader.readAsDataURL(file);\n      fileReader.onload=()=>{\n        this._imgSrc=fileReader.result as string;        \n        let imgs=this._imgSrc.repeat(1);\n        this._personDetails.imgSrc=imgs;       \n      }\n    }\n  }\n\n  /**\n   * change the form mode to edit\n   * \n   */\n  onEdit(){\n    this.mode=\"edit\";\n    this.changeFieldState();\n\n  }\n\n  /**\n   * Save data via service and change the mode to readonly\n   */\n  onSave(){\n    this.mode=\"readonly\";\n    this.changeFieldState();\n    this._personDetails.name=this._profileForm.controls.name.value;\n    this._personDetails.age=this._profileForm.controls.age.value;\n    \n    let weight=this._profileForm.controls.weight.value;\n    //if weight value is changed then update the history object\n    if(weight!=this._personDetails.weight){\n      let lastUpdated:string=this.datePipe.transform(new Date(),\"MM/dd/yyyy\");\n      let historyData:IWeightHistory=new Object() as IWeightHistory;\n      historyData.weight=weight;\n      historyData.lastUpdated=lastUpdated;\n      this._profileForm.controls.lastUpdated.setValue(lastUpdated);\n      this._personDetails.weight=weight;\n      this._personDetails.lastUpdated=lastUpdated;\n      let weights:IWeightHistory[]=this.isValidArrayWithData(this._personDetails.history)?this._personDetails.history:new Array() as IWeightHistory[];\n      let filterItem=weights.filter((iw:IWeightHistory)=>{return iw.lastUpdated===lastUpdated});\n      if(this.isValidArrayWithData(filterItem)){\n        filterItem[0].weight=weight;\n      }else{\n        weights.push(historyData);\n      }\n\n    }\n\n    this.dataChanged.emit(this._personDetails);\n  }\n\n  /**\n   * Delegate toggle field state change based  on the mode (edit or readonly)\n   */\n  changeFieldState(){\n    switch(this.mode){\n      case \"edit\":\n        this.enableOrDisableFormFields(false);\n        break;\n      case \"readonly\":\n        this.enableOrDisableFormFields(true);\n        break;\n    }\n  }\n\n  /**\n   * implements the field state change based on the flag provided.\n   */\n  enableOrDisableFormFields(disable:boolean){\n    (disable)?this._profileForm.controls.name.disable():this._profileForm.controls.name.enable();\n    (disable)?this._profileForm.controls.age.disable():this._profileForm.controls.age.enable();\n    (disable)?this._profileForm.controls.weight.disable():this._profileForm.controls.weight.enable();\n    if(disable){\n      this._editProfilePic=\"disabled\";\n    }else{\n      this._editProfilePic=null;\n    }\n  }\n\n \n\n}\n\n    \n\n    \n        \n\n      \n    Profile\n  \n  \n\n    \n      \n        \n          \n            \n            Upload\n            \n              \n              edit\n          \n         \n          \n            \n              \n                Name\n                \n                \n                  name is required.\n                \n                \n              \n            \n            \n              \n                Weight\n                \n                \n                  Weight is required.\n                \n                \n                  Only Numbers are allowed\n                \n              \n            \n            \n              \n                Age\n                \n                \n                  Age is required.\n                \n                \n                  Only Numbers are allowed\n                \n              \n            \n            \n              \n                Last Updated\n                \n              \n            \n          \n        \n      \n\n    \n\n\n  \n  \n    \n    Edit\n    Save\n  \n  \n\n    \n\n    \n                \n                    ./profile-form.component.scss\n                \n                .full-width{\n    width:300px;\n}\n\n.pull-right{\n    float:right;\n}\n\n.mat-form-field{\n    margin-bottom:0.25em;\n}\n.mat-card-actions{\n    min-height:40px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Profile                                                        Upload                                        edit                                                                       Name                                                  name is required.                                                                                                    Weight                                                  Weight is required.                                                  Only Numbers are allowed                                                                                    Age                                                  Age is required.                                                  Only Numbers are allowed                                                                                    Last Updated                                                                                  Edit    Save    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceRequest.html":{"url":"interfaces/ServiceRequest.html","title":"interface - ServiceRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/service-request.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        handleMessages\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handleMessages\n                                    \n                                \n                                \n                                    \n                                        handleMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ServiceRequest{\n       //service url\n       url:string;\n       //generic data place holder\n       data:T;\n       //delegate message handling to base class\n       handleMessages:boolean;//\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceResponse.html":{"url":"interfaces/ServiceResponse.html","title":"interface - ServiceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/service-response.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        errorMsgs\n                                \n                                \n                                        infoMsgs\n                                \n                                \n                                        success\n                                \n                                \n                                        successMsgs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsgs\n                                    \n                                \n                                \n                                    \n                                        errorMsgs:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        infoMsgs\n                                    \n                                \n                                \n                                    \n                                        infoMsgs:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successMsgs\n                                    \n                                \n                                \n                                    \n                                        successMsgs:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ServiceResponse{\n    //is false if error or info msgs exists otherwise its true irrespective of succesMsgs exists or not.\n    success:boolean;\n    //service returs error message(s)\n    errorMsgs:string[]|string;\n    //service returns success message(s)\n    successMsgs:string[]|string;\n    // service returns info message(s)\n    infoMsgs:string[]|string;\n    //payload\n    data:T;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nNumbersonlyDirective\n\nNumbersonlyDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNumbersonlyDirective->SharedModule\n\n\n\n\n\nNumbersonlyDirective \n\nNumbersonlyDirective \n\nNumbersonlyDirective  -->\n\nSharedModule->NumbersonlyDirective \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nSharedModule -->\n\nCoreModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumbersonlyDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumbersonlyDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumbersonlyDirective } from './directives/numbersonly/numbersonly.directive';\nimport { CoreModule } from '../core/core.module';\n\n\n\n@NgModule({\n  declarations: [NumbersonlyDirective],\n  imports: [\n    CommonModule,\n    CoreModule,\n  ],\n  exports:[\n   \n    NumbersonlyDirective\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _isLoggedIn\n                            \n                            \n                                _storageService\n                            \n                            \n                                    Protected\n                                _destroy$\n                            \n                            \n                                subsink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                listeToIsLoggedInStream\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                getNullForEmtpy\n                            \n                            \n                                hasValue\n                            \n                            \n                                isValidArray\n                            \n                            \n                                isValidArrayWithData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/top-toolbar/top-toolbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/top-toolbar/top-toolbar.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/top-toolbar/top-toolbar.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listeToIsLoggedInStream\n                        \n                        \n                    \n                \n            \n            \n                \nlisteToIsLoggedInStream()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:38\n\n                \n            \n\n\n            \n                \n                    Child classes may use subsink to add any observable stream subscriptons.\nWhen method is override by child class, may call super.ngOnDestory() to clear all subscriptions \nadded to subsink or _destory$ subject unless need to handle by itself. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:20\n\n                \n            \n\n\n            \n                \n                    Child classes may override\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNullForEmtpy\n                        \n                        \n                    \n                \n            \n            \n                \ngetNullForEmtpy(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:55\n\n                \n            \n\n\n            \n                \n                    Check if value is null or empty and returns empty string.\npassed may be an array or string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:41\n\n                \n            \n\n\n            \n                \n                    Checks if the given data is valid i.e., not null, undefined and no empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArray(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:31\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValidArrayWithData\n                        \n                        \n                    \n                \n            \n            \n                \nisValidArrayWithData(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseUtil\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseUtil:21\n\n                \n            \n\n\n            \n                \n                    Checks if the given object is an array with data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _storageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionStorageService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SubSink()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseUtil\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseUtil:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../abstract-base/base.component';\nimport { SessionStorageService } from '../../services/session-storage/session-storage.service';\nimport { Router } from '@angular/router';\nimport { delay, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent extends BaseComponent {\n\n  constructor(private router:Router) {\n    super();\n   }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  \n\n  logout(){\n    this._storageService.clearAll();\n    this.router.navigateByUrl(\"pages/login\");\n    this._storageService.emitIsLoggedin(false);\n\n  }\n\n}\n\n    \n\n    \n        \n    games\n    ng-weight-watchers\n    \n    \n     Logout\n    \n  \n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                .brand-title{\n    font-weight:bold;\n    padding:0.35em;\n    font-size:20px;\n}\n.fill-space{\n    flex: 1 0 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    games    ng-weight-watchers             Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LineChartComponent', 'selector': 'app-line-chart'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NameWeightCardComponent', 'selector': 'app-name-weight-card'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PersonalDashboardComponent', 'selector': 'app-personal-dashboard'},{'name': 'ProfileFormComponent', 'selector': 'app-profile-form'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'}];\n    var DIRECTIVES = [{'name': 'NumbersonlyDirective', 'selector': '[appNumbersonly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/core/abstract-base/base.component.ts\n            \n            class\n            BaseComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/core/abstract-base/base.service.ts\n            \n            class\n            BaseService\n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                \n                src/app/core/abstract-base/base.util.ts\n            \n            class\n            AbstractBaseUtil\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/core/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                40 %\n                (8/20)\n            \n        \n        \n            \n                \n                src/app/core/components/messages/messages.component.ts\n            \n            component\n            MessagesComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/core/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/components/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-guard/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptor/http-mock.interceptor.ts\n            \n            interceptor\n            HttpMockInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/message.interface.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/service-request.interface.ts\n            \n            interface\n            ServiceRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/service-response.interface.ts\n            \n            interface\n            ServiceResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/models/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/core-injector/core-injector.service.ts\n            \n            injectable\n            CoreInjectorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                src/app/core/services/mock-data/mock-data.service.ts\n            \n            injectable\n            MockDataService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage/session-storage.service.ts\n            \n            injectable\n            SessionStorageService\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                src/app/features/components/line-chart/line-chart.component.ts\n            \n            component\n            LineChartComponent\n            \n                37 %\n                (12/32)\n            \n        \n        \n            \n                \n                src/app/features/components/name-weight-card/name-weight-card.component.ts\n            \n            component\n            NameWeightCardComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/features/components/profile-form/profile-form.component.ts\n            \n            component\n            ProfileFormComponent\n            \n                44 %\n                (13/29)\n            \n        \n        \n            \n                \n                src/app/features/models/person-details.interface.ts\n            \n            interface\n            IPersonDetails\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/models/weight-history.interface.ts\n            \n            interface\n            IWeightHistory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/services/person-details.service.ts\n            \n            injectable\n            PersonDetailsService\n            \n                59 %\n                (16/27)\n            \n        \n        \n            \n                \n                src/app/pages/home/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                35 %\n                (6/17)\n            \n        \n        \n            \n                \n                src/app/pages/personal-dashboard/components/personal-dashboard/personal-dashboard.component.ts\n            \n            component\n            PersonalDashboardComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/shared/directives/numbersonly/numbersonly.directive.ts\n            \n            directive\n            NumbersonlyDirective\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.0.0\n        \n            @angular/common : ~9.0.0\n        \n            @angular/compiler : ~9.0.0\n        \n            @angular/core : ~9.0.0\n        \n            @angular/elements : ^9.0.1\n        \n            @angular/forms : ~9.0.0\n        \n            @angular/platform-browser : ~9.0.0\n        \n            @angular/platform-browser-dynamic : ~9.0.0\n        \n            @angular/router : ~9.0.0\n        \n            @webcomponents/webcomponentsjs : ^2.4.1\n        \n            d3 : ^5.15.0\n        \n            document-register-element : ^1.7.2\n        \n            rxjs : ~6.5.4\n        \n            sass : ^1.25.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MessageEnum   (src/.../messages.enum.ts)\n                        \n                        \n                            MsgTypeEnum   (src/.../msg-type.enum.ts)\n                        \n                        \n                            ServiceUrls   (src/.../service-url.enum.ts)\n                        \n                        \n                            StorageKeys   (src/.../storage-keys.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enums/messages.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageEnum\n                    \n                \n                        \n                            \n                                 PROFILE_UPDATED\n                            \n                        \n                        \n                            \n                                Value : Profile has been updated.\n                            \n                        \n                        \n                            \n                                 SERVICE_FAILIRE\n                            \n                        \n                        \n                            \n                                Value : Unexpected service error occured.\n                            \n                        \n                        \n                            \n                                 NO_URL_FOUND\n                            \n                        \n                        \n                            \n                                Value : Requested service is not found\n                            \n                        \n            \n        \n\n    src/app/core/enums/msg-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MsgTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : check\n                            \n                        \n            \n        \n\n    src/app/core/enums/service-url.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ServiceUrls\n                    \n                \n                        \n                            \n                                 GET_ALL_USERS\n                            \n                        \n                        \n                            \n                                Value : allusers\n                            \n                        \n                        \n                            \n                                 GET_USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 SAVE_USER\n                            \n                        \n                        \n                            \n                                Value : saveuser\n                            \n                        \n                        \n                            \n                                 DELETE_USER\n                            \n                        \n                        \n                            \n                                Value : deleteuser\n                            \n                        \n            \n        \n\n    src/app/core/enums/storage-keys.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageKeys\n                    \n                \n                        \n                            \n                                 USER_PROFILES\n                            \n                        \n                        \n                            \n                                Value : USER_PROFILES\n                            \n                        \n                        \n                            \n                                 CURRENT_USER\n                            \n                        \n                        \n                            \n                                Value : CURRENT_USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgWeightWatchers\nThis project was generated with Angular CLI version 9.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonalDashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonalDashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_PersonalDashboardModule\n\n\n\ncluster_PersonalDashboardModule_declarations\n\n\n\ncluster_PersonalDashboardModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nCoreModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCoreModule->SharedModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nCoreModule->LoginComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nTopToolbarComponent \n\nTopToolbarComponent \n\nTopToolbarComponent  -->\n\nCoreModule->TopToolbarComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nPersonalDashboardModule\n\nPersonalDashboardModule\n\nPersonalDashboardModule -->\n\nCoreModule->PersonalDashboardModule\n\n\n\nAppModule -->\n\nFeaturesModule->AppModule\n\n\n\n\n\nLineChartComponent \n\nLineChartComponent \n\nLineChartComponent  -->\n\nFeaturesModule->LineChartComponent \n\n\n\n\n\nNameWeightCardComponent \n\nNameWeightCardComponent \n\nNameWeightCardComponent  -->\n\nFeaturesModule->NameWeightCardComponent \n\n\n\n\n\nProfileFormComponent \n\nProfileFormComponent \n\nProfileFormComponent  -->\n\nFeaturesModule->ProfileFormComponent \n\n\n\nHomeModule -->\n\nFeaturesModule->HomeModule\n\n\n\nPersonalDashboardModule -->\n\nFeaturesModule->PersonalDashboardModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\nNumbersonlyDirective \n\nNumbersonlyDirective \n\nNumbersonlyDirective  -->\n\nSharedModule->NumbersonlyDirective \n\n\n\n\n\nHttpMockInterceptor\n\nHttpMockInterceptor\n\nAppModule -->\n\nHttpMockInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nCoreModule -->\n\nLoginComponent->CoreModule\n\n\n\n\n\nMessagesComponent\n\nMessagesComponent\n\nCoreModule -->\n\nMessagesComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nCoreModule -->\n\nTopToolbarComponent->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nLineChartComponent\n\nLineChartComponent\n\nFeaturesModule -->\n\nLineChartComponent->FeaturesModule\n\n\n\n\n\nNameWeightCardComponent\n\nNameWeightCardComponent\n\nFeaturesModule -->\n\nNameWeightCardComponent->FeaturesModule\n\n\n\n\n\nProfileFormComponent\n\nProfileFormComponent\n\nFeaturesModule -->\n\nProfileFormComponent->FeaturesModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nPersonalDashboardComponent\n\nPersonalDashboardComponent\n\nPersonalDashboardModule -->\n\nPersonalDashboardComponent->PersonalDashboardModule\n\n\n\n\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardRoutingModule\n\nPersonalDashboardModule -->\n\nPersonalDashboardRoutingModule->PersonalDashboardModule\n\n\n\n\n\nNumbersonlyDirective\n\nNumbersonlyDirective\n\nSharedModule -->\n\nNumbersonlyDirective->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
